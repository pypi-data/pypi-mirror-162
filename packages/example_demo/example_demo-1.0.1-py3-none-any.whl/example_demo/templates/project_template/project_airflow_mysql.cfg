# ----------------------- AIRFLOW TEMPLATE BEGINS HERE -----------------------


; airflow 项目模板
; 区别普通项目于，需要生成对应的项目主文件 dag，项目流程依靠dag 内task
; dag读取配置信息，依据配置信息，驱动流程task
; cfg 项： airflow项目dag 基本信息
# 基本task:整理数据源task


[project]
;项目名称 不可为空
name =

[debug]
enable = 1

[source_get]
; 是否自定义
customize = False
;# 是否打开 task_get_source_info，默认打开
;task_enable = True
;default yestoday;  now 为当天；也可自定义日期，date_format格式
date =
;default %Y-%m-%d
date_format =

#检查数据是否已输出
check = False

# 数据源获取的下载方式 （支持 sftp, ftp; api_get,api_get_file(get请求直接下载文件转存）; mysql)
# 多种的话customize = True 自定义
request_type = mysql

# airflow connect_id
connect_id =

[mysql]
;enable =
;host =
;port 3306
;port = 3306
;user =
;password =
;db =
;
;connect_url =

source_get_sql =
source_get_sql_param =


[dag]
# airflow.DAG 信息配置 ，default_args 和其他必要参数
# https://airflow.apache.org/docs/apache-airflow
;项目名称, 默认为项目名称project_name
id =

; 不可为空
owner =

;项目描述 可为空
;description =

;项目 标签（分类）,可多个，“;” 分割
;tag=

;调度时间 支持crontab时间格式 不可为空
schedule_interval =

#此参数和调度时间有关，是否从start_date 开始启动，默认False 会从当前时间开始
catchup=False

# dag 项目开始日期，默认为前一天。自定义格式为[source_get] date_format中设置格式，比如date_format默认为%Y-%m-%d，可设 2022-07-06
# 和catchup 配合使用，一般不修改。 作用示例：catchup=True ,当前时间2022-07-22，设置 start_date为 2022-07-06，那么计划任务会从7.6开始执行
;start_date =

;#是否依赖于过去。如果为True，那么必须要前次的DAG执行成功了，此次的DAG才能执行。 默认False
;depends_on_past = False


; dag 运行超时设置，  timedelta参数 （days=, seconds=, microseconds=, milliseconds=, minutes=, hours=, weeks=)
dagrun_timeout = minutes=60;


;邮件发送 接受人 默认为[email] to中所填
email_receivers=

;任务失败且重试次数用完时是否发送Email。
;email_on_failure = True

;任务重试时是否发送Email
;email_on_retry = False

; 失败重试次数
;retries = 1

; 失败重试间隔
;retry_delay = seconds=5;




[email]
enable =
; 邮箱服务器
host =
; 发件人
from =
;发件用户名
user_name =
; 收件人
to =
; 抄送
cc =
; 标题的格式化
subject =
;文件提醒邮件，默认是打开 True or False
file_report = True
content =

[pipeline]
fr_enable =
redis_server_ip =
redis_server_port =
proxy_ip =
domain_name =
check_key =
project_name =
;path =
;key_head =

[tel]
enable =
;联系人
contacts =
;发起人
optname =

sub_data_type =
remind_info =
;模板目前固定为2
template_no = 2

status =
calltimes =
;用来记录打电话的备注，可为空
memo =


[file]
# 下载文件 支持多个，";" 分号分割
download_all =
# 单个下载文件，内部使用的变量名，自定义数据源时需用来作为变量名
# download =
# 文件下载的最小内存，若小于设定的值，视为下载不成功
load_minsize =
# target_download_path 下载目标路径(目录dir级别）；target_download_fpath文件级别；默认为 file_target_download_path + download_files
target_download_path =
# target_download_fpath =
# 实际下载目标路径(部分场景在上报文件状态时需要实际路径real,不带real 的路径为程序中的下载路径可能为挂载目录（容器或者本机）
# real_file_target_download_path 到目录; file_target_download_fpath文件级别
real_target_download_path =
# real_target_download_fpath =
# 下载解压路径
unzip_out_path =
# 下载源路径（通常是ftp，sftp）目录；load_file_from 默认为 load_dir_from + download_files
load_dir_from =
load_file_from =
# 下载本地缓存路径（如有必要）
local_load_dir_cache =
# 对缓存文件的处理，会将缓存文件转存入 SOURCE_FILE_TARGET_DOWNLOAD_PATH，默认关闭  True or False
cache_copy_enable = False
# 对缓存文件的处理，会在程序结束时将缓存文件删除，默认关闭  True or False
cache_del_enable = False


# 下载测试路径
load_test_path =


;模板化解析,处理的是下载后的数据
[parse_init]