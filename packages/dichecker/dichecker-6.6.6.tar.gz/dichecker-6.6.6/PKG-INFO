Metadata-Version: 2.1
Name: dichecker
Version: 6.6.6
Summary: A runtime checker for modern TypedDicts
Home-page: https://github.com/ooliver1/dichecker
License: MIT
Author: ooliver1
Author-email: oliverwilkes2006@icloud.com
Requires-Python: >=3.8,<4.0
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Typing :: Typed
Requires-Dist: typing-extensions (>=4.1.0,<5.0.0)
Project-URL: Repository, https://github.com/ooliver1/dichecker
Description-Content-Type: text/markdown

# dichecker

A runtime checker for modern TypedDicts

## Supported Typings

- `Any`
- `dict`
- `Dict`
- `List`
- `list`
- `Literal`
- `NotRequired`
- `None`
- `Optional`
- `T | ...`
- `TypedDict`
- `Union`
- `str` (and all other normal classes)

## How To Use

### Install

```bash
pip install dichecker
# or
poetry add dichecker
```

### Add To Code

```py
from typing import Any, Optional, TypedDict

from typing_extensions import NotRequired

from dichecker import check_hints


class MyCoolType(TypedDict):
    anything: NotRequired[You]
    want: Optional[Really]
    this: IsJust | An | Example


def function(not_verified_dict: Any) -> MyCoolType:
    return check_hints(MyCoolType, not_verified_dict)
```

