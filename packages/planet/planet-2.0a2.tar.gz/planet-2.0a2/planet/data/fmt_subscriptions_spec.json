{
  "components": {
    "parameters": {
      "PageMarkerParameter": {
        "in": "query",
        "name": "page_marker",
        "schema": {
          "format": "date-time",
          "type": "string"
        }
      },
      "PageSizeParameter": {
        "in": "query",
        "name": "page_size",
        "schema": {
          "format": "int32",
          "maximum": 10000,
          "minimum": 0,
          "type": "integer"
        }
      },
      "UserIDParameter": {
        "description": "When set to 'all', returns information about subscriptions created by all users in the organization. Only allowed if the user has sufficient permissions.",
        "in": "query",
        "name": "user_id",
        "schema": {
          "enum": [
            "all"
          ],
          "type": "string"
        }
      }
    },
    "schemas": {
      "AWSDeliverySimple": {
        "additionalProperties": false,
        "description": "Amazon S3 destination details",
        "properties": {
          "parameters": {
            "additionalProperties": false,
            "properties": {
              "aws_access_key_id": {
                "description": "S3 account access key.",
                "type": "string"
              },
              "aws_region": {
                "description": "AWS region bucket resides in.",
                "type": "string"
              },
              "aws_secret_access_key": {
                "description": "S3 account secret key.",
                "type": "string"
              },
              "bucket": {
                "description": "S3 bucket to send results",
                "type": "string"
              }
            },
            "required": [
              "bucket",
              "aws_region",
              "aws_access_key_id",
              "aws_secret_access_key"
            ],
            "type": "object"
          },
          "type": {
            "enum": [
              "amazon_s3"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "parameters"
        ],
        "title": "AWS",
        "type": "object"
      },
      "AzureDeliverySimple": {
        "additionalProperties": false,
        "description": "Azure blob storage details.",
        "properties": {
          "parameters": {
            "additionalProperties": false,
            "properties": {
              "account": {
                "description": "Azure account.",
                "type": "string"
              },
              "container": {
                "description": "Blob storage container name.",
                "type": "string"
              },
              "sas_token": {
                "description": "Shared-Access Signature token.",
                "type": "string"
              },
              "storage_endpoint_suffix": {
                "description": "The storage endpoint suffix.",
                "type": "string"
              }
            },
            "required": [
              "account",
              "container",
              "sas_token"
            ],
            "type": "object"
          },
          "type": {
            "enum": [
              "azure_blob_storage"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "parameters"
        ],
        "title": "Azure",
        "type": "object"
      },
      "DAPIFilterSimple": {
        "additionalProperties": false,
        "description": "A filter based on the Data API catalog search",
        "properties": {
          "parameters": {
            "additionalProperties": false,
            "properties": {
              "asset_types": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "end_time": {
                "format": "date-time",
                "type": "string"
              },
              "filter": {
                "type": "object"
              },
              "geometry": {
                "type": "object"
              },
              "item_types": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "rrule": {
                "description": "Recurrence rule (iCalendar RFC 5545)",
                "example": "FREQ=MONTHLY;BYMONTH=3,4,5,6,7",
                "type": "string"
              },
              "start_time": {
                "format": "date-time",
                "type": "string"
              }
            },
            "required": [
              "item_types",
              "asset_types"
            ],
            "type": "object"
          },
          "type": {
            "enum": [
              "catalog"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "parameters"
        ],
        "title": "Catalog",
        "type": "object"
      },
      "Error": {
        "properties": {
          "code": {
            "format": "int32",
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "type": "object"
      },
      "GCSDeliverySimple": {
        "additionalProperties": false,
        "description": "Credentials and bucket for delivery to Google Cloud",
        "properties": {
          "parameters": {
            "additionalProperties": false,
            "properties": {
              "bucket": {
                "description": "GCS bucket name.",
                "type": "string"
              },
              "credentials": {
                "description": "JSON-string of service account for bucket.",
                "type": "string"
              }
            },
            "required": [
              "bucket",
              "credentials"
            ],
            "type": "object"
          },
          "type": {
            "enum": [
              "google_cloud_storage"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "parameters"
        ],
        "title": "GCS",
        "type": "object"
      },
      "NotificationEmail": {
        "additionalProperties": false,
        "description": "An email address to receive notifications",
        "properties": {
          "parameters": {
            "additionalProperties": false,
            "properties": {
              "email": {
                "format": "email",
                "type": "string"
              }
            },
            "required": [
              "email"
            ],
            "type": "object"
          },
          "type": {
            "enum": [
              "email"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "parameters"
        ],
        "title": "Email",
        "type": "object"
      },
      "NotificationTopics": {
        "enum": [
          "delivery.success",
          "delivery.match",
          "delivery.failed",
          "status.backfill.completed",
          "status.completed",
          "status.cancelled",
          "status.pending",
          "status.all",
          "status.suspended",
          "status.failed"
        ],
        "type": "string"
      },
      "NotificationWebhook": {
        "additionalProperties": false,
        "description": "An webhook URL to receive notifications",
        "properties": {
          "parameters": {
            "additionalProperties": false,
            "properties": {
              "url": {
                "format": "uri",
                "type": "string"
              }
            },
            "required": [
              "url"
            ],
            "type": "object"
          },
          "type": {
            "enum": [
              "webhook"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "parameters"
        ],
        "title": "Webhook",
        "type": "object"
      },
      "OCSDeliverySimple": {
        "additionalProperties": false,
        "description": "Oracle Cloud Storage destination details",
        "properties": {
          "parameters": {
            "additionalProperties": false,
            "properties": {
              "bucket": {
                "description": "Oracle bucket to send results.",
                "type": "string"
              },
              "customer_access_key_id": {
                "description": "Oracle account access key.",
                "type": "string"
              },
              "customer_secret_key": {
                "description": "Oracle account secret key.",
                "type": "string"
              },
              "namespace": {
                "description": "Oracle Object Storage namespace.",
                "type": "string"
              },
              "region": {
                "description": "Oracle region bucket resides in.",
                "type": "string"
              }
            },
            "required": [
              "bucket",
              "customer_access_key_id",
              "customer_secret_key",
              "region",
              "namespace"
            ],
            "type": "object"
          },
          "type": {
            "enum": [
              "oracle_cloud_storage"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "parameters"
        ],
        "title": "OCS",
        "type": "object"
      },
      "ResultsResponse": {
        "properties": {
          "_links": {
            "properties": {
              "_next": {
                "description": "RFC 3986 URI representing the location of the next page of results. Omitted when there are no results, or the current page is the last.",
                "type": "string"
              },
              "_self": {
                "description": "RFC 3986 URI representing the location of this object.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "completed": {
            "format": "date-time",
            "type": "string"
          },
          "created": {
            "format": "date-time",
            "type": "string"
          },
          "errors": {
            "properties": {
              "details": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "reason": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "outputs": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "properties": {
            "type": "object"
          },
          "status": {
            "type": "string"
          },
          "updated": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Subscription": {
        "properties": {
          "created": {
            "format": "date-time",
            "type": "string"
          },
          "delivery": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/GCSDeliverySimple"
              },
              {
                "$ref": "#/components/schemas/AWSDeliverySimple"
              },
              {
                "$ref": "#/components/schemas/AzureDeliverySimple"
              },
              {
                "$ref": "#/components/schemas/OCSDeliverySimple"
              }
            ],
            "type": "object"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "source": {
            "description": "A source for the subscription, i.e. catalog",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DAPIFilterSimple"
              }
            ],
            "type": "object"
          },
          "status": {
            "type": "string"
          },
          "tools": {
            "description": "A list of blocks for processing items obtained from 'source'.",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TransformClipSimple"
                },
                {
                  "$ref": "#/components/schemas/TransformReproject"
                },
                {
                  "$ref": "#/components/schemas/TransformBandmath"
                },
                {
                  "$ref": "#/components/schemas/TransformHarmonize"
                },
                {
                  "$ref": "#/components/schemas/TransformToar"
                },
                {
                  "$ref": "#/components/schemas/TransformFileFormat"
                }
              ]
            },
            "type": "array"
          },
          "updated": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SubscriptionRequestSimple": {
        "additionalProperties": false,
        "description": "Subscription Request",
        "properties": {
          "delivery": {
            "description": "A delivery mechanism.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/GCSDeliverySimple"
              },
              {
                "$ref": "#/components/schemas/AWSDeliverySimple"
              },
              {
                "$ref": "#/components/schemas/AzureDeliverySimple"
              },
              {
                "$ref": "#/components/schemas/OCSDeliverySimple"
              }
            ],
            "type": "object"
          },
          "name": {
            "description": "Name of the request",
            "type": "string"
          },
          "notifications": {
            "description": "Specify notifcations via email/webhook",
            "properties": {
              "webhook": {
                "$ref": "#/components/schemas/Webhook"
              }
            },
            "type": "object"
          },
          "source": {
            "description": "A source for the subscription, i.e. catalog",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DAPIFilterSimple"
              }
            ],
            "type": "object"
          },
          "tools": {
            "description": "A list of blocks for processing items obtained from 'source'.",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TransformClipSimple"
                },
                {
                  "$ref": "#/components/schemas/TransformReproject"
                },
                {
                  "$ref": "#/components/schemas/TransformBandmath"
                },
                {
                  "$ref": "#/components/schemas/TransformHarmonize"
                },
                {
                  "$ref": "#/components/schemas/TransformToar"
                },
                {
                  "$ref": "#/components/schemas/TransformFileFormat"
                }
              ]
            },
            "type": "array"
          }
        },
        "required": [
          "name",
          "source",
          "delivery"
        ],
        "type": "object"
      },
      "SubscriptionResponse": {
        "$ref": "#/components/schemas/Subscription"
      },
      "TransformBandmath": {
        "additionalProperties": false,
        "description": "Apply band math expressions to images",
        "properties": {
          "parameters": {
            "additionalProperties": false,
            "properties": {
              "b1": {
                "type": "string"
              },
              "b10": {
                "type": "string"
              },
              "b11": {
                "type": "string"
              },
              "b12": {
                "type": "string"
              },
              "b13": {
                "type": "string"
              },
              "b14": {
                "type": "string"
              },
              "b15": {
                "type": "string"
              },
              "b2": {
                "type": "string"
              },
              "b3": {
                "type": "string"
              },
              "b4": {
                "type": "string"
              },
              "b5": {
                "type": "string"
              },
              "b6": {
                "type": "string"
              },
              "b7": {
                "type": "string"
              },
              "b8": {
                "type": "string"
              },
              "b9": {
                "type": "string"
              },
              "pixel_type": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": {
            "enum": [
              "bandmath"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "parameters"
        ],
        "title": "TransformBandmath",
        "type": "object"
      },
      "TransformClipSimple": {
        "additionalProperties": false,
        "description": "Provide a clipping AOI for items.",
        "properties": {
          "parameters": {
            "additionalProperties": false,
            "properties": {
              "aoi": {
                "type": "object"
              }
            },
            "required": [
              "aoi"
            ],
            "type": "object"
          },
          "type": {
            "enum": [
              "clip"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "parameters"
        ],
        "title": "TransformClip",
        "type": "object"
      },
      "TransformFileFormat": {
        "additionalProperties": false,
        "description": "Convert imagery to Cloud Optimized GeoTIFF or NITF formats",
        "properties": {
          "parameters": {
            "additionalProperties": false,
            "properties": {
              "format": {
                "type": "string"
              }
            },
            "required": [
              "format"
            ],
            "type": "object"
          },
          "type": {
            "enum": [
              "file_format"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "parameters"
        ],
        "title": "TransformFileFormat",
        "type": "object"
      },
      "TransformHarmonize": {
        "additionalProperties": false,
        "description": "Radiometrically harmonize imagery to a different sensor. Currently Sentinel-2 the only supported target sensor.",
        "properties": {
          "parameters": {
            "additionalProperties": false,
            "properties": {
              "target_sensor": {
                "type": "string"
              }
            },
            "required": [
              "target_sensor"
            ],
            "type": "object"
          },
          "type": {
            "enum": [
              "harmonize"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "parameters"
        ],
        "title": "TransformHarmonize",
        "type": "object"
      },
      "TransformReproject": {
        "additionalProperties": false,
        "description": "Provide desired projection for imagery assets",
        "properties": {
          "parameters": {
            "additionalProperties": false,
            "properties": {
              "kernel": {
                "type": "string"
              },
              "projection": {
                "type": "string"
              },
              "resolution": {
                "format": "float",
                "type": "number"
              }
            },
            "required": [
              "projection"
            ],
            "type": "object"
          },
          "type": {
            "enum": [
              "reproject"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "parameters"
        ],
        "title": "TransformReproject",
        "type": "object"
      },
      "TransformToar": {
        "additionalProperties": false,
        "description": "Convert analytic imagery products to top of atmosphere reflectance products",
        "properties": {
          "parameters": {
            "additionalProperties": false,
            "properties": {
              "scale_factor": {
                "default": 10000,
                "type": "integer"
              }
            },
            "type": "object"
          },
          "type": {
            "enum": [
              "toar"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "parameters"
        ],
        "title": "TransformToar",
        "type": "object"
      },
      "Webhook": {
        "additionalProperties": false,
        "description": "Set params for webhook notifications",
        "properties": {
          "topics": {
            "items": {
              "$ref": "#/components/schemas/NotificationTopics"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": true
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "required": [
          "url",
          "topics"
        ],
        "title": "Webhook notification",
        "type": "object"
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "in": "header",
        "name": "Authorization",
        "type": "apiKey"
      },
      "BasicAuth": {
        "scheme": "basic",
        "type": "http"
      }
    }
  },
  "info": {
    "title": "Planet Subscriptions service API",
    "version": "1.0.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "/subscriptions/v1": {
      "get": {
        "operationId": "listSubscriptions",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageMarkerParameter"
          },
          {
            "$ref": "#/components/parameters/PageSizeParameter"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "enum": [
                "running",
                "cancelled",
                "preparing",
                "pending",
                "completed",
                "suspended",
                "failed"
              ],
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/UserIDParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "_links": {
                      "properties": {
                        "_self": {
                          "description": "RFC 3986 URI representing the location of this object.",
                          "type": "string"
                        },
                        "next": {
                          "description": "RFC 3986 URI representing the location of the next page of results. Omitted when there are no results, or the current page is the last.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "subscriptions": {
                      "items": {
                        "$ref": "#/components/schemas/SubscriptionResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "A paged array of subscriptions"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "List all subscriptions",
        "tags": [
          "subscriptions"
        ]
      },
      "post": {
        "operationId": "createSubscription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionRequestSimple"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            },
            "description": "A subscription response"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Create a subscription",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/subscriptions/v1/{subscriptionId}": {
      "get": {
        "operationId": "getSubscription",
        "parameters": [
          {
            "$ref": "#/components/parameters/UserIDParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            },
            "description": "A subscription response"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get a subscription",
        "tags": [
          "subscriptions"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "subscriptionId",
          "required": true,
          "schema": {
            "format": "uuid",
            "type": "string"
          }
        }
      ],
      "put": {
        "operationId": "updateSubscription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionRequestSimple"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            },
            "description": "A subscription response"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Update a subscription",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/subscriptions/v1/{subscriptionId}/cancel": {
      "parameters": [
        {
          "in": "path",
          "name": "subscriptionId",
          "required": true,
          "schema": {
            "format": "uuid",
            "type": "string"
          }
        }
      ],
      "post": {
        "operationId": "cancelSubscription",
        "responses": {
          "200": {
            "description": "Null response"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Cancel subscriptions",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/subscriptions/v1/{subscriptionId}/results": {
      "get": {
        "operationId": "getResults",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageMarkerParameter"
          },
          {
            "$ref": "#/components/parameters/PageSizeParameter"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "enum": [
                "created",
                "queued",
                "processing",
                "failed",
                "success"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "created",
            "schema": {
              "description": "Only return results that were created in the given interval or instant.\nThe time can be a closed interval (e.g. `2019-01-01T00:00:00.00Z/2019-02-01T00:00:00.00Z`\nfor the month of January), an open interval (e.g. `2019-01-01T00:00:00.00Z/..` for all\nresults in January or later and `../2019-01-01T00:00:00.00Z` for all results before January),\nor an instant (e.g. `2019-01-01T00:00:00.00Z`).  Start times for intervals are\ninclusive, and end times are exclusive.\n",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "updated",
            "schema": {
              "description": "Only return results that were updated in the given interval or instant.\n",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "completed",
            "schema": {
              "description": "Only return results that were completed in the given interval or instant.\n",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/UserIDParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsResponse"
                }
              }
            },
            "description": "A page of results"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "unexpected error"
          }
        },
        "summary": "Get results for a given subscription",
        "tags": [
          "results"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "subscriptionId",
          "required": true,
          "schema": {
            "format": "uuid",
            "type": "string"
          }
        }
      ]
    }
  },
  "schemes": {
    "type": "https"
  },
  "servers": [
    {
      "url": "https://api.planet.com"
    }
  ]
}
