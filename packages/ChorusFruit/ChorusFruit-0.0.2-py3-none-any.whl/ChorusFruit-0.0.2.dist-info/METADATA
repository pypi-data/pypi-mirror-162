Metadata-Version: 2.1
Name: ChorusFruit
Version: 0.0.2
Summary: This module is a replacement for curses module
Author-email: "mani.f" <author@example.com>
Project-URL: Homepage, https://github.com/manifarizi/ChorusFruit
Project-URL: Bug Tracker, https://github.com/manifarizi/ChorusFruit/issues
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENCE

**This module is in alpha test!**
hi my name is mani, and i want to show you what you can do with 'ChorusFruit' python module
***This module is a replacement for curses module***
#Tutorial:
###Installation
****
you  can just `pip install` it
or for source code You can download source code from [my Github](https:\\github.com\mani_farizi)
###Using it
****
#####First 'Hello World!'
Hello World is Very Simple
```python 
#Importing module
import ChorusFruit
scr = ChorusFruit.Screen()
#Outputing on Screen with Y of 0 and x of 0
scr.write(0, 0, 'Hello World!')
#That means in First Line and First Column Type 'Hello World!'
```
or
```python 
#Importing module
import ChorusFruit
def main(self)
    #Outputing on Screen with Y of 0 and x of 0
    self.write(0, 0, 'Hello World!')
    #That means in First Line and First Column Type 'Hello World!'
main(ChorusFruit.screen())
#This Line Runs the Code
```
If You Want to print in Last Line you can 
```python 
self.write(None, None, 'Hello World!')
```
But If you Want to print on a X and Y you can
```python
self.write(X, Y, 'Hello World!')
```
#####Boxes and Lines
For crating a border around the screen you can
```python
self.boxborder('┌─┐││└─┘')
# With this Code You can Create a Border But if you resize the screen the code is not working corect
#for making it better you can
import ChorusFruit
def main(self):
    while True:
        self.boxborder('┌─┐││└─┘')
        self.reset()
main(ChorusFruit.screen())
#This Code is Working Fine
```
```text
┌─────────────────────────────────────────────────────┐
│                                                     │
│                                                     │
│                                                     │
│                                                     │
│                                                     │
│                                                     │
└─────────────────────────────────────────────────────┘
```
it Works like this
For crating a box you can
```python
import ChorusFruit
def main(self):
        self.box(0, 1, 10, 10, '┌─┐││└─┘')
main(ChorusFruit.screen())
```
This Code Returns this
```text
┌────────┐
│        │
│        │
│        │
│        │
│        │
│        │
│        │
│        │
└────────┘
```
For crating a Vertical line use:
```python
Screen().vLine(0, 1, 5)
```
For crating a Horizontal line use:
```python
Screen().hLine(0, 1, 5)
```
#####Others
Moving UP
```python
scr.UP()
```
Moving DOWN
```python
scr.DOWN()
```
Clearing Screen
```python
scr.clear()
```
writing a text with color:
```python
self.write(0, 0, 'This text is RED', 'fore_red')
```
##and so much More in the Future
