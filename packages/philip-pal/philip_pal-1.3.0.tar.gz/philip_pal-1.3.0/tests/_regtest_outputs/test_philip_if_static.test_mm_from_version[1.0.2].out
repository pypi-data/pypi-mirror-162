{'adc.counter': {'access': 0,
                 'array_size': '',
                 'bit_offset': '',
                 'bits': '',
                 'default': '',
                 'description': 'Sum counter increases when available',
                 'flag': 'VOLATILE',
                 'invalid': '',
                 'max': '',
                 'min': '',
                 'name': 'adc.counter',
                 'offset': 468,
                 'total_size': '',
                 'type': 'uint8_t',
                 'type_size': 1},
 'adc.current_sum': {'access': 0,
                     'array_size': '',
                     'bit_offset': '',
                     'bits': '',
                     'default': '',
                     'description': 'Current collection of the sums',
                     'flag': 'VOLATILE',
                     'invalid': '',
                     'max': '',
                     'min': '',
                     'name': 'adc.current_sum',
                     'offset': 464,
                     'total_size': '',
                     'type': 'uint32_t',
                     'type_size': 4},
 'adc.dut_adc.io_type': {'access': 1,
                         'array_size': '',
                         'bit_offset': 0,
                         'bits': 2,
                         'default': '',
                         'description': '0:high impedance input - 1:push pull '
                                        'output - 2:open drain output',
                         'flag': '',
                         'invalid': '',
                         'max': '',
                         'min': '',
                         'name': 'adc.dut_adc.io_type',
                         'offset': 449,
                         'total_size': '',
                         'type': '',
                         'type_size': 1},
 'adc.dut_adc.level': {'access': 1,
                       'array_size': '',
                       'bit_offset': 5,
                       'bits': 1,
                       'default': '',
                       'description': 'Current value of gpio - 0:low - 1:high',
                       'flag': '',
                       'invalid': '',
                       'max': '',
                       'min': '',
                       'name': 'adc.dut_adc.level',
                       'offset': 449,
                       'total_size': '',
                       'type': '',
                       'type_size': 1},
 'adc.dut_adc.pull': {'access': 1,
                      'array_size': '',
                      'bit_offset': 2,
                      'bits': 2,
                      'default': '',
                      'description': 'pull of the resistor - 0:none - 1:pullup '
                                     '- 2:pulldown',
                      'flag': '',
                      'invalid': '',
                      'max': '',
                      'min': '',
                      'name': 'adc.dut_adc.pull',
                      'offset': 449,
                      'total_size': '',
                      'type': '',
                      'type_size': 1},
 'adc.dut_adc.res': {'access': 1,
                     'array_size': '',
                     'bit_offset': 6,
                     'bits': 2,
                     'default': '',
                     'description': 'Reserved bits',
                     'flag': '',
                     'invalid': '',
                     'max': '',
                     'min': '',
                     'name': 'adc.dut_adc.res',
                     'offset': 449,
                     'total_size': '',
                     'type': '',
                     'type_size': 1},
 'adc.dut_adc.set_level': {'access': 1,
                           'array_size': '',
                           'bit_offset': 4,
                           'bits': 1,
                           'default': '',
                           'description': 'If output sets gpio level - 0:low - '
                                          '1:high',
                           'flag': '',
                           'invalid': '',
                           'max': '',
                           'min': '',
                           'name': 'adc.dut_adc.set_level',
                           'offset': 449,
                           'total_size': '',
                           'type': '',
                           'type_size': 1},
 'adc.index': {'access': 0,
               'array_size': '',
               'bit_offset': '',
               'bits': '',
               'default': '',
               'description': 'Sample index increases when new sample read',
               'flag': 'VOLATILE',
               'invalid': '',
               'max': '',
               'min': '',
               'name': 'adc.index',
               'offset': 454,
               'total_size': '',
               'type': 'uint32_t',
               'type_size': 4},
 'adc.mode.disable': {'access': 1,
                      'array_size': '',
                      'bit_offset': 1,
                      'bits': 1,
                      'default': '',
                      'description': '0:periph is enabled - 1:periph is '
                                     'disabled',
                      'flag': '',
                      'invalid': '',
                      'max': '',
                      'min': '',
                      'name': 'adc.mode.disable',
                      'offset': 448,
                      'total_size': '',
                      'type': '',
                      'type_size': 1},
 'adc.mode.fast_sample': {'access': 1,
                          'array_size': '',
                          'bit_offset': 2,
                          'bits': 1,
                          'default': '',
                          'description': '0:slow sample rate - 1:fastest '
                                         'sample rate',
                          'flag': '',
                          'invalid': '',
                          'max': '',
                          'min': '',
                          'name': 'adc.mode.fast_sample',
                          'offset': 448,
                          'total_size': '',
                          'type': '',
                          'type_size': 1},
 'adc.mode.init': {'access': 1,
                   'array_size': '',
                   'bit_offset': 0,
                   'bits': 1,
                   'default': '',
                   'description': '0:periph will initialize on execute - '
                                  '1:periph initialized',
                   'flag': '',
                   'invalid': '',
                   'max': '',
                   'min': '',
                   'name': 'adc.mode.init',
                   'offset': 448,
                   'total_size': '',
                   'type': '',
                   'type_size': 1},
 'adc.mode.res': {'access': 1,
                  'array_size': '',
                  'bit_offset': 3,
                  'bits': 5,
                  'default': '',
                  'description': 'Reserved bits',
                  'flag': '',
                  'invalid': '',
                  'max': '',
                  'min': '',
                  'name': 'adc.mode.res',
                  'offset': 448,
                  'total_size': '',
                  'type': '',
                  'type_size': 1},
 'adc.num_of_samples': {'access': 1,
                        'array_size': '',
                        'bit_offset': '',
                        'bits': '',
                        'default': 1024,
                        'description': 'Number of sample in the sum',
                        'flag': '',
                        'invalid': '',
                        'max': 1048575,
                        'min': 0,
                        'name': 'adc.num_of_samples',
                        'offset': 450,
                        'total_size': '',
                        'type': 'uint32_t',
                        'type_size': 4},
 'adc.res': {'access': 0,
             'array_size': 11,
             'bit_offset': '',
             'bits': '',
             'default': '',
             'description': 'Reserved bytes',
             'flag': '',
             'invalid': '',
             'max': '',
             'min': '',
             'name': 'adc.res',
             'offset': 469,
             'total_size': 11,
             'type': 'uint8_t',
             'type_size': 1},
 'adc.sample': {'access': 0,
                'array_size': '',
                'bit_offset': '',
                'bits': '',
                'default': '',
                'description': 'Current 12 bit sample value',
                'flag': 'VOLATILE',
                'invalid': '',
                'max': '',
                'min': '',
                'name': 'adc.sample',
                'offset': 458,
                'total_size': '',
                'type': 'uint16_t',
                'type_size': 2},
 'adc.sum': {'access': 0,
             'array_size': '',
             'bit_offset': '',
             'bits': '',
             'default': '',
             'description': 'Sum of the last num_of_samples',
             'flag': 'VOLATILE',
             'invalid': '',
             'max': '',
             'min': '',
             'name': 'adc.sum',
             'offset': 460,
             'total_size': '',
             'type': 'uint32_t',
             'type_size': 4},
 'dac.dut_dac.io_type': {'access': 1,
                         'array_size': '',
                         'bit_offset': 0,
                         'bits': 2,
                         'default': '',
                         'description': '0:high impedance input - 1:push pull '
                                        'output - 2:open drain output',
                         'flag': '',
                         'invalid': '',
                         'max': '',
                         'min': '',
                         'name': 'dac.dut_dac.io_type',
                         'offset': 513,
                         'total_size': '',
                         'type': '',
                         'type_size': 1},
 'dac.dut_dac.level': {'access': 1,
                       'array_size': '',
                       'bit_offset': 5,
                       'bits': 1,
                       'default': '',
                       'description': 'Current value of gpio - 0:low - 1:high',
                       'flag': 'VOLATILE',
                       'invalid': '',
                       'max': '',
                       'min': '',
                       'name': 'dac.dut_dac.level',
                       'offset': 513,
                       'total_size': '',
                       'type': '',
                       'type_size': 1},
 'dac.dut_dac.pull': {'access': 1,
                      'array_size': '',
                      'bit_offset': 2,
                      'bits': 2,
                      'default': '',
                      'description': 'pull of the resistor - 0:none - 1:pullup '
                                     '- 2:pulldown',
                      'flag': '',
                      'invalid': '',
                      'max': '',
                      'min': '',
                      'name': 'dac.dut_dac.pull',
                      'offset': 513,
                      'total_size': '',
                      'type': '',
                      'type_size': 1},
 'dac.dut_dac.res': {'access': 1,
                     'array_size': '',
                     'bit_offset': 6,
                     'bits': 2,
                     'default': '',
                     'description': 'Reserved bits',
                     'flag': '',
                     'invalid': '',
                     'max': '',
                     'min': '',
                     'name': 'dac.dut_dac.res',
                     'offset': 513,
                     'total_size': '',
                     'type': '',
                     'type_size': 1},
 'dac.dut_dac.set_level': {'access': 1,
                           'array_size': '',
                           'bit_offset': 4,
                           'bits': 1,
                           'default': '',
                           'description': 'If output sets gpio level - 0:low - '
                                          '1:high',
                           'flag': '',
                           'invalid': '',
                           'max': '',
                           'min': '',
                           'name': 'dac.dut_dac.set_level',
                           'offset': 513,
                           'total_size': '',
                           'type': '',
                           'type_size': 1},
 'dac.level': {'access': 1,
               'array_size': '',
               'bit_offset': '',
               'bits': '',
               'default': 5000,
               'description': 'The percent/100 of output level',
               'flag': '',
               'invalid': '',
               'max': '',
               'min': '',
               'name': 'dac.level',
               'offset': 514,
               'total_size': '',
               'type': 'uint16_t',
               'type_size': 2},
 'dac.mode.disable': {'access': 1,
                      'array_size': '',
                      'bit_offset': 1,
                      'bits': 1,
                      'default': '',
                      'description': '0:periph is enabled - 1:periph is '
                                     'disabled',
                      'flag': '',
                      'invalid': '',
                      'max': '',
                      'min': '',
                      'name': 'dac.mode.disable',
                      'offset': 512,
                      'total_size': '',
                      'type': '',
                      'type_size': 1},
 'dac.mode.init': {'access': 1,
                   'array_size': '',
                   'bit_offset': 0,
                   'bits': 1,
                   'default': '',
                   'description': '0:periph will initialize on execute - '
                                  '1:periph initialized',
                   'flag': '',
                   'invalid': '',
                   'max': '',
                   'min': '',
                   'name': 'dac.mode.init',
                   'offset': 512,
                   'total_size': '',
                   'type': '',
                   'type_size': 1},
 'dac.mode.res': {'access': 1,
                  'array_size': '',
                  'bit_offset': 2,
                  'bits': 6,
                  'default': '',
                  'description': 'Reserved bits',
                  'flag': '',
                  'invalid': '',
                  'max': '',
                  'min': '',
                  'name': 'dac.mode.res',
                  'offset': 512,
                  'total_size': '',
                  'type': '',
                  'type_size': 1},
 'dac.res': {'access': 0,
             'array_size': 12,
             'bit_offset': '',
             'bits': '',
             'default': '',
             'description': 'Reserved bytes',
             'flag': '',
             'invalid': '',
             'max': '',
             'min': '',
             'name': 'dac.res',
             'offset': 516,
             'total_size': 12,
             'type': 'uint8_t',
             'type_size': 1},
 'gpio[0].mode.init': {'access': 1,
                       'array_size': '',
                       'bit_offset': 0,
                       'bits': 1,
                       'default': '',
                       'description': '0:periph will initialize on execute - '
                                      '1:periph initialized',
                       'flag': '',
                       'invalid': '',
                       'max': '',
                       'min': '',
                       'name': 'gpio[0].mode.init',
                       'offset': 540,
                       'total_size': '',
                       'type': '',
                       'type_size': 2},
 'gpio[0].mode.io_type': {'access': 1,
                          'array_size': '',
                          'bit_offset': 1,
                          'bits': 2,
                          'default': '',
                          'description': '0:high impedance input - 1:push pull '
                                         'output - 2:open drain output - '
                                         '3:interrupts and saves event',
                          'flag': '',
                          'invalid': '',
                          'max': '',
                          'min': '',
                          'name': 'gpio[0].mode.io_type',
                          'offset': 540,
                          'total_size': '',
                          'type': '',
                          'type_size': 2},
 'gpio[0].mode.level': {'access': 1,
                        'array_size': '',
                        'bit_offset': 3,
                        'bits': 1,
                        'default': '',
                        'description': 'If output sets gpio level - 0:low - '
                                       '1:high',
                        'flag': '',
                        'invalid': '',
                        'max': '',
                        'min': '',
                        'name': 'gpio[0].mode.level',
                        'offset': 540,
                        'total_size': '',
                        'type': '',
                        'type_size': 2},
 'gpio[0].mode.pull': {'access': 1,
                       'array_size': '',
                       'bit_offset': 4,
                       'bits': 2,
                       'default': '',
                       'description': 'pull of the resistor - 0:none - '
                                      '1:pullup - 2:pulldown',
                       'flag': '',
                       'invalid': '',
                       'max': '',
                       'min': '',
                       'name': 'gpio[0].mode.pull',
                       'offset': 540,
                       'total_size': '',
                       'type': '',
                       'type_size': 2},
 'gpio[0].mode.res': {'access': 1,
                      'array_size': '',
                      'bit_offset': 11,
                      'bits': 5,
                      'default': '',
                      'description': 'Reserved bits',
                      'flag': '',
                      'invalid': '',
                      'max': '',
                      'min': '',
                      'name': 'gpio[0].mode.res',
                      'offset': 540,
                      'total_size': '',
                      'type': '',
                      'type_size': 2},
 'gpio[0].mode.tick_div': {'access': 1,
                           'array_size': '',
                           'bit_offset': 6,
                           'bits': 5,
                           'default': '',
                           'description': 'for trace tick divisor - max should '
                                          'be 16 for interface',
                           'flag': '',
                           'invalid': '',
                           'max': '',
                           'min': '',
                           'name': 'gpio[0].mode.tick_div',
                           'offset': 540,
                           'total_size': '',
                           'type': '',
                           'type_size': 2},
 'gpio[0].res': {'access': 0,
                 'array_size': 1,
                 'bit_offset': '',
                 'bits': '',
                 'default': '',
                 'description': 'Reserved bytes',
                 'flag': '',
                 'invalid': '',
                 'max': '',
                 'min': '',
                 'name': 'gpio[0].res',
                 'offset': 543,
                 'total_size': 1,
                 'type': 'uint8_t',
                 'type_size': 1},
 'gpio[0].status.level': {'access': 0,
                          'array_size': '',
                          'bit_offset': 0,
                          'bits': 1,
                          'default': '',
                          'description': 'The io level of the pin 0=low 1=high',
                          'flag': 'VOLATILE',
                          'invalid': '',
                          'max': '',
                          'min': '',
                          'name': 'gpio[0].status.level',
                          'offset': 542,
                          'total_size': '',
                          'type': '',
                          'type_size': 1},
 'gpio[0].status.res': {'access': 1,
                        'array_size': '',
                        'bit_offset': 1,
                        'bits': 7,
                        'default': '',
                        'description': 'Reserved bits',
                        'flag': '',
                        'invalid': '',
                        'max': '',
                        'min': '',
                        'name': 'gpio[0].status.res',
                        'offset': 542,
                        'total_size': '',
                        'type': '',
                        'type_size': 1},
 'gpio[1].mode.init': {'access': 1,
                       'array_size': '',
                       'bit_offset': 0,
                       'bits': 1,
                       'default': '',
                       'description': '0:periph will initialize on execute - '
                                      '1:periph initialized',
                       'flag': '',
                       'invalid': '',
                       'max': '',
                       'min': '',
                       'name': 'gpio[1].mode.init',
                       'offset': 544,
                       'total_size': '',
                       'type': '',
                       'type_size': 2},
 'gpio[1].mode.io_type': {'access': 1,
                          'array_size': '',
                          'bit_offset': 1,
                          'bits': 2,
                          'default': '',
                          'description': '0:high impedance input - 1:push pull '
                                         'output - 2:open drain output - '
                                         '3:interrupts and saves event',
                          'flag': '',
                          'invalid': '',
                          'max': '',
                          'min': '',
                          'name': 'gpio[1].mode.io_type',
                          'offset': 544,
                          'total_size': '',
                          'type': '',
                          'type_size': 2},
 'gpio[1].mode.level': {'access': 1,
                        'array_size': '',
                        'bit_offset': 3,
                        'bits': 1,
                        'default': '',
                        'description': 'If output sets gpio level - 0:low - '
                                       '1:high',
                        'flag': '',
                        'invalid': '',
                        'max': '',
                        'min': '',
                        'name': 'gpio[1].mode.level',
                        'offset': 544,
                        'total_size': '',
                        'type': '',
                        'type_size': 2},
 'gpio[1].mode.pull': {'access': 1,
                       'array_size': '',
                       'bit_offset': 4,
                       'bits': 2,
                       'default': '',
                       'description': 'pull of the resistor - 0:none - '
                                      '1:pullup - 2:pulldown',
                       'flag': '',
                       'invalid': '',
                       'max': '',
                       'min': '',
                       'name': 'gpio[1].mode.pull',
                       'offset': 544,
                       'total_size': '',
                       'type': '',
                       'type_size': 2},
 'gpio[1].mode.res': {'access': 1,
                      'array_size': '',
                      'bit_offset': 11,
                      'bits': 5,
                      'default': '',
                      'description': 'Reserved bits',
                      'flag': '',
                      'invalid': '',
                      'max': '',
                      'min': '',
                      'name': 'gpio[1].mode.res',
                      'offset': 544,
                      'total_size': '',
                      'type': '',
                      'type_size': 2},
 'gpio[1].mode.tick_div': {'access': 1,
                           'array_size': '',
                           'bit_offset': 6,
                           'bits': 5,
                           'default': '',
                           'description': 'for trace tick divisor - max should '
                                          'be 16 for interface',
                           'flag': '',
                           'invalid': '',
                           'max': '',
                           'min': '',
                           'name': 'gpio[1].mode.tick_div',
                           'offset': 544,
                           'total_size': '',
                           'type': '',
                           'type_size': 2},
 'gpio[1].res': {'access': 0,
                 'array_size': 1,
                 'bit_offset': '',
                 'bits': '',
                 'default': '',
                 'description': 'Reserved bytes',
                 'flag': '',
                 'invalid': '',
                 'max': '',
                 'min': '',
                 'name': 'gpio[1].res',
                 'offset': 547,
                 'total_size': 1,
                 'type': 'uint8_t',
                 'type_size': 1},
 'gpio[1].status.level': {'access': 0,
                          'array_size': '',
                          'bit_offset': 0,
                          'bits': 1,
                          'default': '',
                          'description': 'The io level of the pin - 0:low - '
                                         '1:high',
                          'flag': 'VOLATILE',
                          'invalid': '',
                          'max': '',
                          'min': '',
                          'name': 'gpio[1].status.level',
                          'offset': 546,
                          'total_size': '',
                          'type': '',
                          'type_size': 1},
 'gpio[1].status.res': {'access': 1,
                        'array_size': '',
                        'bit_offset': 1,
                        'bits': 7,
                        'default': '',
                        'description': 'Reserved bits',
                        'flag': '',
                        'invalid': '',
                        'max': '',
                        'min': '',
                        'name': 'gpio[1].status.res',
                        'offset': 546,
                        'total_size': '',
                        'type': '',
                        'type_size': 1},
 'gpio[2].mode.init': {'access': 1,
                       'array_size': '',
                       'bit_offset': 0,
                       'bits': 1,
                       'default': '',
                       'description': '0:periph will initialize on execute - '
                                      '1:periph initialized',
                       'flag': '',
                       'invalid': '',
                       'max': '',
                       'min': '',
                       'name': 'gpio[2].mode.init',
                       'offset': 548,
                       'total_size': '',
                       'type': '',
                       'type_size': 2},
 'gpio[2].mode.io_type': {'access': 1,
                          'array_size': '',
                          'bit_offset': 1,
                          'bits': 2,
                          'default': '',
                          'description': '0:high impedance input - 1:push pull '
                                         'output - 2:open drain output - '
                                         '3:interrupts and saves event',
                          'flag': '',
                          'invalid': '',
                          'max': '',
                          'min': '',
                          'name': 'gpio[2].mode.io_type',
                          'offset': 548,
                          'total_size': '',
                          'type': '',
                          'type_size': 2},
 'gpio[2].mode.level': {'access': 1,
                        'array_size': '',
                        'bit_offset': 3,
                        'bits': 1,
                        'default': '',
                        'description': 'If output sets gpio level - 0:low - '
                                       '1:high',
                        'flag': '',
                        'invalid': '',
                        'max': '',
                        'min': '',
                        'name': 'gpio[2].mode.level',
                        'offset': 548,
                        'total_size': '',
                        'type': '',
                        'type_size': 2},
 'gpio[2].mode.pull': {'access': 1,
                       'array_size': '',
                       'bit_offset': 4,
                       'bits': 2,
                       'default': '',
                       'description': 'pull of the resistor - 0:none - '
                                      '1:pullup - 2:pulldown',
                       'flag': '',
                       'invalid': '',
                       'max': '',
                       'min': '',
                       'name': 'gpio[2].mode.pull',
                       'offset': 548,
                       'total_size': '',
                       'type': '',
                       'type_size': 2},
 'gpio[2].mode.res': {'access': 1,
                      'array_size': '',
                      'bit_offset': 11,
                      'bits': 5,
                      'default': '',
                      'description': 'Reserved bits',
                      'flag': '',
                      'invalid': '',
                      'max': '',
                      'min': '',
                      'name': 'gpio[2].mode.res',
                      'offset': 548,
                      'total_size': '',
                      'type': '',
                      'type_size': 2},
 'gpio[2].mode.tick_div': {'access': 1,
                           'array_size': '',
                           'bit_offset': 6,
                           'bits': 5,
                           'default': '',
                           'description': 'for trace tick divisor - max should '
                                          'be 16 for interface',
                           'flag': '',
                           'invalid': '',
                           'max': '',
                           'min': '',
                           'name': 'gpio[2].mode.tick_div',
                           'offset': 548,
                           'total_size': '',
                           'type': '',
                           'type_size': 2},
 'gpio[2].res': {'access': 0,
                 'array_size': 1,
                 'bit_offset': '',
                 'bits': '',
                 'default': '',
                 'description': 'Reserved bytes',
                 'flag': '',
                 'invalid': '',
                 'max': '',
                 'min': '',
                 'name': 'gpio[2].res',
                 'offset': 551,
                 'total_size': 1,
                 'type': 'uint8_t',
                 'type_size': 1},
 'gpio[2].status.level': {'access': 0,
                          'array_size': '',
                          'bit_offset': 0,
                          'bits': 1,
                          'default': '',
                          'description': 'The io level of the pin - 0:low - '
                                         '1:high',
                          'flag': 'VOLATILE',
                          'invalid': '',
                          'max': '',
                          'min': '',
                          'name': 'gpio[2].status.level',
                          'offset': 550,
                          'total_size': '',
                          'type': '',
                          'type_size': 1},
 'gpio[2].status.res': {'access': 1,
                        'array_size': '',
                        'bit_offset': 1,
                        'bits': 7,
                        'default': '',
                        'description': 'Reserved bits',
                        'flag': '',
                        'invalid': '',
                        'max': '',
                        'min': '',
                        'name': 'gpio[2].status.res',
                        'offset': 550,
                        'total_size': '',
                        'type': '',
                        'type_size': 1},
 'i2c.clk_stretch_delay': {'access': 1,
                           'array_size': '',
                           'bit_offset': '',
                           'bits': '',
                           'default': '',
                           'description': 'Clock stretch the first byte in us',
                           'flag': '',
                           'invalid': '',
                           'max': '',
                           'min': '',
                           'name': 'i2c.clk_stretch_delay',
                           'offset': 324,
                           'total_size': '',
                           'type': 'uint16_t',
                           'type_size': 2},
 'i2c.dut_scl.io_type': {'access': 1,
                         'array_size': '',
                         'bit_offset': 0,
                         'bits': 2,
                         'default': '',
                         'description': '0:high impedance input - 1:push pull '
                                        'output - 2:open drain output',
                         'flag': '',
                         'invalid': '',
                         'max': '',
                         'min': '',
                         'name': 'i2c.dut_scl.io_type',
                         'offset': 323,
                         'total_size': '',
                         'type': '',
                         'type_size': 1},
 'i2c.dut_scl.level': {'access': 1,
                       'array_size': '',
                       'bit_offset': 5,
                       'bits': 1,
                       'default': '',
                       'description': 'Current value of gpio - 0:low - 1:high',
                       'flag': 'VOLATILE',
                       'invalid': '',
                       'max': '',
                       'min': '',
                       'name': 'i2c.dut_scl.level',
                       'offset': 323,
                       'total_size': '',
                       'type': '',
                       'type_size': 1},
 'i2c.dut_scl.pull': {'access': 1,
                      'array_size': '',
                      'bit_offset': 2,
                      'bits': 2,
                      'default': '',
                      'description': 'pull of the resistor - 0:none - 1:pullup '
                                     '- 2:pulldown',
                      'flag': '',
                      'invalid': '',
                      'max': '',
                      'min': '',
                      'name': 'i2c.dut_scl.pull',
                      'offset': 323,
                      'total_size': '',
                      'type': '',
                      'type_size': 1},
 'i2c.dut_scl.res': {'access': 1,
                     'array_size': '',
                     'bit_offset': 6,
                     'bits': 2,
                     'default': '',
                     'description': 'Reserved bits',
                     'flag': '',
                     'invalid': '',
                     'max': '',
                     'min': '',
                     'name': 'i2c.dut_scl.res',
                     'offset': 323,
                     'total_size': '',
                     'type': '',
                     'type_size': 1},
 'i2c.dut_scl.set_level': {'access': 1,
                           'array_size': '',
                           'bit_offset': 4,
                           'bits': 1,
                           'default': '',
                           'description': 'If output sets gpio level - 0:low - '
                                          '1:high',
                           'flag': '',
                           'invalid': '',
                           'max': '',
                           'min': '',
                           'name': 'i2c.dut_scl.set_level',
                           'offset': 323,
                           'total_size': '',
                           'type': '',
                           'type_size': 1},
 'i2c.dut_sda.io_type': {'access': 1,
                         'array_size': '',
                         'bit_offset': 0,
                         'bits': 2,
                         'default': '',
                         'description': '0:high impedance input - 1:push pull '
                                        'output - 2:open drain output',
                         'flag': '',
                         'invalid': '',
                         'max': '',
                         'min': '',
                         'name': 'i2c.dut_sda.io_type',
                         'offset': 322,
                         'total_size': '',
                         'type': '',
                         'type_size': 1},
 'i2c.dut_sda.level': {'access': 1,
                       'array_size': '',
                       'bit_offset': 5,
                       'bits': 1,
                       'default': '',
                       'description': 'Current value of gpio - 0:low - 1:high',
                       'flag': 'VOLATILE',
                       'invalid': '',
                       'max': '',
                       'min': '',
                       'name': 'i2c.dut_sda.level',
                       'offset': 322,
                       'total_size': '',
                       'type': '',
                       'type_size': 1},
 'i2c.dut_sda.pull': {'access': 1,
                      'array_size': '',
                      'bit_offset': 2,
                      'bits': 2,
                      'default': '',
                      'description': 'pull of the resistor - 0:none - 1:pullup '
                                     '- 2:pulldown',
                      'flag': '',
                      'invalid': '',
                      'max': '',
                      'min': '',
                      'name': 'i2c.dut_sda.pull',
                      'offset': 322,
                      'total_size': '',
                      'type': '',
                      'type_size': 1},
 'i2c.dut_sda.res': {'access': 1,
                     'array_size': '',
                     'bit_offset': 6,
                     'bits': 2,
                     'default': '',
                     'description': 'Reserved bits',
                     'flag': '',
                     'invalid': '',
                     'max': '',
                     'min': '',
                     'name': 'i2c.dut_sda.res',
                     'offset': 322,
                     'total_size': '',
                     'type': '',
                     'type_size': 1},
 'i2c.dut_sda.set_level': {'access': 1,
                           'array_size': '',
                           'bit_offset': 4,
                           'bits': 1,
                           'default': '',
                           'description': 'If output sets gpio level - 0:low - '
                                          '1:high',
                           'flag': '',
                           'invalid': '',
                           'max': '',
                           'min': '',
                           'name': 'i2c.dut_sda.set_level',
                           'offset': 322,
                           'total_size': '',
                           'type': '',
                           'type_size': 1},
 'i2c.f_r_ticks': {'access': 0,
                   'array_size': '',
                   'bit_offset': '',
                   'bits': '',
                   'default': '',
                   'description': 'Ticks for full read frame after the address '
                                  'is acked',
                   'flag': '',
                   'invalid': '',
                   'max': '',
                   'min': '',
                   'name': 'i2c.f_r_ticks',
                   'offset': 350,
                   'total_size': '',
                   'type': 'uint32_t',
                   'type_size': 4},
 'i2c.f_w_ticks': {'access': 0,
                   'array_size': '',
                   'bit_offset': '',
                   'bits': '',
                   'default': '',
                   'description': 'Ticks for full write frame',
                   'flag': '',
                   'invalid': '',
                   'max': '',
                   'min': '',
                   'name': 'i2c.f_w_ticks',
                   'offset': 354,
                   'total_size': '',
                   'type': 'uint32_t',
                   'type_size': 4},
 'i2c.mode.addr_10_bit': {'access': 1,
                          'array_size': '',
                          'bit_offset': 2,
                          'bits': 1,
                          'default': '',
                          'description': '0:i2c address is 7 bit mode - 1:10 '
                                         'i2c address is 10 bit mode',
                          'flag': '',
                          'invalid': '',
                          'max': '',
                          'min': '',
                          'name': 'i2c.mode.addr_10_bit',
                          'offset': 320,
                          'total_size': '',
                          'type': '',
                          'type_size': 1},
 'i2c.mode.disable': {'access': 1,
                      'array_size': '',
                      'bit_offset': 1,
                      'bits': 1,
                      'default': '',
                      'description': '0:periph is enabled - 1:periph is '
                                     'disabled',
                      'flag': '',
                      'invalid': '',
                      'max': '',
                      'min': '',
                      'name': 'i2c.mode.disable',
                      'offset': 320,
                      'total_size': '',
                      'type': '',
                      'type_size': 1},
 'i2c.mode.general_call': {'access': 1,
                           'array_size': '',
                           'bit_offset': 3,
                           'bits': 1,
                           'default': '',
                           'description': '0:disable general call - 1:enable '
                                          'general call',
                           'flag': '',
                           'invalid': '',
                           'max': '',
                           'min': '',
                           'name': 'i2c.mode.general_call',
                           'offset': 320,
                           'total_size': '',
                           'type': '',
                           'type_size': 1},
 'i2c.mode.init': {'access': 1,
                   'array_size': '',
                   'bit_offset': 0,
                   'bits': 1,
                   'default': '',
                   'description': '0:periph will initialize on execute - '
                                  '1:periph initialized',
                   'flag': '',
                   'invalid': '',
                   'max': '',
                   'min': '',
                   'name': 'i2c.mode.init',
                   'offset': 320,
                   'total_size': '',
                   'type': '',
                   'type_size': 1},
 'i2c.mode.nack_data': {'access': 1,
                        'array_size': '',
                        'bit_offset': 7,
                        'bits': 1,
                        'default': '',
                        'description': '0:all data will ACK - 1:all data will '
                                       'NACK',
                        'flag': '',
                        'invalid': '',
                        'max': '',
                        'min': '',
                        'name': 'i2c.mode.nack_data',
                        'offset': 320,
                        'total_size': '',
                        'type': '',
                        'type_size': 1},
 'i2c.mode.no_clk_stretch': {'access': 1,
                             'array_size': '',
                             'bit_offset': 4,
                             'bits': 1,
                             'default': '',
                             'description': '0:slave can clock stretch - '
                                            '1:disables clock stretch',
                             'flag': '',
                             'invalid': '',
                             'max': '',
                             'min': '',
                             'name': 'i2c.mode.no_clk_stretch',
                             'offset': 320,
                             'total_size': '',
                             'type': '',
                             'type_size': 1},
 'i2c.mode.reg_16_big_endian': {'access': 1,
                                'array_size': '',
                                'bit_offset': 6,
                                'bits': 1,
                                'default': '',
                                'description': '0:little endian if 16 bit '
                                               'register access - 1:big endian '
                                               'if 16 bit register access',
                                'flag': '',
                                'invalid': '',
                                'max': '',
                                'min': '',
                                'name': 'i2c.mode.reg_16_big_endian',
                                'offset': 320,
                                'total_size': '',
                                'type': '',
                                'type_size': 1},
 'i2c.mode.reg_16_bit': {'access': 1,
                         'array_size': '',
                         'bit_offset': 5,
                         'bits': 1,
                         'default': '',
                         'description': '0:8 bit register access - 1:16 bit '
                                        'register access mode',
                         'flag': '',
                         'invalid': '',
                         'max': '',
                         'min': '',
                         'name': 'i2c.mode.reg_16_bit',
                         'offset': 320,
                         'total_size': '',
                         'type': '',
                         'type_size': 1},
 'i2c.r_count': {'access': 1,
                 'array_size': '',
                 'bit_offset': '',
                 'bits': '',
                 'default': '',
                 'description': 'Last read frame byte count - only in reg '
                                'if_type 0',
                 'flag': '',
                 'invalid': '',
                 'max': '',
                 'min': '',
                 'name': 'i2c.r_count',
                 'offset': 336,
                 'total_size': '',
                 'type': 'uint8_t',
                 'type_size': 1},
 'i2c.r_ticks': {'access': 0,
                 'array_size': '',
                 'bit_offset': '',
                 'bits': '',
                 'default': '',
                 'description': 'Ticks for read byte',
                 'flag': '',
                 'invalid': '',
                 'max': '',
                 'min': '',
                 'name': 'i2c.r_ticks',
                 'offset': 338,
                 'total_size': '',
                 'type': 'uint32_t',
                 'type_size': 4},
 'i2c.reg_index': {'access': 0,
                   'array_size': '',
                   'bit_offset': '',
                   'bits': '',
                   'default': '',
                   'description': 'current index of i2c pointer',
                   'flag': '',
                   'invalid': '',
                   'max': '',
                   'min': '',
                   'name': 'i2c.reg_index',
                   'offset': 332,
                   'total_size': '',
                   'type': 'uint16_t',
                   'type_size': 2},
 'i2c.res': {'access': 0,
             'array_size': 26,
             'bit_offset': '',
             'bits': '',
             'default': '',
             'description': 'Reserved bytes',
             'flag': '',
             'invalid': '',
             'max': '',
             'min': '',
             'name': 'i2c.res',
             'offset': 358,
             'total_size': 26,
             'type': 'uint8_t',
             'type_size': 1},
 'i2c.s_ticks': {'access': 0,
                 'array_size': '',
                 'bit_offset': '',
                 'bits': '',
                 'default': '',
                 'description': 'Ticks for start and address',
                 'flag': '',
                 'invalid': '',
                 'max': '',
                 'min': '',
                 'name': 'i2c.s_ticks',
                 'offset': 346,
                 'total_size': '',
                 'type': 'uint32_t',
                 'type_size': 4},
 'i2c.slave_addr_1': {'access': 1,
                      'array_size': '',
                      'bit_offset': '',
                      'bits': '',
                      'default': 85,
                      'description': 'Primary slave address',
                      'flag': '',
                      'invalid': 125,
                      'max': 124,
                      'min': 8,
                      'name': 'i2c.slave_addr_1',
                      'offset': 326,
                      'total_size': '',
                      'type': 'uint16_t',
                      'type_size': 2},
 'i2c.slave_addr_2': {'access': 1,
                      'array_size': '',
                      'bit_offset': '',
                      'bits': '',
                      'default': 66,
                      'description': 'Secondary slave address',
                      'flag': '',
                      'invalid': 126,
                      'max': 124,
                      'min': 8,
                      'name': 'i2c.slave_addr_2',
                      'offset': 328,
                      'total_size': '',
                      'type': 'uint16_t',
                      'type_size': 2},
 'i2c.start_reg_index': {'access': 0,
                         'array_size': '',
                         'bit_offset': '',
                         'bits': '',
                         'default': '',
                         'description': 'start index of i2c pointer',
                         'flag': '',
                         'invalid': '',
                         'max': '',
                         'min': '',
                         'name': 'i2c.start_reg_index',
                         'offset': 334,
                         'total_size': '',
                         'type': 'uint16_t',
                         'type_size': 2},
 'i2c.state': {'access': 0,
               'array_size': '',
               'bit_offset': '',
               'bits': '',
               'default': '',
               'description': 'Current state of i2c frame - 0:initialized - '
                              '1:reading data - 2-write address received - '
                              '3-1st reg byte received - 4-writing data - '
                              '5-NACK - 6-stopped',
               'flag': 'VOLATILE',
               'invalid': '',
               'max': '',
               'min': '',
               'name': 'i2c.state',
               'offset': 330,
               'total_size': '',
               'type': 'uint16_t',
               'type_size': 2},
 'i2c.status.af': {'access': 0,
                   'array_size': '',
                   'bit_offset': 1,
                   'bits': 1,
                   'default': '',
                   'description': 'Acknowledge failure',
                   'flag': '',
                   'invalid': '',
                   'max': '',
                   'min': '',
                   'name': 'i2c.status.af',
                   'offset': 321,
                   'total_size': '',
                   'type': '',
                   'type_size': 1},
 'i2c.status.berr': {'access': 0,
                     'array_size': '',
                     'bit_offset': 2,
                     'bits': 1,
                     'default': '',
                     'description': 'Bus error:  Non-valid position during a '
                                    'byte transfer',
                     'flag': 'VOLATILE',
                     'invalid': '',
                     'max': '',
                     'min': '',
                     'name': 'i2c.status.berr',
                     'offset': 321,
                     'total_size': '',
                     'type': '',
                     'type_size': 1},
 'i2c.status.busy': {'access': 0,
                     'array_size': '',
                     'bit_offset': 4,
                     'bits': 1,
                     'default': '',
                     'description': 'i2c bus is BUSY',
                     'flag': 'VOLATILE',
                     'invalid': '',
                     'max': '',
                     'min': '',
                     'name': 'i2c.status.busy',
                     'offset': 321,
                     'total_size': '',
                     'type': '',
                     'type_size': 1},
 'i2c.status.gencall': {'access': 0,
                        'array_size': '',
                        'bit_offset': 3,
                        'bits': 1,
                        'default': '',
                        'description': 'General call address received',
                        'flag': '',
                        'invalid': '',
                        'max': '',
                        'min': '',
                        'name': 'i2c.status.gencall',
                        'offset': 321,
                        'total_size': '',
                        'type': '',
                        'type_size': 1},
 'i2c.status.ovr': {'access': 0,
                    'array_size': '',
                    'bit_offset': 0,
                    'bits': 1,
                    'default': '',
                    'description': 'Overrun/Underrun: Request for new byte '
                                   'when not ready',
                    'flag': '',
                    'invalid': '',
                    'max': '',
                    'min': '',
                    'name': 'i2c.status.ovr',
                    'offset': 321,
                    'total_size': '',
                    'type': '',
                    'type_size': 1},
 'i2c.status.res': {'access': 1,
                    'array_size': '',
                    'bit_offset': 6,
                    'bits': 2,
                    'default': '',
                    'description': 'Reserved bits',
                    'flag': '',
                    'invalid': '',
                    'max': '',
                    'min': '',
                    'name': 'i2c.status.res',
                    'offset': 321,
                    'total_size': '',
                    'type': '',
                    'type_size': 1},
 'i2c.status.rsr': {'access': 0,
                    'array_size': '',
                    'bit_offset': 5,
                    'bits': 1,
                    'default': '',
                    'description': 'Repeated start detected',
                    'flag': '',
                    'invalid': '',
                    'max': '',
                    'min': '',
                    'name': 'i2c.status.rsr',
                    'offset': 321,
                    'total_size': '',
                    'type': '',
                    'type_size': 1},
 'i2c.w_count': {'access': 1,
                 'array_size': '',
                 'bit_offset': '',
                 'bits': '',
                 'default': '',
                 'description': 'Last write frame byte count - only in reg '
                                'if_type 0',
                 'flag': '',
                 'invalid': '',
                 'max': '',
                 'min': '',
                 'name': 'i2c.w_count',
                 'offset': 337,
                 'total_size': '',
                 'type': 'uint8_t',
                 'type_size': 1},
 'i2c.w_ticks': {'access': 0,
                 'array_size': '',
                 'bit_offset': '',
                 'bits': '',
                 'default': '',
                 'description': 'Ticks for write byte',
                 'flag': '',
                 'invalid': '',
                 'max': '',
                 'min': '',
                 'name': 'i2c.w_ticks',
                 'offset': 342,
                 'total_size': '',
                 'type': 'uint32_t',
                 'type_size': 4},
 'pwm.dut_pwm.io_type': {'access': 1,
                         'array_size': '',
                         'bit_offset': 0,
                         'bits': 2,
                         'default': '',
                         'description': '0:high impedance input - 1:push pull '
                                        'output - 2:open drain output',
                         'flag': '',
                         'invalid': '',
                         'max': '',
                         'min': '',
                         'name': 'pwm.dut_pwm.io_type',
                         'offset': 481,
                         'total_size': '',
                         'type': '',
                         'type_size': 1},
 'pwm.dut_pwm.level': {'access': 1,
                       'array_size': '',
                       'bit_offset': 5,
                       'bits': 1,
                       'default': '',
                       'description': 'Current value of gpio - 0:low - 1:high',
                       'flag': 'VOLATILE',
                       'invalid': '',
                       'max': '',
                       'min': '',
                       'name': 'pwm.dut_pwm.level',
                       'offset': 481,
                       'total_size': '',
                       'type': '',
                       'type_size': 1},
 'pwm.dut_pwm.pull': {'access': 1,
                      'array_size': '',
                      'bit_offset': 2,
                      'bits': 2,
                      'default': '',
                      'description': 'pull of the resistor - 0:none - 1:pullup '
                                     '- 2:pulldown',
                      'flag': '',
                      'invalid': '',
                      'max': '',
                      'min': '',
                      'name': 'pwm.dut_pwm.pull',
                      'offset': 481,
                      'total_size': '',
                      'type': '',
                      'type_size': 1},
 'pwm.dut_pwm.res': {'access': 1,
                     'array_size': '',
                     'bit_offset': 6,
                     'bits': 2,
                     'default': '',
                     'description': 'Reserved bits',
                     'flag': '',
                     'invalid': '',
                     'max': '',
                     'min': '',
                     'name': 'pwm.dut_pwm.res',
                     'offset': 481,
                     'total_size': '',
                     'type': '',
                     'type_size': 1},
 'pwm.dut_pwm.set_level': {'access': 1,
                           'array_size': '',
                           'bit_offset': 4,
                           'bits': 1,
                           'default': '',
                           'description': 'If output sets gpio level - 0:low - '
                                          '1:high',
                           'flag': '',
                           'invalid': '',
                           'max': '',
                           'min': '',
                           'name': 'pwm.dut_pwm.set_level',
                           'offset': 481,
                           'total_size': '',
                           'type': '',
                           'type_size': 1},
 'pwm.duty_cycle': {'access': 0,
                    'array_size': '',
                    'bit_offset': '',
                    'bits': '',
                    'default': '',
                    'description': 'The calculated duty cycle in percent/100',
                    'flag': '',
                    'invalid': '',
                    'max': '',
                    'min': '',
                    'name': 'pwm.duty_cycle',
                    'offset': 482,
                    'total_size': '',
                    'type': 'uint16_t',
                    'type_size': 2},
 'pwm.h_ticks': {'access': 1,
                 'array_size': '',
                 'bit_offset': '',
                 'bits': '',
                 'default': 256,
                 'description': 'Settable high time in sys clock ticks',
                 'flag': '',
                 'invalid': '',
                 'max': '',
                 'min': '',
                 'name': 'pwm.h_ticks',
                 'offset': 488,
                 'total_size': '',
                 'type': 'uint32_t',
                 'type_size': 4},
 'pwm.l_ticks': {'access': 1,
                 'array_size': '',
                 'bit_offset': '',
                 'bits': '',
                 'default': 256,
                 'description': 'Settable low time in sys clock ticks',
                 'flag': '',
                 'invalid': '',
                 'max': '',
                 'min': '',
                 'name': 'pwm.l_ticks',
                 'offset': 492,
                 'total_size': '',
                 'type': 'uint32_t',
                 'type_size': 4},
 'pwm.mode.disable': {'access': 1,
                      'array_size': '',
                      'bit_offset': 1,
                      'bits': 1,
                      'default': '',
                      'description': '0:periph is enabled - 1:periph is '
                                     'disabled',
                      'flag': '',
                      'invalid': '',
                      'max': '',
                      'min': '',
                      'name': 'pwm.mode.disable',
                      'offset': 480,
                      'total_size': '',
                      'type': '',
                      'type_size': 1},
 'pwm.mode.init': {'access': 1,
                   'array_size': '',
                   'bit_offset': 0,
                   'bits': 1,
                   'default': '',
                   'description': '0:periph will initialize on execute - '
                                  '1:periph initialized',
                   'flag': '',
                   'invalid': '',
                   'max': '',
                   'min': '',
                   'name': 'pwm.mode.init',
                   'offset': 480,
                   'total_size': '',
                   'type': '',
                   'type_size': 1},
 'pwm.mode.res': {'access': 1,
                  'array_size': '',
                  'bit_offset': 2,
                  'bits': 6,
                  'default': '',
                  'description': 'Reserved bits',
                  'flag': '',
                  'invalid': '',
                  'max': '',
                  'min': '',
                  'name': 'pwm.mode.res',
                  'offset': 480,
                  'total_size': '',
                  'type': '',
                  'type_size': 1},
 'pwm.period': {'access': 0,
                'array_size': '',
                'bit_offset': '',
                'bits': '',
                'default': '',
                'description': 'The calculated period in us',
                'flag': '',
                'invalid': '',
                'max': '',
                'min': '',
                'name': 'pwm.period',
                'offset': 484,
                'total_size': '',
                'type': 'uint32_t',
                'type_size': 4},
 'pwm.res': {'access': 0,
             'array_size': 16,
             'bit_offset': '',
             'bits': '',
             'default': '',
             'description': 'Reserved bytes',
             'flag': '',
             'invalid': '',
             'max': '',
             'min': '',
             'name': 'pwm.res',
             'offset': 496,
             'total_size': 16,
             'type': 'uint8_t',
             'type_size': 1},
 'res': {'access': 0,
         'array_size': 468,
         'bit_offset': '',
         'bits': '',
         'default': '',
         'description': 'Reserved bytes',
         'flag': '',
         'invalid': '',
         'max': '',
         'min': '',
         'name': 'res',
         'offset': 1580,
         'total_size': 468,
         'type': 'uint8_t',
         'type_size': 1},
 'rtc.day': {'access': 0,
             'array_size': '',
             'bit_offset': '',
             'bits': '',
             'default': '',
             'description': 'Days to set of rtc',
             'flag': 'VOLATILE',
             'invalid': '',
             'max': '',
             'min': '',
             'name': 'rtc.day',
             'offset': 436,
             'total_size': '',
             'type': 'uint16_t',
             'type_size': 2},
 'rtc.hour': {'access': 0,
              'array_size': '',
              'bit_offset': '',
              'bits': '',
              'default': '',
              'description': 'Hours to set of rtc',
              'flag': 'VOLATILE',
              'invalid': '',
              'max': 23,
              'min': 0,
              'name': 'rtc.hour',
              'offset': 435,
              'total_size': '',
              'type': 'uint8_t',
              'type_size': 1},
 'rtc.minute': {'access': 0,
                'array_size': '',
                'bit_offset': '',
                'bits': '',
                'default': '',
                'description': 'Minutes to set of rtc',
                'flag': 'VOLATILE',
                'invalid': '',
                'max': 59,
                'min': 0,
                'name': 'rtc.minute',
                'offset': 434,
                'total_size': '',
                'type': 'uint8_t',
                'type_size': 1},
 'rtc.mode.disable': {'access': 1,
                      'array_size': '',
                      'bit_offset': 1,
                      'bits': 1,
                      'default': '',
                      'description': '0:periph is enabled - 1:periph is '
                                     'disabled',
                      'flag': '',
                      'invalid': '',
                      'max': '',
                      'min': '',
                      'name': 'rtc.mode.disable',
                      'offset': 432,
                      'total_size': '',
                      'type': '',
                      'type_size': 1},
 'rtc.mode.init': {'access': 1,
                   'array_size': '',
                   'bit_offset': 0,
                   'bits': 1,
                   'default': '',
                   'description': '0:periph will initialize on execute - '
                                  '1:periph initialized',
                   'flag': '',
                   'invalid': '',
                   'max': '',
                   'min': '',
                   'name': 'rtc.mode.init',
                   'offset': 432,
                   'total_size': '',
                   'type': '',
                   'type_size': 1},
 'rtc.mode.res': {'access': 1,
                  'array_size': '',
                  'bit_offset': 2,
                  'bits': 6,
                  'default': '',
                  'description': 'Reserved bits',
                  'flag': '',
                  'invalid': '',
                  'max': '',
                  'min': '',
                  'name': 'rtc.mode.res',
                  'offset': 432,
                  'total_size': '',
                  'type': '',
                  'type_size': 1},
 'rtc.res': {'access': 0,
             'array_size': 5,
             'bit_offset': '',
             'bits': '',
             'default': '',
             'description': 'Reserved bytes',
             'flag': '',
             'invalid': '',
             'max': '',
             'min': '',
             'name': 'rtc.res',
             'offset': 443,
             'total_size': 5,
             'type': 'uint8_t',
             'type_size': 1},
 'rtc.second': {'access': 0,
                'array_size': '',
                'bit_offset': '',
                'bits': '',
                'default': '',
                'description': 'Seconds of rtc',
                'flag': 'VOLATILE',
                'invalid': '',
                'max': 59,
                'min': 0,
                'name': 'rtc.second',
                'offset': 433,
                'total_size': '',
                'type': 'uint8_t',
                'type_size': 1},
 'rtc.set_day': {'access': 1,
                 'array_size': '',
                 'bit_offset': '',
                 'bits': '',
                 'default': '',
                 'description': 'Days to set of rtc',
                 'flag': '',
                 'invalid': '',
                 'max': '',
                 'min': '',
                 'name': 'rtc.set_day',
                 'offset': 441,
                 'total_size': '',
                 'type': 'uint16_t',
                 'type_size': 2},
 'rtc.set_hour': {'access': 1,
                  'array_size': '',
                  'bit_offset': '',
                  'bits': '',
                  'default': '',
                  'description': 'Hours to set of rtc',
                  'flag': '',
                  'invalid': '',
                  'max': 23,
                  'min': 0,
                  'name': 'rtc.set_hour',
                  'offset': 440,
                  'total_size': '',
                  'type': 'uint8_t',
                  'type_size': 1},
 'rtc.set_minute': {'access': 1,
                    'array_size': '',
                    'bit_offset': '',
                    'bits': '',
                    'default': '',
                    'description': 'Minutes to set of rtc',
                    'flag': '',
                    'invalid': '',
                    'max': 59,
                    'min': 0,
                    'name': 'rtc.set_minute',
                    'offset': 439,
                    'total_size': '',
                    'type': 'uint8_t',
                    'type_size': 1},
 'rtc.set_second': {'access': 1,
                    'array_size': '',
                    'bit_offset': '',
                    'bits': '',
                    'default': '',
                    'description': 'Seconds to set of rtc',
                    'flag': '',
                    'invalid': '',
                    'max': 59,
                    'min': 0,
                    'name': 'rtc.set_second',
                    'offset': 438,
                    'total_size': '',
                    'type': 'uint8_t',
                    'type_size': 1},
 'spi.byte_ticks': {'access': 0,
                    'array_size': '',
                    'bit_offset': '',
                    'bits': '',
                    'default': '',
                    'description': 'Ticks per byte',
                    'flag': '',
                    'invalid': '',
                    'max': '',
                    'min': '',
                    'name': 'spi.byte_ticks',
                    'offset': 403,
                    'total_size': '',
                    'type': 'uint32_t',
                    'type_size': 4},
 'spi.dut_miso.io_type': {'access': 1,
                          'array_size': '',
                          'bit_offset': 0,
                          'bits': 2,
                          'default': '',
                          'description': '0:high impedance input - 1:push pull '
                                         'output - 2:open drain output',
                          'flag': '',
                          'invalid': '',
                          'max': '',
                          'min': '',
                          'name': 'spi.dut_miso.io_type',
                          'offset': 387,
                          'total_size': '',
                          'type': '',
                          'type_size': 1},
 'spi.dut_miso.level': {'access': 1,
                        'array_size': '',
                        'bit_offset': 5,
                        'bits': 1,
                        'default': '',
                        'description': 'Current value of gpio - 0:low - 1:high',
                        'flag': '',
                        'invalid': '',
                        'max': '',
                        'min': '',
                        'name': 'spi.dut_miso.level',
                        'offset': 387,
                        'total_size': '',
                        'type': '',
                        'type_size': 1},
 'spi.dut_miso.pull': {'access': 1,
                       'array_size': '',
                       'bit_offset': 2,
                       'bits': 2,
                       'default': '',
                       'description': 'pull of the resistor - 0:none - '
                                      '1:pullup - 2:pulldown',
                       'flag': '',
                       'invalid': '',
                       'max': '',
                       'min': '',
                       'name': 'spi.dut_miso.pull',
                       'offset': 387,
                       'total_size': '',
                       'type': '',
                       'type_size': 1},
 'spi.dut_miso.res': {'access': 1,
                      'array_size': '',
                      'bit_offset': 6,
                      'bits': 2,
                      'default': '',
                      'description': 'Reserved bits',
                      'flag': '',
                      'invalid': '',
                      'max': '',
                      'min': '',
                      'name': 'spi.dut_miso.res',
                      'offset': 387,
                      'total_size': '',
                      'type': '',
                      'type_size': 1},
 'spi.dut_miso.set_level': {'access': 1,
                            'array_size': '',
                            'bit_offset': 4,
                            'bits': 1,
                            'default': '',
                            'description': 'If output sets gpio level - 0:low '
                                           '- 1:high',
                            'flag': '',
                            'invalid': '',
                            'max': '',
                            'min': '',
                            'name': 'spi.dut_miso.set_level',
                            'offset': 387,
                            'total_size': '',
                            'type': '',
                            'type_size': 1},
 'spi.dut_mosi.io_type': {'access': 1,
                          'array_size': '',
                          'bit_offset': 0,
                          'bits': 2,
                          'default': '',
                          'description': '0:high impedance input - 1:push pull '
                                         'output - 2:open drain output',
                          'flag': '',
                          'invalid': '',
                          'max': '',
                          'min': '',
                          'name': 'spi.dut_mosi.io_type',
                          'offset': 386,
                          'total_size': '',
                          'type': '',
                          'type_size': 1},
 'spi.dut_mosi.level': {'access': 1,
                        'array_size': '',
                        'bit_offset': 5,
                        'bits': 1,
                        'default': '',
                        'description': 'Current value of gpio - 0:low - 1:high',
                        'flag': '',
                        'invalid': '',
                        'max': '',
                        'min': '',
                        'name': 'spi.dut_mosi.level',
                        'offset': 386,
                        'total_size': '',
                        'type': '',
                        'type_size': 1},
 'spi.dut_mosi.pull': {'access': 1,
                       'array_size': '',
                       'bit_offset': 2,
                       'bits': 2,
                       'default': '',
                       'description': 'pull of the resistor - 0:none - '
                                      '1:pullup - 2:pulldown',
                       'flag': '',
                       'invalid': '',
                       'max': '',
                       'min': '',
                       'name': 'spi.dut_mosi.pull',
                       'offset': 386,
                       'total_size': '',
                       'type': '',
                       'type_size': 1},
 'spi.dut_mosi.res': {'access': 1,
                      'array_size': '',
                      'bit_offset': 6,
                      'bits': 2,
                      'default': '',
                      'description': 'Reserved bits',
                      'flag': '',
                      'invalid': '',
                      'max': '',
                      'min': '',
                      'name': 'spi.dut_mosi.res',
                      'offset': 386,
                      'total_size': '',
                      'type': '',
                      'type_size': 1},
 'spi.dut_mosi.set_level': {'access': 1,
                            'array_size': '',
                            'bit_offset': 4,
                            'bits': 1,
                            'default': '',
                            'description': 'If output sets gpio level - 0:low '
                                           '- 1:high',
                            'flag': '',
                            'invalid': '',
                            'max': '',
                            'min': '',
                            'name': 'spi.dut_mosi.set_level',
                            'offset': 386,
                            'total_size': '',
                            'type': '',
                            'type_size': 1},
 'spi.dut_nss.io_type': {'access': 1,
                         'array_size': '',
                         'bit_offset': 0,
                         'bits': 2,
                         'default': '',
                         'description': '0:high impedance input - 1:push pull '
                                        'output - 2:open drain output',
                         'flag': '',
                         'invalid': '',
                         'max': '',
                         'min': '',
                         'name': 'spi.dut_nss.io_type',
                         'offset': 389,
                         'total_size': '',
                         'type': '',
                         'type_size': 1},
 'spi.dut_nss.level': {'access': 1,
                       'array_size': '',
                       'bit_offset': 5,
                       'bits': 1,
                       'default': '',
                       'description': 'Current value of gpio - 0:low - 1:high',
                       'flag': '',
                       'invalid': '',
                       'max': '',
                       'min': '',
                       'name': 'spi.dut_nss.level',
                       'offset': 389,
                       'total_size': '',
                       'type': '',
                       'type_size': 1},
 'spi.dut_nss.pull': {'access': 1,
                      'array_size': '',
                      'bit_offset': 2,
                      'bits': 2,
                      'default': '',
                      'description': 'pull of the resistor - 0:none - 1:pullup '
                                     '- 2:pulldown',
                      'flag': '',
                      'invalid': '',
                      'max': '',
                      'min': '',
                      'name': 'spi.dut_nss.pull',
                      'offset': 389,
                      'total_size': '',
                      'type': '',
                      'type_size': 1},
 'spi.dut_nss.res': {'access': 1,
                     'array_size': '',
                     'bit_offset': 6,
                     'bits': 2,
                     'default': '',
                     'description': 'Reserved bits',
                     'flag': '',
                     'invalid': '',
                     'max': '',
                     'min': '',
                     'name': 'spi.dut_nss.res',
                     'offset': 389,
                     'total_size': '',
                     'type': '',
                     'type_size': 1},
 'spi.dut_nss.set_level': {'access': 1,
                           'array_size': '',
                           'bit_offset': 4,
                           'bits': 1,
                           'default': '',
                           'description': 'If output sets gpio level - 0:low - '
                                          '1:high',
                           'flag': '',
                           'invalid': '',
                           'max': '',
                           'min': '',
                           'name': 'spi.dut_nss.set_level',
                           'offset': 389,
                           'total_size': '',
                           'type': '',
                           'type_size': 1},
 'spi.dut_sck.io_type': {'access': 1,
                         'array_size': '',
                         'bit_offset': 0,
                         'bits': 2,
                         'default': '',
                         'description': '0:high impedance input - 1:push pull '
                                        'output - 2:open drain output',
                         'flag': '',
                         'invalid': '',
                         'max': '',
                         'min': '',
                         'name': 'spi.dut_sck.io_type',
                         'offset': 388,
                         'total_size': '',
                         'type': '',
                         'type_size': 1},
 'spi.dut_sck.level': {'access': 1,
                       'array_size': '',
                       'bit_offset': 5,
                       'bits': 1,
                       'default': '',
                       'description': 'Current value of gpio - 0:low - 1:high',
                       'flag': '',
                       'invalid': '',
                       'max': '',
                       'min': '',
                       'name': 'spi.dut_sck.level',
                       'offset': 388,
                       'total_size': '',
                       'type': '',
                       'type_size': 1},
 'spi.dut_sck.pull': {'access': 1,
                      'array_size': '',
                      'bit_offset': 2,
                      'bits': 2,
                      'default': '',
                      'description': 'pull of the resistor - 0:none - 1:pullup '
                                     '- 2:pulldown',
                      'flag': '',
                      'invalid': '',
                      'max': '',
                      'min': '',
                      'name': 'spi.dut_sck.pull',
                      'offset': 388,
                      'total_size': '',
                      'type': '',
                      'type_size': 1},
 'spi.dut_sck.res': {'access': 1,
                     'array_size': '',
                     'bit_offset': 6,
                     'bits': 2,
                     'default': '',
                     'description': 'Reserved bits',
                     'flag': '',
                     'invalid': '',
                     'max': '',
                     'min': '',
                     'name': 'spi.dut_sck.res',
                     'offset': 388,
                     'total_size': '',
                     'type': '',
                     'type_size': 1},
 'spi.dut_sck.set_level': {'access': 1,
                           'array_size': '',
                           'bit_offset': 4,
                           'bits': 1,
                           'default': '',
                           'description': 'If output sets gpio level - 0:low - '
                                          '1:high',
                           'flag': '',
                           'invalid': '',
                           'max': '',
                           'min': '',
                           'name': 'spi.dut_sck.set_level',
                           'offset': 388,
                           'total_size': '',
                           'type': '',
                           'type_size': 1},
 'spi.frame_ticks': {'access': 0,
                     'array_size': '',
                     'bit_offset': '',
                     'bits': '',
                     'default': '',
                     'description': 'Ticks per frame',
                     'flag': '',
                     'invalid': '',
                     'max': '',
                     'min': '',
                     'name': 'spi.frame_ticks',
                     'offset': 399,
                     'total_size': '',
                     'type': 'uint32_t',
                     'type_size': 4},
 'spi.mode.cpha': {'access': 1,
                   'array_size': '',
                   'bit_offset': 2,
                   'bits': 1,
                   'default': '',
                   'description': '0:CK to 0 when idle - 1:CK to 1 when idle',
                   'flag': '',
                   'invalid': '',
                   'max': '',
                   'min': '',
                   'name': 'spi.mode.cpha',
                   'offset': 384,
                   'total_size': '',
                   'type': '',
                   'type_size': 1},
 'spi.mode.cpol': {'access': 1,
                   'array_size': '',
                   'bit_offset': 3,
                   'bits': 1,
                   'default': '',
                   'description': '0:the first clock transition is the first '
                                  'data capture edge - 1:the second clock '
                                  'transition is the first data capture edge',
                   'flag': '',
                   'invalid': '',
                   'max': '',
                   'min': '',
                   'name': 'spi.mode.cpol',
                   'offset': 384,
                   'total_size': '',
                   'type': '',
                   'type_size': 1},
 'spi.mode.disable': {'access': 1,
                      'array_size': '',
                      'bit_offset': 1,
                      'bits': 1,
                      'default': '',
                      'description': '0:periph is enabled - 1:periph is '
                                     'disabled',
                      'flag': '',
                      'invalid': '',
                      'max': '',
                      'min': '',
                      'name': 'spi.mode.disable',
                      'offset': 384,
                      'total_size': '',
                      'type': '',
                      'type_size': 1},
 'spi.mode.if_type': {'access': 1,
                      'array_size': '',
                      'bit_offset': 4,
                      'bits': 2,
                      'default': '',
                      'description': 'Sets spi modes since slave cannot '
                                     'responds immediately - 0:access '
                                     'registers with spi - 1:preloads reg '
                                     'address to 0 for high speed tests - '
                                     '2:echos SPI bytes - 3:always output user '
                                     'reg 0 (use for timing)',
                      'flag': '',
                      'invalid': '',
                      'max': '',
                      'min': '',
                      'name': 'spi.mode.if_type',
                      'offset': 384,
                      'total_size': '',
                      'type': '',
                      'type_size': 1},
 'spi.mode.init': {'access': 1,
                   'array_size': '',
                   'bit_offset': 0,
                   'bits': 1,
                   'default': '',
                   'description': '0:periph will initialize on execute - '
                                  '1:periph initialized',
                   'flag': '',
                   'invalid': '',
                   'max': '',
                   'min': '',
                   'name': 'spi.mode.init',
                   'offset': 384,
                   'total_size': '',
                   'type': '',
                   'type_size': 1},
 'spi.mode.reg_16_big_endian': {'access': 1,
                                'array_size': '',
                                'bit_offset': 7,
                                'bits': 1,
                                'default': '',
                                'description': '0:little endian for 16 bit '
                                               'mode - 1:big endian for 16 bit '
                                               'mode',
                                'flag': '',
                                'invalid': '',
                                'max': '',
                                'min': '',
                                'name': 'spi.mode.reg_16_big_endian',
                                'offset': 384,
                                'total_size': '',
                                'type': '',
                                'type_size': 1},
 'spi.mode.reg_16_bit': {'access': 1,
                         'array_size': '',
                         'bit_offset': 6,
                         'bits': 1,
                         'default': '',
                         'description': '0:8 bit register access - 1:16 bit '
                                        'register access mode',
                         'flag': '',
                         'invalid': '',
                         'max': '',
                         'min': '',
                         'name': 'spi.mode.reg_16_bit',
                         'offset': 384,
                         'total_size': '',
                         'type': '',
                         'type_size': 1},
 'spi.prev_ticks': {'access': 0,
                    'array_size': '',
                    'bit_offset': '',
                    'bits': '',
                    'default': '',
                    'description': 'Holder for previous byte ticks',
                    'flag': '',
                    'invalid': '',
                    'max': '',
                    'min': '',
                    'name': 'spi.prev_ticks',
                    'offset': 407,
                    'total_size': '',
                    'type': 'uint32_t',
                    'type_size': 4},
 'spi.r_count': {'access': 0,
                 'array_size': '',
                 'bit_offset': '',
                 'bits': '',
                 'default': '',
                 'description': 'Last read frame byte count',
                 'flag': '',
                 'invalid': '',
                 'max': '',
                 'min': '',
                 'name': 'spi.r_count',
                 'offset': 396,
                 'total_size': '',
                 'type': 'uint8_t',
                 'type_size': 1},
 'spi.reg_index': {'access': 0,
                   'array_size': '',
                   'bit_offset': '',
                   'bits': '',
                   'default': '',
                   'description': 'Current index of reg pointer',
                   'flag': '',
                   'invalid': '',
                   'max': '',
                   'min': '',
                   'name': 'spi.reg_index',
                   'offset': 392,
                   'total_size': '',
                   'type': 'uint16_t',
                   'type_size': 2},
 'spi.res': {'access': 0,
             'array_size': 5,
             'bit_offset': '',
             'bits': '',
             'default': '',
             'description': 'Reserved bytes',
             'flag': '',
             'invalid': '',
             'max': '',
             'min': '',
             'name': 'spi.res',
             'offset': 411,
             'total_size': 5,
             'type': 'uint8_t',
             'type_size': 1},
 'spi.start_reg_index': {'access': 0,
                         'array_size': '',
                         'bit_offset': '',
                         'bits': '',
                         'default': '',
                         'description': 'Start index of reg pointer',
                         'flag': '',
                         'invalid': '',
                         'max': '',
                         'min': '',
                         'name': 'spi.start_reg_index',
                         'offset': 394,
                         'total_size': '',
                         'type': 'uint16_t',
                         'type_size': 2},
 'spi.state': {'access': 0,
               'array_size': '',
               'bit_offset': '',
               'bits': '',
               'default': '',
               'description': 'Current state of the spi bus - 0:initialized - '
                              '1:NSS pin just lowered - 2:writing to reg - '
                              '3:reading reg - 4:transferring data - 5:NSS up '
                              'and finished',
               'flag': '',
               'invalid': '',
               'max': '',
               'min': '',
               'name': 'spi.state',
               'offset': 390,
               'total_size': '',
               'type': 'uint16_t',
               'type_size': 2},
 'spi.status.bsy': {'access': 0,
                    'array_size': '',
                    'bit_offset': 0,
                    'bits': 1,
                    'default': '',
                    'description': 'Busy flag',
                    'flag': '',
                    'invalid': '',
                    'max': '',
                    'min': '',
                    'name': 'spi.status.bsy',
                    'offset': 385,
                    'total_size': '',
                    'type': '',
                    'type_size': 1},
 'spi.status.clk': {'access': 0,
                    'array_size': '',
                    'bit_offset': 4,
                    'bits': 1,
                    'default': '',
                    'description': '0:sclk line low - 1:sclk line high',
                    'flag': '',
                    'invalid': '',
                    'max': '',
                    'min': '',
                    'name': 'spi.status.clk',
                    'offset': 385,
                    'total_size': '',
                    'type': '',
                    'type_size': 1},
 'spi.status.end_clk': {'access': 0,
                        'array_size': '',
                        'bit_offset': 6,
                        'bits': 1,
                        'default': '',
                        'description': 'SCLK reading at end of frame - 0:sclk '
                                       'line low - 1:sclk line high',
                        'flag': '',
                        'invalid': '',
                        'max': '',
                        'min': '',
                        'name': 'spi.status.end_clk',
                        'offset': 385,
                        'total_size': '',
                        'type': '',
                        'type_size': 1},
 'spi.status.index_err': {'access': 0,
                          'array_size': '',
                          'bit_offset': 7,
                          'bits': 1,
                          'default': '',
                          'description': 'Register index error',
                          'flag': '',
                          'invalid': '',
                          'max': '',
                          'min': '',
                          'name': 'spi.status.index_err',
                          'offset': 385,
                          'total_size': '',
                          'type': '',
                          'type_size': 1},
 'spi.status.modf': {'access': 0,
                     'array_size': '',
                     'bit_offset': 2,
                     'bits': 1,
                     'default': '',
                     'description': 'Mode fault',
                     'flag': '',
                     'invalid': '',
                     'max': '',
                     'min': '',
                     'name': 'spi.status.modf',
                     'offset': 385,
                     'total_size': '',
                     'type': '',
                     'type_size': 1},
 'spi.status.ovr': {'access': 0,
                    'array_size': '',
                    'bit_offset': 1,
                    'bits': 1,
                    'default': '',
                    'description': 'Overrun flag',
                    'flag': '',
                    'invalid': '',
                    'max': '',
                    'min': '',
                    'name': 'spi.status.ovr',
                    'offset': 385,
                    'total_size': '',
                    'type': '',
                    'type_size': 1},
 'spi.status.start_clk': {'access': 0,
                          'array_size': '',
                          'bit_offset': 5,
                          'bits': 1,
                          'default': '',
                          'description': 'SCLK reading at start of frame - '
                                         '0:sclk line low - 1:sclk line high',
                          'flag': '',
                          'invalid': '',
                          'max': '',
                          'min': '',
                          'name': 'spi.status.start_clk',
                          'offset': 385,
                          'total_size': '',
                          'type': '',
                          'type_size': 1},
 'spi.status.udr': {'access': 0,
                    'array_size': '',
                    'bit_offset': 3,
                    'bits': 1,
                    'default': '',
                    'description': 'Underrun flag',
                    'flag': '',
                    'invalid': '',
                    'max': '',
                    'min': '',
                    'name': 'spi.status.udr',
                    'offset': 385,
                    'total_size': '',
                    'type': '',
                    'type_size': 1},
 'spi.transfer_count': {'access': 0,
                        'array_size': '',
                        'bit_offset': '',
                        'bits': '',
                        'default': '',
                        'description': 'The amount of bytes in the last '
                                       'transfer ',
                        'flag': '',
                        'invalid': '',
                        'max': '',
                        'min': '',
                        'name': 'spi.transfer_count',
                        'offset': 398,
                        'total_size': '',
                        'type': 'uint8_t',
                        'type_size': 1},
 'spi.w_count': {'access': 0,
                 'array_size': '',
                 'bit_offset': '',
                 'bits': '',
                 'default': '',
                 'description': 'Last write frame byte count',
                 'flag': '',
                 'invalid': '',
                 'max': '',
                 'min': '',
                 'name': 'spi.w_count',
                 'offset': 397,
                 'total_size': '',
                 'type': 'uint8_t',
                 'type_size': 1},
 'sys.build_time.day_of_month': {'access': 0,
                                 'array_size': '',
                                 'bit_offset': '',
                                 'bits': '',
                                 'default': '',
                                 'description': 'The build time day of month',
                                 'flag': 'DEVICE_SPECIFIC',
                                 'invalid': '',
                                 'max': '',
                                 'min': '',
                                 'name': 'sys.build_time.day_of_month',
                                 'offset': 287,
                                 'total_size': '',
                                 'type': 'uint8_t',
                                 'type_size': 1},
 'sys.build_time.day_of_week': {'access': 0,
                                'array_size': '',
                                'bit_offset': '',
                                'bits': '',
                                'default': '',
                                'description': 'Not used',
                                'flag': 'DEVICE_SPECIFIC',
                                'invalid': '',
                                'max': '',
                                'min': '',
                                'name': 'sys.build_time.day_of_week',
                                'offset': 288,
                                'total_size': '',
                                'type': 'uint8_t',
                                'type_size': 1},
 'sys.build_time.hour': {'access': 0,
                         'array_size': '',
                         'bit_offset': '',
                         'bits': '',
                         'default': '',
                         'description': 'The build time hours',
                         'flag': 'DEVICE_SPECIFIC',
                         'invalid': '',
                         'max': '',
                         'min': '',
                         'name': 'sys.build_time.hour',
                         'offset': 286,
                         'total_size': '',
                         'type': 'uint8_t',
                         'type_size': 1},
 'sys.build_time.minute': {'access': 0,
                           'array_size': '',
                           'bit_offset': '',
                           'bits': '',
                           'default': '',
                           'description': 'The build time minutes',
                           'flag': 'DEVICE_SPECIFIC',
                           'invalid': '',
                           'max': '',
                           'min': '',
                           'name': 'sys.build_time.minute',
                           'offset': 285,
                           'total_size': '',
                           'type': 'uint8_t',
                           'type_size': 1},
 'sys.build_time.month': {'access': 0,
                          'array_size': '',
                          'bit_offset': '',
                          'bits': '',
                          'default': '',
                          'description': 'The build time month',
                          'flag': 'DEVICE_SPECIFIC',
                          'invalid': '',
                          'max': '',
                          'min': '',
                          'name': 'sys.build_time.month',
                          'offset': 289,
                          'total_size': '',
                          'type': 'uint8_t',
                          'type_size': 1},
 'sys.build_time.res': {'access': 0,
                        'array_size': 1,
                        'bit_offset': '',
                        'bits': '',
                        'default': '',
                        'description': 'Reserved bytes',
                        'flag': '',
                        'invalid': '',
                        'max': '',
                        'min': '',
                        'name': 'sys.build_time.res',
                        'offset': 291,
                        'total_size': 1,
                        'type': 'uint8_t',
                        'type_size': 1},
 'sys.build_time.second': {'access': 0,
                           'array_size': '',
                           'bit_offset': '',
                           'bits': '',
                           'default': '',
                           'description': 'The build time seconds',
                           'flag': 'DEVICE_SPECIFIC',
                           'invalid': '',
                           'max': '',
                           'min': '',
                           'name': 'sys.build_time.second',
                           'offset': 284,
                           'total_size': '',
                           'type': 'uint8_t',
                           'type_size': 1},
 'sys.build_time.year': {'access': 0,
                         'array_size': '',
                         'bit_offset': '',
                         'bits': '',
                         'default': '',
                         'description': 'The build time year (20XX)',
                         'flag': 'DEVICE_SPECIFIC',
                         'invalid': '',
                         'max': '',
                         'min': '',
                         'name': 'sys.build_time.year',
                         'offset': 290,
                         'total_size': '',
                         'type': 'uint8_t',
                         'type_size': 1},
 'sys.device_num': {'access': 0,
                    'array_size': '',
                    'bit_offset': '',
                    'bits': '',
                    'default': 17061,
                    'description': 'The philip device designator - A constant '
                                   'number to identify philip firmware',
                    'flag': '',
                    'invalid': '',
                    'max': '',
                    'min': '',
                    'name': 'sys.device_num',
                    'offset': 292,
                    'total_size': '',
                    'type': 'uint32_t',
                    'type_size': 4},
 'sys.fw_rev': {'access': 0,
                'array_size': 4,
                'bit_offset': '',
                'bits': '',
                'default': '',
                'description': 'Firmware revision',
                'flag': '',
                'invalid': 0,
                'max': '',
                'min': '',
                'name': 'sys.fw_rev',
                'offset': 268,
                'total_size': 4,
                'type': 'uint8_t',
                'type_size': 1},
 'sys.if_rev': {'access': 0,
                'array_size': 4,
                'bit_offset': '',
                'bits': '',
                'default': '',
                'description': 'Interface revision - This correlates to the '
                               'version of the memory map',
                'flag': '',
                'invalid': '',
                'max': '',
                'min': '',
                'name': 'sys.if_rev',
                'offset': 272,
                'total_size': 4,
                'type': 'uint8_t',
                'type_size': 1},
 'sys.mode.dut_rst': {'access': 1,
                      'array_size': '',
                      'bit_offset': 1,
                      'bits': 1,
                      'default': '',
                      'description': '1:put DUT in reset mode - 0:run DUT',
                      'flag': '',
                      'invalid': '',
                      'max': '',
                      'min': '',
                      'name': 'sys.mode.dut_rst',
                      'offset': 301,
                      'total_size': '',
                      'type': '',
                      'type_size': 1},
 'sys.mode.init': {'access': 1,
                   'array_size': '',
                   'bit_offset': 0,
                   'bits': 1,
                   'default': '',
                   'description': '0:periph will initialize on execute - '
                                  '1:periph initialized',
                   'flag': '',
                   'invalid': '',
                   'max': '',
                   'min': '',
                   'name': 'sys.mode.init',
                   'offset': 301,
                   'total_size': '',
                   'type': '',
                   'type_size': 1},
 'sys.mode.res': {'access': 1,
                  'array_size': '',
                  'bit_offset': 2,
                  'bits': 6,
                  'default': '',
                  'description': 'Reserved bits',
                  'flag': '',
                  'invalid': '',
                  'max': '',
                  'min': '',
                  'name': 'sys.mode.res',
                  'offset': 301,
                  'total_size': '',
                  'type': '',
                  'type_size': 1},
 'sys.res': {'access': 0,
             'array_size': 18,
             'bit_offset': '',
             'bits': '',
             'default': '',
             'description': 'Reserved bytes',
             'flag': '',
             'invalid': '',
             'max': '',
             'min': '',
             'name': 'sys.res',
             'offset': 302,
             'total_size': 18,
             'type': 'uint8_t',
             'type_size': 1},
 'sys.sn': {'access': 0,
            'array_size': 12,
            'bit_offset': '',
            'bits': '',
            'default': '',
            'description': 'Unique ID of the device',
            'flag': 'DEVICE_SPECIFIC',
            'invalid': '',
            'max': '',
            'min': '',
            'name': 'sys.sn',
            'offset': 256,
            'total_size': 12,
            'type': 'uint8_t',
            'type_size': 1},
 'sys.status.board': {'access': 0,
                      'array_size': '',
                      'bit_offset': 1,
                      'bits': 1,
                      'default': '',
                      'description': '1:board is a bluepill - 0:board is a '
                                     'nucleo-f103rb',
                      'flag': 'DEVICE_SPECIFIC',
                      'invalid': '',
                      'max': '',
                      'min': '',
                      'name': 'sys.status.board',
                      'offset': 300,
                      'total_size': '',
                      'type': '',
                      'type_size': 1},
 'sys.status.res': {'access': 1,
                    'array_size': '',
                    'bit_offset': 2,
                    'bits': 6,
                    'default': '',
                    'description': 'Reserved bits',
                    'flag': '',
                    'invalid': '',
                    'max': '',
                    'min': '',
                    'name': 'sys.status.res',
                    'offset': 300,
                    'total_size': '',
                    'type': '',
                    'type_size': 1},
 'sys.status.update': {'access': 0,
                       'array_size': '',
                       'bit_offset': 0,
                       'bits': 1,
                       'default': '',
                       'description': '1:register configuration requires '
                                      'execution for changes - 0:nothing to '
                                      'update',
                       'flag': '',
                       'invalid': '',
                       'max': '',
                       'min': '',
                       'name': 'sys.status.update',
                       'offset': 300,
                       'total_size': '',
                       'type': '',
                       'type_size': 1},
 'sys.sys_clk': {'access': 0,
                 'array_size': '',
                 'bit_offset': '',
                 'bits': '',
                 'default': '',
                 'description': 'The frequency of the system clock in Hz',
                 'flag': '',
                 'invalid': '',
                 'max': '',
                 'min': '',
                 'name': 'sys.sys_clk',
                 'offset': 296,
                 'total_size': '',
                 'type': 'uint32_t',
                 'type_size': 4},
 'sys.tick': {'access': 0,
              'array_size': '',
              'bit_offset': '',
              'bits': '',
              'default': '',
              'description': 'Tick in ms - Updates with the sys tick register '
                             'every few ms',
              'flag': 'VOLATILE',
              'invalid': '',
              'max': '',
              'min': '',
              'name': 'sys.tick',
              'offset': 276,
              'total_size': '',
              'type': 'uint64_t',
              'type_size': 8},
 'tmr.dut_ic.io_type': {'access': 1,
                        'array_size': '',
                        'bit_offset': 0,
                        'bits': 2,
                        'default': '',
                        'description': '0:high impedance input - 1:push pull '
                                       'output - 2:open drain output',
                        'flag': '',
                        'invalid': '',
                        'max': '',
                        'min': '',
                        'name': 'tmr.dut_ic.io_type',
                        'offset': 529,
                        'total_size': '',
                        'type': '',
                        'type_size': 1},
 'tmr.dut_ic.level': {'access': 1,
                      'array_size': '',
                      'bit_offset': 5,
                      'bits': 1,
                      'default': '',
                      'description': 'Current value of gpio - 0:low - 1:high',
                      'flag': '',
                      'invalid': '',
                      'max': '',
                      'min': '',
                      'name': 'tmr.dut_ic.level',
                      'offset': 529,
                      'total_size': '',
                      'type': '',
                      'type_size': 1},
 'tmr.dut_ic.pull': {'access': 1,
                     'array_size': '',
                     'bit_offset': 2,
                     'bits': 2,
                     'default': '',
                     'description': 'pull of the resistor - 0:none - 1:pullup '
                                    '- 2:pulldown',
                     'flag': '',
                     'invalid': '',
                     'max': '',
                     'min': '',
                     'name': 'tmr.dut_ic.pull',
                     'offset': 529,
                     'total_size': '',
                     'type': '',
                     'type_size': 1},
 'tmr.dut_ic.res': {'access': 1,
                    'array_size': '',
                    'bit_offset': 6,
                    'bits': 2,
                    'default': '',
                    'description': 'Reserved bits',
                    'flag': '',
                    'invalid': '',
                    'max': '',
                    'min': '',
                    'name': 'tmr.dut_ic.res',
                    'offset': 529,
                    'total_size': '',
                    'type': '',
                    'type_size': 1},
 'tmr.dut_ic.set_level': {'access': 1,
                          'array_size': '',
                          'bit_offset': 4,
                          'bits': 1,
                          'default': '',
                          'description': 'If output sets gpio level - 0:low - '
                                         '1:high',
                          'flag': '',
                          'invalid': '',
                          'max': '',
                          'min': '',
                          'name': 'tmr.dut_ic.set_level',
                          'offset': 529,
                          'total_size': '',
                          'type': '',
                          'type_size': 1},
 'tmr.max_tick': {'access': 0,
                  'array_size': '',
                  'bit_offset': '',
                  'bits': '',
                  'default': '',
                  'description': 'Maximum tick difference',
                  'flag': '',
                  'invalid': '',
                  'max': '',
                  'min': '',
                  'name': 'tmr.max_tick',
                  'offset': 536,
                  'total_size': '',
                  'type': 'uint32_t',
                  'type_size': 4},
 'tmr.min_holdoff': {'access': 0,
                     'array_size': '',
                     'bit_offset': '',
                     'bits': '',
                     'default': '',
                     'description': 'The minimum amount of time to wait before '
                                    'triggering another event in ns',
                     'flag': '',
                     'invalid': '',
                     'max': '',
                     'min': '',
                     'name': 'tmr.min_holdoff',
                     'offset': 530,
                     'total_size': '',
                     'type': 'uint16_t',
                     'type_size': 2},
 'tmr.min_tick': {'access': 0,
                  'array_size': '',
                  'bit_offset': '',
                  'bits': '',
                  'default': 4294967295,
                  'description': 'Minimum tick difference',
                  'flag': '',
                  'invalid': '',
                  'max': '',
                  'min': '',
                  'name': 'tmr.min_tick',
                  'offset': 532,
                  'total_size': '',
                  'type': 'uint32_t',
                  'type_size': 4},
 'tmr.mode.disable': {'access': 1,
                      'array_size': '',
                      'bit_offset': 1,
                      'bits': 1,
                      'default': '',
                      'description': '0:periph is enabled - 1:periph is '
                                     'disabled',
                      'flag': '',
                      'invalid': '',
                      'max': '',
                      'min': '',
                      'name': 'tmr.mode.disable',
                      'offset': 528,
                      'total_size': '',
                      'type': '',
                      'type_size': 1},
 'tmr.mode.init': {'access': 1,
                   'array_size': '',
                   'bit_offset': 0,
                   'bits': 1,
                   'default': '',
                   'description': '0:periph will initialize on execute - '
                                  '1:periph initialized',
                   'flag': '',
                   'invalid': '',
                   'max': '',
                   'min': '',
                   'name': 'tmr.mode.init',
                   'offset': 528,
                   'total_size': '',
                   'type': '',
                   'type_size': 1},
 'tmr.mode.res': {'access': 1,
                  'array_size': '',
                  'bit_offset': 4,
                  'bits': 4,
                  'default': '',
                  'description': 'Reserved bits',
                  'flag': '',
                  'invalid': '',
                  'max': '',
                  'min': '',
                  'name': 'tmr.mode.res',
                  'offset': 528,
                  'total_size': '',
                  'type': '',
                  'type_size': 1},
 'tmr.mode.trig_edge': {'access': 1,
                        'array_size': '',
                        'bit_offset': 2,
                        'bits': 2,
                        'default': '',
                        'description': '0:both - 1:rising - 1:falling',
                        'flag': '',
                        'invalid': '',
                        'max': '',
                        'min': '',
                        'name': 'tmr.mode.trig_edge',
                        'offset': 528,
                        'total_size': '',
                        'type': '',
                        'type_size': 1},
 'trace.index': {'access': 0,
                 'array_size': '',
                 'bit_offset': '',
                 'bits': '',
                 'default': '',
                 'description': 'Index of the current trace',
                 'flag': '',
                 'invalid': '',
                 'max': '',
                 'min': '',
                 'name': 'trace.index',
                 'offset': 552,
                 'total_size': '',
                 'type': 'uint32_t',
                 'type_size': 4},
 'trace.source': {'access': 0,
                  'array_size': 128,
                  'bit_offset': '',
                  'bits': '',
                  'default': '',
                  'description': 'The event source of the event - 0:no source '
                                 'selected - 1:DEBUG0 pin - 2:DEBUG1 pin - '
                                 '3:DEBUG2 pin',
                  'flag': '',
                  'invalid': '',
                  'max': '',
                  'min': '',
                  'name': 'trace.source',
                  'offset': 684,
                  'total_size': 128,
                  'type': 'uint8_t',
                  'type_size': 1},
 'trace.tick': {'access': 0,
                'array_size': 128,
                'bit_offset': '',
                'bits': '',
                'default': '',
                'description': 'The tick when the event occurred',
                'flag': '',
                'invalid': '',
                'max': '',
                'min': '',
                'name': 'trace.tick',
                'offset': 1068,
                'total_size': 512,
                'type': 'uint32_t',
                'type_size': 4},
 'trace.tick_div': {'access': 0,
                    'array_size': 128,
                    'bit_offset': '',
                    'bits': '',
                    'default': '',
                    'description': 'The tick divisor of the event - max should '
                                   'be 16 for interface',
                    'flag': '',
                    'invalid': '',
                    'max': '',
                    'min': '',
                    'name': 'trace.tick_div',
                    'offset': 556,
                    'total_size': 128,
                    'type': 'uint8_t',
                    'type_size': 1},
 'trace.value': {'access': 0,
                 'array_size': 128,
                 'bit_offset': '',
                 'bits': '',
                 'default': '',
                 'description': 'The value of the event - 0:falling edge '
                                'interrupt - 1:rising edge interrupt',
                 'flag': '',
                 'invalid': '',
                 'max': '',
                 'min': '',
                 'name': 'trace.value',
                 'offset': 812,
                 'total_size': 256,
                 'type': 'uint16_t',
                 'type_size': 2},
 'uart.baud': {'access': 1,
               'array_size': '',
               'bit_offset': '',
               'bits': '',
               'default': '',
               'description': 'Baudrate',
               'flag': '',
               'invalid': '',
               'max': '',
               'min': '',
               'name': 'uart.baud',
               'offset': 422,
               'total_size': '',
               'type': 'uint32_t',
               'type_size': 4},
 'uart.dut_cts.io_type': {'access': 1,
                          'array_size': '',
                          'bit_offset': 0,
                          'bits': 2,
                          'default': '',
                          'description': '0:high impedance input - 1:push pull '
                                         'output - 2:open drain output',
                          'flag': '',
                          'invalid': '',
                          'max': '',
                          'min': '',
                          'name': 'uart.dut_cts.io_type',
                          'offset': 420,
                          'total_size': '',
                          'type': '',
                          'type_size': 1},
 'uart.dut_cts.level': {'access': 1,
                        'array_size': '',
                        'bit_offset': 5,
                        'bits': 1,
                        'default': '',
                        'description': 'Current value of gpio - 0:low - 1:high',
                        'flag': 'VOLATILE',
                        'invalid': '',
                        'max': '',
                        'min': '',
                        'name': 'uart.dut_cts.level',
                        'offset': 420,
                        'total_size': '',
                        'type': '',
                        'type_size': 1},
 'uart.dut_cts.pull': {'access': 1,
                       'array_size': '',
                       'bit_offset': 2,
                       'bits': 2,
                       'default': '',
                       'description': 'pull of the resistor - 0:none - '
                                      '1:pullup - 2:pulldown',
                       'flag': '',
                       'invalid': '',
                       'max': '',
                       'min': '',
                       'name': 'uart.dut_cts.pull',
                       'offset': 420,
                       'total_size': '',
                       'type': '',
                       'type_size': 1},
 'uart.dut_cts.res': {'access': 1,
                      'array_size': '',
                      'bit_offset': 6,
                      'bits': 2,
                      'default': '',
                      'description': 'Reserved bits',
                      'flag': '',
                      'invalid': '',
                      'max': '',
                      'min': '',
                      'name': 'uart.dut_cts.res',
                      'offset': 420,
                      'total_size': '',
                      'type': '',
                      'type_size': 1},
 'uart.dut_cts.set_level': {'access': 1,
                            'array_size': '',
                            'bit_offset': 4,
                            'bits': 1,
                            'default': '',
                            'description': 'If output sets gpio level - 0:low '
                                           '- 1:high',
                            'flag': '',
                            'invalid': '',
                            'max': '',
                            'min': '',
                            'name': 'uart.dut_cts.set_level',
                            'offset': 420,
                            'total_size': '',
                            'type': '',
                            'type_size': 1},
 'uart.dut_rts.io_type': {'access': 1,
                          'array_size': '',
                          'bit_offset': 0,
                          'bits': 2,
                          'default': '',
                          'description': '0:high impedance input - 1:push pull '
                                         'output - 2:open drain output',
                          'flag': '',
                          'invalid': '',
                          'max': '',
                          'min': '',
                          'name': 'uart.dut_rts.io_type',
                          'offset': 421,
                          'total_size': '',
                          'type': '',
                          'type_size': 1},
 'uart.dut_rts.level': {'access': 1,
                        'array_size': '',
                        'bit_offset': 5,
                        'bits': 1,
                        'default': '',
                        'description': 'Current value of gpio - 0:low - 1:high',
                        'flag': 'VOLATILE',
                        'invalid': '',
                        'max': '',
                        'min': '',
                        'name': 'uart.dut_rts.level',
                        'offset': 421,
                        'total_size': '',
                        'type': '',
                        'type_size': 1},
 'uart.dut_rts.pull': {'access': 1,
                       'array_size': '',
                       'bit_offset': 2,
                       'bits': 2,
                       'default': '',
                       'description': 'pull of the resistor - 0:none - '
                                      '1:pullup - 2:pulldown',
                       'flag': '',
                       'invalid': '',
                       'max': '',
                       'min': '',
                       'name': 'uart.dut_rts.pull',
                       'offset': 421,
                       'total_size': '',
                       'type': '',
                       'type_size': 1},
 'uart.dut_rts.res': {'access': 1,
                      'array_size': '',
                      'bit_offset': 6,
                      'bits': 2,
                      'default': '',
                      'description': 'Reserved bits',
                      'flag': '',
                      'invalid': '',
                      'max': '',
                      'min': '',
                      'name': 'uart.dut_rts.res',
                      'offset': 421,
                      'total_size': '',
                      'type': '',
                      'type_size': 1},
 'uart.dut_rts.set_level': {'access': 1,
                            'array_size': '',
                            'bit_offset': 4,
                            'bits': 1,
                            'default': '',
                            'description': 'If output sets gpio level - 0:low '
                                           '- 1:high',
                            'flag': '',
                            'invalid': '',
                            'max': '',
                            'min': '',
                            'name': 'uart.dut_rts.set_level',
                            'offset': 421,
                            'total_size': '',
                            'type': '',
                            'type_size': 1},
 'uart.dut_rx.io_type': {'access': 1,
                         'array_size': '',
                         'bit_offset': 0,
                         'bits': 2,
                         'default': '',
                         'description': '0:high impedance input - 1:push pull '
                                        'output - 2:open drain output',
                         'flag': '',
                         'invalid': '',
                         'max': '',
                         'min': '',
                         'name': 'uart.dut_rx.io_type',
                         'offset': 418,
                         'total_size': '',
                         'type': '',
                         'type_size': 1},
 'uart.dut_rx.level': {'access': 1,
                       'array_size': '',
                       'bit_offset': 5,
                       'bits': 1,
                       'default': '',
                       'description': 'Current value of gpio - 0:low - 1:high',
                       'flag': '',
                       'invalid': '',
                       'max': '',
                       'min': '',
                       'name': 'uart.dut_rx.level',
                       'offset': 418,
                       'total_size': '',
                       'type': '',
                       'type_size': 1},
 'uart.dut_rx.pull': {'access': 1,
                      'array_size': '',
                      'bit_offset': 2,
                      'bits': 2,
                      'default': '',
                      'description': 'pull of the resistor - 0:none - 1:pullup '
                                     '- 2:pulldown',
                      'flag': '',
                      'invalid': '',
                      'max': '',
                      'min': '',
                      'name': 'uart.dut_rx.pull',
                      'offset': 418,
                      'total_size': '',
                      'type': '',
                      'type_size': 1},
 'uart.dut_rx.res': {'access': 1,
                     'array_size': '',
                     'bit_offset': 6,
                     'bits': 2,
                     'default': '',
                     'description': 'Reserved bits',
                     'flag': '',
                     'invalid': '',
                     'max': '',
                     'min': '',
                     'name': 'uart.dut_rx.res',
                     'offset': 418,
                     'total_size': '',
                     'type': '',
                     'type_size': 1},
 'uart.dut_rx.set_level': {'access': 1,
                           'array_size': '',
                           'bit_offset': 4,
                           'bits': 1,
                           'default': '',
                           'description': 'If output sets gpio level - 0:low - '
                                          '1:high',
                           'flag': '',
                           'invalid': '',
                           'max': '',
                           'min': '',
                           'name': 'uart.dut_rx.set_level',
                           'offset': 418,
                           'total_size': '',
                           'type': '',
                           'type_size': 1},
 'uart.dut_tx.io_type': {'access': 1,
                         'array_size': '',
                         'bit_offset': 0,
                         'bits': 2,
                         'default': '',
                         'description': '0:high impedance input - 1:push pull '
                                        'output - 2:open drain output',
                         'flag': '',
                         'invalid': '',
                         'max': '',
                         'min': '',
                         'name': 'uart.dut_tx.io_type',
                         'offset': 419,
                         'total_size': '',
                         'type': '',
                         'type_size': 1},
 'uart.dut_tx.level': {'access': 1,
                       'array_size': '',
                       'bit_offset': 5,
                       'bits': 1,
                       'default': '',
                       'description': 'Current value of gpio - 0:low - 1:high',
                       'flag': '',
                       'invalid': '',
                       'max': '',
                       'min': '',
                       'name': 'uart.dut_tx.level',
                       'offset': 419,
                       'total_size': '',
                       'type': '',
                       'type_size': 1},
 'uart.dut_tx.pull': {'access': 1,
                      'array_size': '',
                      'bit_offset': 2,
                      'bits': 2,
                      'default': '',
                      'description': 'pull of the resistor - 0:none - 1:pullup '
                                     '- 2:pulldown',
                      'flag': '',
                      'invalid': '',
                      'max': '',
                      'min': '',
                      'name': 'uart.dut_tx.pull',
                      'offset': 419,
                      'total_size': '',
                      'type': '',
                      'type_size': 1},
 'uart.dut_tx.res': {'access': 1,
                     'array_size': '',
                     'bit_offset': 6,
                     'bits': 2,
                     'default': '',
                     'description': 'Reserved bits',
                     'flag': '',
                     'invalid': '',
                     'max': '',
                     'min': '',
                     'name': 'uart.dut_tx.res',
                     'offset': 419,
                     'total_size': '',
                     'type': '',
                     'type_size': 1},
 'uart.dut_tx.set_level': {'access': 1,
                           'array_size': '',
                           'bit_offset': 4,
                           'bits': 1,
                           'default': '',
                           'description': 'If output sets gpio level - 0:low - '
                                          '1:high',
                           'flag': '',
                           'invalid': '',
                           'max': '',
                           'min': '',
                           'name': 'uart.dut_tx.set_level',
                           'offset': 419,
                           'total_size': '',
                           'type': '',
                           'type_size': 1},
 'uart.mask_msb': {'access': 0,
                   'array_size': '',
                   'bit_offset': '',
                   'bits': '',
                   'default': '',
                   'description': 'Masks the data coming in if 7 bit mode',
                   'flag': '',
                   'invalid': '',
                   'max': '',
                   'min': '',
                   'name': 'uart.mask_msb',
                   'offset': 426,
                   'total_size': '',
                   'type': 'uint8_t',
                   'type_size': 1},
 'uart.mode.data_bits': {'access': 1,
                         'array_size': '',
                         'bit_offset': 8,
                         'bits': 1,
                         'default': '',
                         'description': '0:8 data bits - 1:7 data bits',
                         'flag': '',
                         'invalid': '',
                         'max': '',
                         'min': '',
                         'name': 'uart.mode.data_bits',
                         'offset': 416,
                         'total_size': '',
                         'type': '',
                         'type_size': 2},
 'uart.mode.disable': {'access': 1,
                       'array_size': '',
                       'bit_offset': 1,
                       'bits': 1,
                       'default': '',
                       'description': '0:periph is enabled - 1:periph is '
                                      'disabled',
                       'flag': '',
                       'invalid': '',
                       'max': '',
                       'min': '',
                       'name': 'uart.mode.disable',
                       'offset': 416,
                       'total_size': '',
                       'type': '',
                       'type_size': 2},
 'uart.mode.if_type': {'access': 1,
                       'array_size': '',
                       'bit_offset': 2,
                       'bits': 2,
                       'default': '',
                       'description': '0:echos - 1:echos and adds one - '
                                      '2:reads application registers - '
                                      '3:constantly transmits',
                       'flag': '',
                       'invalid': '',
                       'max': '',
                       'min': '',
                       'name': 'uart.mode.if_type',
                       'offset': 416,
                       'total_size': '',
                       'type': '',
                       'type_size': 2},
 'uart.mode.init': {'access': 1,
                    'array_size': '',
                    'bit_offset': 0,
                    'bits': 1,
                    'default': '',
                    'description': '0:periph will initialize on execute - '
                                   '1:periph initialized',
                    'flag': '',
                    'invalid': '',
                    'max': '',
                    'min': '',
                    'name': 'uart.mode.init',
                    'offset': 416,
                    'total_size': '',
                    'type': '',
                    'type_size': 2},
 'uart.mode.parity': {'access': 1,
                      'array_size': '',
                      'bit_offset': 5,
                      'bits': 2,
                      'default': '',
                      'description': '0:no parity - 1:even parity - 2:odd '
                                     'parity',
                      'flag': '',
                      'invalid': '',
                      'max': '',
                      'min': '',
                      'name': 'uart.mode.parity',
                      'offset': 416,
                      'total_size': '',
                      'type': '',
                      'type_size': 2},
 'uart.mode.res': {'access': 1,
                   'array_size': '',
                   'bit_offset': 9,
                   'bits': 7,
                   'default': '',
                   'description': 'Reserved bits',
                   'flag': '',
                   'invalid': '',
                   'max': '',
                   'min': '',
                   'name': 'uart.mode.res',
                   'offset': 416,
                   'total_size': '',
                   'type': '',
                   'type_size': 2},
 'uart.mode.rts': {'access': 1,
                   'array_size': '',
                   'bit_offset': 7,
                   'bits': 1,
                   'default': '',
                   'description': 'RTS pin state',
                   'flag': '',
                   'invalid': '',
                   'max': '',
                   'min': '',
                   'name': 'uart.mode.rts',
                   'offset': 416,
                   'total_size': '',
                   'type': '',
                   'type_size': 2},
 'uart.mode.stop_bits': {'access': 1,
                         'array_size': '',
                         'bit_offset': 4,
                         'bits': 1,
                         'default': '',
                         'description': '0:1 stop bit - 1:2 stop bits',
                         'flag': '',
                         'invalid': '',
                         'max': '',
                         'min': '',
                         'name': 'uart.mode.stop_bits',
                         'offset': 416,
                         'total_size': '',
                         'type': '',
                         'type_size': 2},
 'uart.rx_count': {'access': 0,
                   'array_size': '',
                   'bit_offset': '',
                   'bits': '',
                   'default': '',
                   'description': 'Number of received bytes',
                   'flag': '',
                   'invalid': '',
                   'max': '',
                   'min': '',
                   'name': 'uart.rx_count',
                   'offset': 427,
                   'total_size': '',
                   'type': 'uint16_t',
                   'type_size': 2},
 'uart.status.cts': {'access': 0,
                     'array_size': '',
                     'bit_offset': 0,
                     'bits': 1,
                     'default': '',
                     'description': 'CTS pin state',
                     'flag': '',
                     'invalid': '',
                     'max': '',
                     'min': '',
                     'name': 'uart.status.cts',
                     'offset': 431,
                     'total_size': '',
                     'type': '',
                     'type_size': 1},
 'uart.status.fe': {'access': 0,
                    'array_size': '',
                    'bit_offset': 2,
                    'bits': 1,
                    'default': '',
                    'description': 'Framing error',
                    'flag': '',
                    'invalid': '',
                    'max': '',
                    'min': '',
                    'name': 'uart.status.fe',
                    'offset': 431,
                    'total_size': '',
                    'type': '',
                    'type_size': 1},
 'uart.status.nf': {'access': 0,
                    'array_size': '',
                    'bit_offset': 3,
                    'bits': 1,
                    'default': '',
                    'description': 'Noise detected flag',
                    'flag': '',
                    'invalid': '',
                    'max': '',
                    'min': '',
                    'name': 'uart.status.nf',
                    'offset': 431,
                    'total_size': '',
                    'type': '',
                    'type_size': 1},
 'uart.status.ore': {'access': 0,
                     'array_size': '',
                     'bit_offset': 4,
                     'bits': 1,
                     'default': '',
                     'description': 'Overrun error',
                     'flag': '',
                     'invalid': '',
                     'max': '',
                     'min': '',
                     'name': 'uart.status.ore',
                     'offset': 431,
                     'total_size': '',
                     'type': '',
                     'type_size': 1},
 'uart.status.pe': {'access': 0,
                    'array_size': '',
                    'bit_offset': 1,
                    'bits': 1,
                    'default': '',
                    'description': 'Parity error',
                    'flag': '',
                    'invalid': '',
                    'max': '',
                    'min': '',
                    'name': 'uart.status.pe',
                    'offset': 431,
                    'total_size': '',
                    'type': '',
                    'type_size': 1},
 'uart.status.res': {'access': 1,
                     'array_size': '',
                     'bit_offset': 5,
                     'bits': 3,
                     'default': '',
                     'description': 'Reserved bits',
                     'flag': '',
                     'invalid': '',
                     'max': '',
                     'min': '',
                     'name': 'uart.status.res',
                     'offset': 431,
                     'total_size': '',
                     'type': '',
                     'type_size': 1},
 'uart.tx_count': {'access': 0,
                   'array_size': '',
                   'bit_offset': '',
                   'bits': '',
                   'default': '',
                   'description': 'Number of transmitted bytes',
                   'flag': '',
                   'invalid': '',
                   'max': '',
                   'min': '',
                   'name': 'uart.tx_count',
                   'offset': 429,
                   'total_size': '',
                   'type': 'uint16_t',
                   'type_size': 2},
 'user_reg': {'access': 3,
              'array_size': 256,
              'bit_offset': '',
              'bits': '',
              'default': '',
              'description': 'Writable registers for user testing - Starts at '
                             '0 and increases 1 each register by default',
              'flag': '',
              'invalid': '',
              'max': '',
              'min': '',
              'name': 'user_reg',
              'offset': 0,
              'total_size': 256,
              'type': 'uint8_t',
              'type_size': 1}}