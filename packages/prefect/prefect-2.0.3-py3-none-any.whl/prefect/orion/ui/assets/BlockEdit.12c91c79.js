import{d as B,u as C,a3 as D,ad as m,r as w,e,o as x,b as V,w as c,i as s,au as $,av as g,ap as A,aq as I,an as N,f as P,ac as p,Q as k,p as R}from"./index.7b8b29e7.js";import{u as S}from"./useRouteParam.7e1daaac.js";const F=B({__name:"BlockEdit",async setup(T){let o,n;const u=C(),l=S("blockDocumentId"),a=([o,n]=D(()=>p.getBlockDocument(l.value)),o=await o,n(),o),{blockType:_,blockSchema:i}=a,t=m(a.data),f=m(a.name);function b(){p.updateBlockDocument(a.id,{data:t.value}).then(()=>{k("Block updated successfully","success"),u.push(R.block(l.value))}).catch(r=>{k("Failed to update block","error"),console.error(r)})}function y(){u.back()}return(r,d)=>{const h=w("p-layout-default");return e(a)?(x(),V(h,{key:0,class:"block-edit"},{header:c(()=>[s(e($),{"block-document":e(a)},null,8,["block-document"])]),default:c(()=>[s(e(N),{"block-type":e(_)},{default:c(()=>[s(e(g),A({data:t.value,"onUpdate:data":d[0]||(d[0]=v=>t.value=v)},{name:f.value,blockSchema:e(i)},I({submit:b,cancel:y})),null,16,["data"])]),_:1},8,["block-type"])]),_:1})):P("",!0)}}});export{F as default};
