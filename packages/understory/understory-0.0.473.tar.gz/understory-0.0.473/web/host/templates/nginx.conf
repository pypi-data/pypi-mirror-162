$def with (ip_address)
daemon            off;
worker_processes  auto;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    types_hash_max_size  2048;
    sendfile             on;
    tcp_nopush           on;
    tcp_nodelay          on;
    keepalive_timeout    65;
    server_tokens        off;

    gzip          on;
    gzip_disable  "msie6";

    access_log  /root/nginx/logs/access.log;
    error_log   /root/nginx/logs/error.log;

    log_format  gaeafmt  '$$remote_addr [$$time_local] "$$request" $$status '
                         '$$request_time $$bytes_sent "$$http_referer" '
                         '"$$http_user_agent" "$$sent_http_set_cookie"';

    include /root/nginx/conf/conf.d/*.conf;

    server {
        listen       80;
        server_name  $ip_address;
        charset      utf-8;
        error_page   403 404          /error/40x.html;
        error_page   500 502 503 504  /error/50x.html;
        root         /root/trunk;
        access_log   /root/trunk/access.log  gaeafmt;
        error_log    /root/trunk/error.log   info;
        location  /  {
        }
    }
}

rtmp {
    # Define where the HLS files will be written. Viewers will be fetching
    # these files from the browser, so the `location /hls` above points to
    # this folder as well
    hls on;
    hls_path /root/streaming/hls;
    hls_fragment 5s;

    # Enable recording archived files of each stream
    # Does not need to be publicly accessible, will convert and publish later
    record all;
    record_path /root/streaming/rec;
    record_suffix _%Y-%m-%d_%H-%M-%S.flv;
    record_lock on;

    # Define the two scripts that will run when recording starts and when
    # it finishes
    exec_publish /root/streaming/publish.sh;
    exec_record_done /root/streaming/finished.sh $$path $$basename.mp4;

    access_log /root/nginx/logs/rtmp_access.log combined;
    access_log on;

    server {
        listen 1935;
        chunk_size 4096;

        application rtmp {
            live on;
            record all;
        }
    }
}

# leave this here for cat'ing over SSH...
