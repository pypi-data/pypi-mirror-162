[tool.poetry]
name = "encode-utils-cli"
version = "0.0.2"
description = "Encode utils collection"
authors = ["DeadNews <uhjnnn@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/DeadNews/encode-utils-cli"
repository = "https://github.com/DeadNews/encode-utils-cli"
keywords = ["cli", "encode", "vapoursynth"]
classifiers = [
  "Environment :: Console",
  "Operating System :: OS Independent",
  "Topic :: Multimedia :: Video",
]

[tool.poetry.scripts]
encode-utils-cli = "encode_utils_cli.cli:cli"

[tool.poetry.dependencies]
python = "^3.10"
click = "^8.0.2"
pyperclip = "^1.8.2"
PyYAML = "^6.0"
schema = "^0.7.5"
tomli = "^2.0.1"
vapoursynth = "^59"
vapoursynth-portable = { version = "^59", optional = true }

[tool.poetry.dev-dependencies]
bandit = "^1.7.4"
black = "^22.3.0"
flake8 = "^5.0.2"
flake8-bugbear = "^22.4.25"
flake8-comprehensions = "^3.10.0"
flake8-implicit-str-concat = "^0.3.0"
flake8-pytest-style = "^1.6.0"
flake8-simplify = "^0.19.2"
flake8-unused-arguments = "^0.0.11"
isort = "^5.10.1"
mypy = "^0.971"
pep8-naming = "^0.13.0"
poethepoet = "^0.16.0"
pre-commit = "^2.19.0"
pytest = "^7.1.2"
pytest-cov = "^3.0.0"
safety = "^2.0.0"
types-PyYAML = "^6.0.11"

[tool.poetry.extras]
vapoursynth-portable = ["vapoursynth-portable"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88

[tool.isort]
line_length = 88
profile = "black"

[tool.mypy]
disallow_untyped_defs = true
follow_imports = "silent"
ignore_missing_imports = true
show_column_numbers = true
show_error_codes = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = ["tests.*"]
allow_untyped_defs = true

[tool.bandit]
exclude_dirs = ["tests"]
skips = [
  "B404", # Importing subprocess
  "B603", # Calling subprocess.Popen without shell=True
]

[tool.pytest.ini_options]
addopts = "--verbose --cov=./src"
testpaths = ["tests"]

[tool.coverage.report]
exclude_lines = ["if __name__ == .__main__.:"]

[tool.poe.tasks]
isort = "isort . --check-only --diff"
black = "black . --check --diff"
mypy = "mypy ."
flake8 = "flake8 ."
bandit = "bandit -c pyproject.toml -r ."
safety = "safety check --bare"

[tool.poe.tasks.ci]
help = "CI sequence"
sequence = ["isort", "black", "mypy", "flake8", "bandit", "safety"]

[tool.poe.tasks.pc]
help = "pre-commit"
cmd = "pre-commit run --all-files"
