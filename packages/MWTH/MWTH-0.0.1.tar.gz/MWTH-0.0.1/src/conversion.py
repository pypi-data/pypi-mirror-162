"""
This is the file containing the functions for conversion including:
ebf_to_fits
"""

def ebf_to_fits(filename,output_columelist=None, saveto_filename=None,print_colums_only=False):
    """
    convert the ebf file (generated by galaxia) to fits,
    :param filename:
    :param output_columelist:
    :param saveto_filename:
    :return:
    """
    import ebf
    from astropy.table import Table
    data_in = ebf.read(filename)
    if print_colums_only:
        keys_in = data_in.keys()
        print(keys_in)
    else:
        if output_columelist == None:
            output_columelist = ['px', 'py', 'pz', 'vx', 'vy', 'vz', 'feh', 'alpha', 'smass', 'age', \
                                 'rad', 'mag0', 'mag1', 'mag2', 'popid', 'satid', 'fieldid', 'partid', \
                                 'lum', 'teff', 'grav', 'mact', 'mtip', 'dcmc_i', 'dcmc_j', \
                                 'dcmc_h', 'dcmc_ks', 'exbv_schlegel', 'exbv_solar', 'exbv_schlegel_inf', 'glon', 'glat']
        data_out = Table()
        for column_tmp in output_columelist:
            print(column_tmp, len(data_in[column_tmp]))
            data_out[column_tmp] = data_in[column_tmp]
        if saveto_filename is None:
            filename_out = filename[:-4]+".fits"
        else:
            filename_out = saveto_filename
        data_out.write(filename_out,overwrite=True)