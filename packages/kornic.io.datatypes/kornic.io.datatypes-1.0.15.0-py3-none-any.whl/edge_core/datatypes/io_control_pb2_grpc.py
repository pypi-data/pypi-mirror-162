# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import edge_core.datatypes.io_control_pb2 as io__control__pb2


class IoControlServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetIoResponse = channel.unary_unary(
                '/io.v1.IoControlService/GetIoResponse',
                request_serializer=io__control__pb2.IoControlMessage.SerializeToString,
                response_deserializer=io__control__pb2.IoResponse.FromString,
                )
        self.GetIoAllCached = channel.unary_unary(
                '/io.v1.IoControlService/GetIoAllCached',
                request_serializer=io__control__pb2.Empty.SerializeToString,
                response_deserializer=io__control__pb2.CacheIoResponse.FromString,
                )
        self.SetIoCache = channel.unary_unary(
                '/io.v1.IoControlService/SetIoCache',
                request_serializer=io__control__pb2.CacheIoSet.SerializeToString,
                response_deserializer=io__control__pb2.ResponseResult.FromString,
                )


class IoControlServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetIoResponse(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetIoAllCached(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetIoCache(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IoControlServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetIoResponse': grpc.unary_unary_rpc_method_handler(
                    servicer.GetIoResponse,
                    request_deserializer=io__control__pb2.IoControlMessage.FromString,
                    response_serializer=io__control__pb2.IoResponse.SerializeToString,
            ),
            'GetIoAllCached': grpc.unary_unary_rpc_method_handler(
                    servicer.GetIoAllCached,
                    request_deserializer=io__control__pb2.Empty.FromString,
                    response_serializer=io__control__pb2.CacheIoResponse.SerializeToString,
            ),
            'SetIoCache': grpc.unary_unary_rpc_method_handler(
                    servicer.SetIoCache,
                    request_deserializer=io__control__pb2.CacheIoSet.FromString,
                    response_serializer=io__control__pb2.ResponseResult.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'io.v1.IoControlService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class IoControlService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetIoResponse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.v1.IoControlService/GetIoResponse',
            io__control__pb2.IoControlMessage.SerializeToString,
            io__control__pb2.IoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetIoAllCached(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.v1.IoControlService/GetIoAllCached',
            io__control__pb2.Empty.SerializeToString,
            io__control__pb2.CacheIoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetIoCache(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.v1.IoControlService/SetIoCache',
            io__control__pb2.CacheIoSet.SerializeToString,
            io__control__pb2.ResponseResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
