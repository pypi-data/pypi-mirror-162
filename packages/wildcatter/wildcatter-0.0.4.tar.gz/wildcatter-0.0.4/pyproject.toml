[tool.poetry]
name = "wildcatter"
version = "0.0.4"
description = "Wildcatter"
authors = ["Altay Sansal <tasansal@users.noreply.github.com>"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/GeoML-SIG/wildcatter"
repository = "https://github.com/GeoML-SIG/wildcatter"
documentation = "https://wildcatter.readthedocs.io"
packages = [
    { include = "wildcatter", from = "src" },
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
]

[tool.poetry.urls]
Changelog = "https://github.com/GeoML-SIG/wildcatter/releases"

[tool.poetry.dependencies]
python = ">=3.8 <3.10"
gym = "^0.21"
torch = "^1.12.0"
click = ">=8.0.4"
stable-baselines3 = "^1.6.0"
pygame = { version = "2.1.0", optional = true }
pyglet = {version = "^1.5.26", optional = true}

[tool.poetry.group.notebook]
optional = true

[tool.poetry.group.notebook.dependencies]
matplotlib = "^3.5.2"
jupyterlab = "^3.4.3"

[tool.poetry.group.serve]
optional = true

[tool.poetry.group.serve.dependencies]
pygbag = "^0.0.9"

[tool.poetry.group.dev.dependencies]
Pygments = ">=2.10.0"
black = {version = "^22.6.0", extras = ["jupyter"]}
coverage = {extras = ["toml"], version = ">=6.2"}
darglint = ">=1.8.1"
flake8 = ">=4.0.1 <5.0.0"
flake8-bandit = ">=2.1.2"
flake8-bugbear = ">=21.9.2"
flake8-docstrings = ">=1.6.0"
flake8-rst-docstrings = ">=0.2.5"
furo = ">=2021.11.12"
isort = "^5.10.1"
mypy = ">=0.930"
pep8-naming = ">=0.12.1"
pre-commit = ">=2.16.0"
pre-commit-hooks = ">=4.1.0"
pytest = ">=6.2.5"
pyupgrade = ">=2.29.1"
safety = ">=1.10.3"
sphinx = ">=4.3.2"
sphinx-autobuild = ">=2021.3.14"
sphinx-click = ">=3.0.2"
typeguard = ">=2.13.3"
xdoctest = {extras = ["colors"], version = ">=0.15.10"}
myst-parser = {version = ">=0.16.1"}

[tool.poetry.extras]
hello_world = ["pygame", "pyglet"]

[tool.poetry.scripts]
wildcatter = "wildcatter.__main__:main"

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["wildcatter", "tests"]
omit = ["*/environment.py"]

[tool.coverage.report]
show_missing = true
fail_under = 100
[tool.isort]
profile = "black"
force_single_line = true
lines_after_imports = 2

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
plugins = ["numpy.typing.mypy_plugin"]

[[tool.mypy.overrides]]
module = [
    'gym',
    'gym.spaces'
]
ignore_missing_imports = true

[build-system]
requires = ["poetry-core>=1.1.0b3"]
build-backend = "poetry.core.masonry.api"
