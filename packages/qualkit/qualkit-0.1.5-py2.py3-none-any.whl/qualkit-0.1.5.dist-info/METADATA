Metadata-Version: 2.1
Name: qualkit
Version: 0.1.5
Summary: Python qualitative analysis toolkit with utilities and simplified wrappers for common algorithms
Home-page: https://github.com/JiscDACT/qualkit
Download-URL: https://github.com/JiscDACT/qualkit/tarball/0.1.5
Author: Scott Wilson
Author-email: scott.wilson@jisc.ac.uk
License: BSD
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: BSD License
Classifier: Topic :: Scientific/Engineering :: Mathematics
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pandas (>=1.1.5)
Requires-Dist: numpy (>=1.19.5)
Requires-Dist: nltk (>=3.6.2)
Requires-Dist: scikit-learn (>=0.24.2)
Requires-Dist: corextopic (>=1.1)

# DACT Qualitative Analysis Toolkit (qualkit)

This project is a collection of utilities for conducting qualitative
analysis.

It currently consists of the following modules:

* **clean**: a utility for cleaning up text prior to use with other tools
* **sentiment**: a wrapper around SciKit's SentimentIntensityAnalyzer
* **anchored_topic_model**: creates topic models using the Corex algorithm (Gallagher et. al., 2017) with user-supplied anchors to 'steer' the model using domain knowledge
* **stopwords**: a standard set of stopwords
* **topics**: a wrapper around SciKit's LatentDirichletAllocation
* **keywords**: a wrapper around NLTK's RAKE (Rapid Keyword Extraction) algorithm for finding
keywords in text.
  
For more details on each module, see the 'docs' folder.

## Installing the toolkit and its requirements

Install using:

    pip install qualkit

Or add 'qualkit' to your requirements.txt file, or add as
a dependency in project properties in PyCharm.

## User Control
A user has control over the following aspects when using this toolkit which will influence outputs.

* Anchoring strategies
* Anchor Strength
* Number of topics
* Labelling True/False for each topic instead of dichotomising
* How data is preprocessed before topic modelling, redaction, tfidr vectoriser etec

## References

Gallagher, R. J., Reing, K., Kale, D., and Ver Steeg, G. "Anchored Correlation Explanation: Topic Modeling with Minimal Domain Knowledge." Transactions of the Association for Computational Linguistics (TACL), 2017.
