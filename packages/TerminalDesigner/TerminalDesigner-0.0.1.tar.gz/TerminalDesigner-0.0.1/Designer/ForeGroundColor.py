from typing import Union
from .Color import Colors
from .Values import rgb

default_style = 0

def set_default_style(Style : int) -> None :
        """ it's used to change the default values (or) change the value of style to all colors\n
        Ex : set_default_style(3) then it chenge the Italicized style to all coloe_function
        Normal     = 0 \n
        Bold       = 1 \n
        Light      = 2 \n
        Italicized = 3 \n
        UnderLined = 4 \n        
        Blink      = 5 \n
        Return: it's return None Value,it's not return any values just it change the changes in ForeGroundColor file.
        """
        global default_style
        default_style = Style
        
def grey( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey colored text.\n
        grey() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use greybg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey("text",bg='grey') then it's apply the grey color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey\n
                    for example : grey(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey("Hello World", Style = 0 ) = it's return grey color text without any style       \n
                grey("Hello World", Style = 1 ) = it's return grey color text with bold text          \n
                grey("Hello World", Style = 2 ) = it's return grey color text with light text         \n
                grey("Hello World", Style = 3 ) = it's return grey color text with Italicized style   \n
                grey("Hello World", Style = 4 ) = it's return grey color text with UnderLine          \n
                grey("Hello World", Style = 5 ) = it's return Blinking grey color text                \n
        """
        if rgb:
            return (84, 84, 84)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 84, 84, 84,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 84, 84, 84)
                


def grey_silver( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey_silver colored text.\n
        grey_silver() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey_silverbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey_silver("text",bg='grey_silver') then it's apply the grey_silver color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey_silver\n
                    for example : grey_silver(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey_silver("Hello World", Style = 0 ) = it's return grey_silver color text without any style       \n
                grey_silver("Hello World", Style = 1 ) = it's return grey_silver color text with bold text          \n
                grey_silver("Hello World", Style = 2 ) = it's return grey_silver color text with light text         \n
                grey_silver("Hello World", Style = 3 ) = it's return grey_silver color text with Italicized style   \n
                grey_silver("Hello World", Style = 4 ) = it's return grey_silver color text with UnderLine          \n
                grey_silver("Hello World", Style = 5 ) = it's return Blinking grey_silver color text                \n
        """
        if rgb:
            return (192, 192, 192)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 192, 192, 192,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 192, 192, 192)
                


def grey( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey colored text.\n
        grey() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use greybg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey("text",bg='grey') then it's apply the grey color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey\n
                    for example : grey(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey("Hello World", Style = 0 ) = it's return grey color text without any style       \n
                grey("Hello World", Style = 1 ) = it's return grey color text with bold text          \n
                grey("Hello World", Style = 2 ) = it's return grey color text with light text         \n
                grey("Hello World", Style = 3 ) = it's return grey color text with Italicized style   \n
                grey("Hello World", Style = 4 ) = it's return grey color text with UnderLine          \n
                grey("Hello World", Style = 5 ) = it's return Blinking grey color text                \n
        """
        if rgb:
            return (190, 190, 190)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 190, 190, 190,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 190, 190, 190)
                


def lightgray( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightgray colored text.\n
        lightgray() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightgraybg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightgray("text",bg='lightgray') then it's apply the lightgray color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightgray\n
                    for example : lightgray(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightgray("Hello World", Style = 0 ) = it's return lightgray color text without any style       \n
                lightgray("Hello World", Style = 1 ) = it's return lightgray color text with bold text          \n
                lightgray("Hello World", Style = 2 ) = it's return lightgray color text with light text         \n
                lightgray("Hello World", Style = 3 ) = it's return lightgray color text with Italicized style   \n
                lightgray("Hello World", Style = 4 ) = it's return lightgray color text with UnderLine          \n
                lightgray("Hello World", Style = 5 ) = it's return Blinking lightgray color text                \n
        """
        if rgb:
            return (211, 211, 211)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 211, 211, 211,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 211, 211, 211)
                


def lightslategrey( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightslategrey colored text.\n
        lightslategrey() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightslategreybg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightslategrey("text",bg='lightslategrey') then it's apply the lightslategrey color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightslategrey\n
                    for example : lightslategrey(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightslategrey("Hello World", Style = 0 ) = it's return lightslategrey color text without any style       \n
                lightslategrey("Hello World", Style = 1 ) = it's return lightslategrey color text with bold text          \n
                lightslategrey("Hello World", Style = 2 ) = it's return lightslategrey color text with light text         \n
                lightslategrey("Hello World", Style = 3 ) = it's return lightslategrey color text with Italicized style   \n
                lightslategrey("Hello World", Style = 4 ) = it's return lightslategrey color text with UnderLine          \n
                lightslategrey("Hello World", Style = 5 ) = it's return Blinking lightslategrey color text                \n
        """
        if rgb:
            return (119, 136, 153)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 119, 136, 153,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 119, 136, 153)
                


def slategray( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the slategray colored text.\n
        slategray() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use slategraybg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: slategray("text",bg='slategray') then it's apply the slategray color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of slategray\n
                    for example : slategray(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                slategray("Hello World", Style = 0 ) = it's return slategray color text without any style       \n
                slategray("Hello World", Style = 1 ) = it's return slategray color text with bold text          \n
                slategray("Hello World", Style = 2 ) = it's return slategray color text with light text         \n
                slategray("Hello World", Style = 3 ) = it's return slategray color text with Italicized style   \n
                slategray("Hello World", Style = 4 ) = it's return slategray color text with UnderLine          \n
                slategray("Hello World", Style = 5 ) = it's return Blinking slategray color text                \n
        """
        if rgb:
            return (112, 128, 144)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 112, 128, 144,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 112, 128, 144)
                


def slategray1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the slategray1 colored text.\n
        slategray1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use slategray1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: slategray1("text",bg='slategray1') then it's apply the slategray1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of slategray1\n
                    for example : slategray1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                slategray1("Hello World", Style = 0 ) = it's return slategray1 color text without any style       \n
                slategray1("Hello World", Style = 1 ) = it's return slategray1 color text with bold text          \n
                slategray1("Hello World", Style = 2 ) = it's return slategray1 color text with light text         \n
                slategray1("Hello World", Style = 3 ) = it's return slategray1 color text with Italicized style   \n
                slategray1("Hello World", Style = 4 ) = it's return slategray1 color text with UnderLine          \n
                slategray1("Hello World", Style = 5 ) = it's return Blinking slategray1 color text                \n
        """
        if rgb:
            return (198, 226, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 198, 226, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 198, 226, 255)
                


def slategray2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the slategray2 colored text.\n
        slategray2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use slategray2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: slategray2("text",bg='slategray2') then it's apply the slategray2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of slategray2\n
                    for example : slategray2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                slategray2("Hello World", Style = 0 ) = it's return slategray2 color text without any style       \n
                slategray2("Hello World", Style = 1 ) = it's return slategray2 color text with bold text          \n
                slategray2("Hello World", Style = 2 ) = it's return slategray2 color text with light text         \n
                slategray2("Hello World", Style = 3 ) = it's return slategray2 color text with Italicized style   \n
                slategray2("Hello World", Style = 4 ) = it's return slategray2 color text with UnderLine          \n
                slategray2("Hello World", Style = 5 ) = it's return Blinking slategray2 color text                \n
        """
        if rgb:
            return (185, 211, 238)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 185, 211, 238,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 185, 211, 238)
                


def slategray3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the slategray3 colored text.\n
        slategray3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use slategray3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: slategray3("text",bg='slategray3') then it's apply the slategray3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of slategray3\n
                    for example : slategray3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                slategray3("Hello World", Style = 0 ) = it's return slategray3 color text without any style       \n
                slategray3("Hello World", Style = 1 ) = it's return slategray3 color text with bold text          \n
                slategray3("Hello World", Style = 2 ) = it's return slategray3 color text with light text         \n
                slategray3("Hello World", Style = 3 ) = it's return slategray3 color text with Italicized style   \n
                slategray3("Hello World", Style = 4 ) = it's return slategray3 color text with UnderLine          \n
                slategray3("Hello World", Style = 5 ) = it's return Blinking slategray3 color text                \n
        """
        if rgb:
            return (159, 182, 205)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 159, 182, 205,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 159, 182, 205)
                


def slategray4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the slategray4 colored text.\n
        slategray4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use slategray4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: slategray4("text",bg='slategray4') then it's apply the slategray4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of slategray4\n
                    for example : slategray4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                slategray4("Hello World", Style = 0 ) = it's return slategray4 color text without any style       \n
                slategray4("Hello World", Style = 1 ) = it's return slategray4 color text with bold text          \n
                slategray4("Hello World", Style = 2 ) = it's return slategray4 color text with light text         \n
                slategray4("Hello World", Style = 3 ) = it's return slategray4 color text with Italicized style   \n
                slategray4("Hello World", Style = 4 ) = it's return slategray4 color text with UnderLine          \n
                slategray4("Hello World", Style = 5 ) = it's return Blinking slategray4 color text                \n
        """
        if rgb:
            return (108, 123, 139)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 108, 123, 139,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 108, 123, 139)
                


def black( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the black colored text.\n
        black() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use blackbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: black("text",bg='black') then it's apply the black color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of black\n
                    for example : black(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                black("Hello World", Style = 0 ) = it's return black color text without any style       \n
                black("Hello World", Style = 1 ) = it's return black color text with bold text          \n
                black("Hello World", Style = 2 ) = it's return black color text with light text         \n
                black("Hello World", Style = 3 ) = it's return black color text with Italicized style   \n
                black("Hello World", Style = 4 ) = it's return black color text with UnderLine          \n
                black("Hello World", Style = 5 ) = it's return Blinking black color text                \n
        """
        if rgb:
            return (0, 0, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 0, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 0, 0)
                


def grey0( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey0 colored text.\n
        grey0() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey0bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey0("text",bg='grey0') then it's apply the grey0 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey0\n
                    for example : grey0(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey0("Hello World", Style = 0 ) = it's return grey0 color text without any style       \n
                grey0("Hello World", Style = 1 ) = it's return grey0 color text with bold text          \n
                grey0("Hello World", Style = 2 ) = it's return grey0 color text with light text         \n
                grey0("Hello World", Style = 3 ) = it's return grey0 color text with Italicized style   \n
                grey0("Hello World", Style = 4 ) = it's return grey0 color text with UnderLine          \n
                grey0("Hello World", Style = 5 ) = it's return Blinking grey0 color text                \n
        """
        if rgb:
            return (0, 0, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 0, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 0, 0)
                


def grey1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey1 colored text.\n
        grey1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey1("text",bg='grey1') then it's apply the grey1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey1\n
                    for example : grey1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey1("Hello World", Style = 0 ) = it's return grey1 color text without any style       \n
                grey1("Hello World", Style = 1 ) = it's return grey1 color text with bold text          \n
                grey1("Hello World", Style = 2 ) = it's return grey1 color text with light text         \n
                grey1("Hello World", Style = 3 ) = it's return grey1 color text with Italicized style   \n
                grey1("Hello World", Style = 4 ) = it's return grey1 color text with UnderLine          \n
                grey1("Hello World", Style = 5 ) = it's return Blinking grey1 color text                \n
        """
        if rgb:
            return (3, 3, 3)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 3, 3, 3,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 3, 3, 3)
                


def grey2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey2 colored text.\n
        grey2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey2("text",bg='grey2') then it's apply the grey2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey2\n
                    for example : grey2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey2("Hello World", Style = 0 ) = it's return grey2 color text without any style       \n
                grey2("Hello World", Style = 1 ) = it's return grey2 color text with bold text          \n
                grey2("Hello World", Style = 2 ) = it's return grey2 color text with light text         \n
                grey2("Hello World", Style = 3 ) = it's return grey2 color text with Italicized style   \n
                grey2("Hello World", Style = 4 ) = it's return grey2 color text with UnderLine          \n
                grey2("Hello World", Style = 5 ) = it's return Blinking grey2 color text                \n
        """
        if rgb:
            return (5, 5, 5)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 5, 5, 5,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 5, 5, 5)
                


def grey3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey3 colored text.\n
        grey3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey3("text",bg='grey3') then it's apply the grey3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey3\n
                    for example : grey3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey3("Hello World", Style = 0 ) = it's return grey3 color text without any style       \n
                grey3("Hello World", Style = 1 ) = it's return grey3 color text with bold text          \n
                grey3("Hello World", Style = 2 ) = it's return grey3 color text with light text         \n
                grey3("Hello World", Style = 3 ) = it's return grey3 color text with Italicized style   \n
                grey3("Hello World", Style = 4 ) = it's return grey3 color text with UnderLine          \n
                grey3("Hello World", Style = 5 ) = it's return Blinking grey3 color text                \n
        """
        if rgb:
            return (8, 8, 8)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 8, 8, 8,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 8, 8, 8)
                


def grey4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey4 colored text.\n
        grey4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey4("text",bg='grey4') then it's apply the grey4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey4\n
                    for example : grey4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey4("Hello World", Style = 0 ) = it's return grey4 color text without any style       \n
                grey4("Hello World", Style = 1 ) = it's return grey4 color text with bold text          \n
                grey4("Hello World", Style = 2 ) = it's return grey4 color text with light text         \n
                grey4("Hello World", Style = 3 ) = it's return grey4 color text with Italicized style   \n
                grey4("Hello World", Style = 4 ) = it's return grey4 color text with UnderLine          \n
                grey4("Hello World", Style = 5 ) = it's return Blinking grey4 color text                \n
        """
        if rgb:
            return (10, 10, 10)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 10, 10, 10,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 10, 10, 10)
                


def grey5( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey5 colored text.\n
        grey5() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey5bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey5("text",bg='grey5') then it's apply the grey5 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey5\n
                    for example : grey5(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey5("Hello World", Style = 0 ) = it's return grey5 color text without any style       \n
                grey5("Hello World", Style = 1 ) = it's return grey5 color text with bold text          \n
                grey5("Hello World", Style = 2 ) = it's return grey5 color text with light text         \n
                grey5("Hello World", Style = 3 ) = it's return grey5 color text with Italicized style   \n
                grey5("Hello World", Style = 4 ) = it's return grey5 color text with UnderLine          \n
                grey5("Hello World", Style = 5 ) = it's return Blinking grey5 color text                \n
        """
        if rgb:
            return (13, 13, 13)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 13, 13, 13,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 13, 13, 13)
                


def grey6( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey6 colored text.\n
        grey6() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey6bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey6("text",bg='grey6') then it's apply the grey6 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey6\n
                    for example : grey6(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey6("Hello World", Style = 0 ) = it's return grey6 color text without any style       \n
                grey6("Hello World", Style = 1 ) = it's return grey6 color text with bold text          \n
                grey6("Hello World", Style = 2 ) = it's return grey6 color text with light text         \n
                grey6("Hello World", Style = 3 ) = it's return grey6 color text with Italicized style   \n
                grey6("Hello World", Style = 4 ) = it's return grey6 color text with UnderLine          \n
                grey6("Hello World", Style = 5 ) = it's return Blinking grey6 color text                \n
        """
        if rgb:
            return (15, 15, 15)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 15, 15, 15,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 15, 15, 15)
                


def grey7( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey7 colored text.\n
        grey7() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey7bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey7("text",bg='grey7') then it's apply the grey7 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey7\n
                    for example : grey7(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey7("Hello World", Style = 0 ) = it's return grey7 color text without any style       \n
                grey7("Hello World", Style = 1 ) = it's return grey7 color text with bold text          \n
                grey7("Hello World", Style = 2 ) = it's return grey7 color text with light text         \n
                grey7("Hello World", Style = 3 ) = it's return grey7 color text with Italicized style   \n
                grey7("Hello World", Style = 4 ) = it's return grey7 color text with UnderLine          \n
                grey7("Hello World", Style = 5 ) = it's return Blinking grey7 color text                \n
        """
        if rgb:
            return (18, 18, 18)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 18, 18, 18,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 18, 18, 18)
                


def grey8( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey8 colored text.\n
        grey8() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey8bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey8("text",bg='grey8') then it's apply the grey8 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey8\n
                    for example : grey8(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey8("Hello World", Style = 0 ) = it's return grey8 color text without any style       \n
                grey8("Hello World", Style = 1 ) = it's return grey8 color text with bold text          \n
                grey8("Hello World", Style = 2 ) = it's return grey8 color text with light text         \n
                grey8("Hello World", Style = 3 ) = it's return grey8 color text with Italicized style   \n
                grey8("Hello World", Style = 4 ) = it's return grey8 color text with UnderLine          \n
                grey8("Hello World", Style = 5 ) = it's return Blinking grey8 color text                \n
        """
        if rgb:
            return (20, 20, 20)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 20, 20, 20,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 20, 20, 20)
                


def grey9( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey9 colored text.\n
        grey9() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey9bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey9("text",bg='grey9') then it's apply the grey9 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey9\n
                    for example : grey9(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey9("Hello World", Style = 0 ) = it's return grey9 color text without any style       \n
                grey9("Hello World", Style = 1 ) = it's return grey9 color text with bold text          \n
                grey9("Hello World", Style = 2 ) = it's return grey9 color text with light text         \n
                grey9("Hello World", Style = 3 ) = it's return grey9 color text with Italicized style   \n
                grey9("Hello World", Style = 4 ) = it's return grey9 color text with UnderLine          \n
                grey9("Hello World", Style = 5 ) = it's return Blinking grey9 color text                \n
        """
        if rgb:
            return (23, 23, 23)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 23, 23, 23,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 23, 23, 23)
                


def grey10( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey10 colored text.\n
        grey10() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey10bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey10("text",bg='grey10') then it's apply the grey10 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey10\n
                    for example : grey10(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey10("Hello World", Style = 0 ) = it's return grey10 color text without any style       \n
                grey10("Hello World", Style = 1 ) = it's return grey10 color text with bold text          \n
                grey10("Hello World", Style = 2 ) = it's return grey10 color text with light text         \n
                grey10("Hello World", Style = 3 ) = it's return grey10 color text with Italicized style   \n
                grey10("Hello World", Style = 4 ) = it's return grey10 color text with UnderLine          \n
                grey10("Hello World", Style = 5 ) = it's return Blinking grey10 color text                \n
        """
        if rgb:
            return (26, 26, 26)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 26, 26, 26,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 26, 26, 26)
                


def grey11( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey11 colored text.\n
        grey11() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey11bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey11("text",bg='grey11') then it's apply the grey11 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey11\n
                    for example : grey11(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey11("Hello World", Style = 0 ) = it's return grey11 color text without any style       \n
                grey11("Hello World", Style = 1 ) = it's return grey11 color text with bold text          \n
                grey11("Hello World", Style = 2 ) = it's return grey11 color text with light text         \n
                grey11("Hello World", Style = 3 ) = it's return grey11 color text with Italicized style   \n
                grey11("Hello World", Style = 4 ) = it's return grey11 color text with UnderLine          \n
                grey11("Hello World", Style = 5 ) = it's return Blinking grey11 color text                \n
        """
        if rgb:
            return (28, 28, 28)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 28, 28, 28,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 28, 28, 28)
                


def grey12( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey12 colored text.\n
        grey12() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey12bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey12("text",bg='grey12') then it's apply the grey12 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey12\n
                    for example : grey12(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey12("Hello World", Style = 0 ) = it's return grey12 color text without any style       \n
                grey12("Hello World", Style = 1 ) = it's return grey12 color text with bold text          \n
                grey12("Hello World", Style = 2 ) = it's return grey12 color text with light text         \n
                grey12("Hello World", Style = 3 ) = it's return grey12 color text with Italicized style   \n
                grey12("Hello World", Style = 4 ) = it's return grey12 color text with UnderLine          \n
                grey12("Hello World", Style = 5 ) = it's return Blinking grey12 color text                \n
        """
        if rgb:
            return (31, 31, 31)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 31, 31, 31,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 31, 31, 31)
                


def grey13( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey13 colored text.\n
        grey13() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey13bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey13("text",bg='grey13') then it's apply the grey13 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey13\n
                    for example : grey13(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey13("Hello World", Style = 0 ) = it's return grey13 color text without any style       \n
                grey13("Hello World", Style = 1 ) = it's return grey13 color text with bold text          \n
                grey13("Hello World", Style = 2 ) = it's return grey13 color text with light text         \n
                grey13("Hello World", Style = 3 ) = it's return grey13 color text with Italicized style   \n
                grey13("Hello World", Style = 4 ) = it's return grey13 color text with UnderLine          \n
                grey13("Hello World", Style = 5 ) = it's return Blinking grey13 color text                \n
        """
        if rgb:
            return (33, 33, 33)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 33, 33, 33,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 33, 33, 33)
                


def light_black( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the light_black colored text.\n
        light_black() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use light_blackbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: light_black("text",bg='light_black') then it's apply the light_black color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of light_black\n
                    for example : light_black(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                light_black("Hello World", Style = 0 ) = it's return light_black color text without any style       \n
                light_black("Hello World", Style = 1 ) = it's return light_black color text with bold text          \n
                light_black("Hello World", Style = 2 ) = it's return light_black color text with light text         \n
                light_black("Hello World", Style = 3 ) = it's return light_black color text with Italicized style   \n
                light_black("Hello World", Style = 4 ) = it's return light_black color text with UnderLine          \n
                light_black("Hello World", Style = 5 ) = it's return Blinking light_black color text                \n
        """
        if rgb:
            return (34, 34, 34)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 34, 34, 34,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 34, 34, 34)
                


def grey14( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey14 colored text.\n
        grey14() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey14bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey14("text",bg='grey14') then it's apply the grey14 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey14\n
                    for example : grey14(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey14("Hello World", Style = 0 ) = it's return grey14 color text without any style       \n
                grey14("Hello World", Style = 1 ) = it's return grey14 color text with bold text          \n
                grey14("Hello World", Style = 2 ) = it's return grey14 color text with light text         \n
                grey14("Hello World", Style = 3 ) = it's return grey14 color text with Italicized style   \n
                grey14("Hello World", Style = 4 ) = it's return grey14 color text with UnderLine          \n
                grey14("Hello World", Style = 5 ) = it's return Blinking grey14 color text                \n
        """
        if rgb:
            return (36, 36, 36)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 36, 36, 36,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 36, 36, 36)
                


def grey15( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey15 colored text.\n
        grey15() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey15bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey15("text",bg='grey15') then it's apply the grey15 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey15\n
                    for example : grey15(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey15("Hello World", Style = 0 ) = it's return grey15 color text without any style       \n
                grey15("Hello World", Style = 1 ) = it's return grey15 color text with bold text          \n
                grey15("Hello World", Style = 2 ) = it's return grey15 color text with light text         \n
                grey15("Hello World", Style = 3 ) = it's return grey15 color text with Italicized style   \n
                grey15("Hello World", Style = 4 ) = it's return grey15 color text with UnderLine          \n
                grey15("Hello World", Style = 5 ) = it's return Blinking grey15 color text                \n
        """
        if rgb:
            return (38, 38, 38)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 38, 38, 38,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 38, 38, 38)
                


def grey16( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey16 colored text.\n
        grey16() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey16bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey16("text",bg='grey16') then it's apply the grey16 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey16\n
                    for example : grey16(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey16("Hello World", Style = 0 ) = it's return grey16 color text without any style       \n
                grey16("Hello World", Style = 1 ) = it's return grey16 color text with bold text          \n
                grey16("Hello World", Style = 2 ) = it's return grey16 color text with light text         \n
                grey16("Hello World", Style = 3 ) = it's return grey16 color text with Italicized style   \n
                grey16("Hello World", Style = 4 ) = it's return grey16 color text with UnderLine          \n
                grey16("Hello World", Style = 5 ) = it's return Blinking grey16 color text                \n
        """
        if rgb:
            return (41, 41, 41)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 41, 41, 41,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 41, 41, 41)
                


def grey17( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey17 colored text.\n
        grey17() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey17bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey17("text",bg='grey17') then it's apply the grey17 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey17\n
                    for example : grey17(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey17("Hello World", Style = 0 ) = it's return grey17 color text without any style       \n
                grey17("Hello World", Style = 1 ) = it's return grey17 color text with bold text          \n
                grey17("Hello World", Style = 2 ) = it's return grey17 color text with light text         \n
                grey17("Hello World", Style = 3 ) = it's return grey17 color text with Italicized style   \n
                grey17("Hello World", Style = 4 ) = it's return grey17 color text with UnderLine          \n
                grey17("Hello World", Style = 5 ) = it's return Blinking grey17 color text                \n
        """
        if rgb:
            return (43, 43, 43)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 43, 43, 43,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 43, 43, 43)
                


def grey18( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey18 colored text.\n
        grey18() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey18bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey18("text",bg='grey18') then it's apply the grey18 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey18\n
                    for example : grey18(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey18("Hello World", Style = 0 ) = it's return grey18 color text without any style       \n
                grey18("Hello World", Style = 1 ) = it's return grey18 color text with bold text          \n
                grey18("Hello World", Style = 2 ) = it's return grey18 color text with light text         \n
                grey18("Hello World", Style = 3 ) = it's return grey18 color text with Italicized style   \n
                grey18("Hello World", Style = 4 ) = it's return grey18 color text with UnderLine          \n
                grey18("Hello World", Style = 5 ) = it's return Blinking grey18 color text                \n
        """
        if rgb:
            return (46, 46, 46)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 46, 46, 46,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 46, 46, 46)
                


def grey19( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey19 colored text.\n
        grey19() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey19bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey19("text",bg='grey19') then it's apply the grey19 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey19\n
                    for example : grey19(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey19("Hello World", Style = 0 ) = it's return grey19 color text without any style       \n
                grey19("Hello World", Style = 1 ) = it's return grey19 color text with bold text          \n
                grey19("Hello World", Style = 2 ) = it's return grey19 color text with light text         \n
                grey19("Hello World", Style = 3 ) = it's return grey19 color text with Italicized style   \n
                grey19("Hello World", Style = 4 ) = it's return grey19 color text with UnderLine          \n
                grey19("Hello World", Style = 5 ) = it's return Blinking grey19 color text                \n
        """
        if rgb:
            return (48, 48, 48)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 48, 48, 48,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 48, 48, 48)
                


def grey20( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey20 colored text.\n
        grey20() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey20bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey20("text",bg='grey20') then it's apply the grey20 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey20\n
                    for example : grey20(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey20("Hello World", Style = 0 ) = it's return grey20 color text without any style       \n
                grey20("Hello World", Style = 1 ) = it's return grey20 color text with bold text          \n
                grey20("Hello World", Style = 2 ) = it's return grey20 color text with light text         \n
                grey20("Hello World", Style = 3 ) = it's return grey20 color text with Italicized style   \n
                grey20("Hello World", Style = 4 ) = it's return grey20 color text with UnderLine          \n
                grey20("Hello World", Style = 5 ) = it's return Blinking grey20 color text                \n
        """
        if rgb:
            return (51, 51, 51)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 51, 51, 51,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 51, 51, 51)
                


def grey21( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey21 colored text.\n
        grey21() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey21bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey21("text",bg='grey21') then it's apply the grey21 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey21\n
                    for example : grey21(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey21("Hello World", Style = 0 ) = it's return grey21 color text without any style       \n
                grey21("Hello World", Style = 1 ) = it's return grey21 color text with bold text          \n
                grey21("Hello World", Style = 2 ) = it's return grey21 color text with light text         \n
                grey21("Hello World", Style = 3 ) = it's return grey21 color text with Italicized style   \n
                grey21("Hello World", Style = 4 ) = it's return grey21 color text with UnderLine          \n
                grey21("Hello World", Style = 5 ) = it's return Blinking grey21 color text                \n
        """
        if rgb:
            return (54, 54, 54)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 54, 54, 54,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 54, 54, 54)
                


def grey22( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey22 colored text.\n
        grey22() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey22bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey22("text",bg='grey22') then it's apply the grey22 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey22\n
                    for example : grey22(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey22("Hello World", Style = 0 ) = it's return grey22 color text without any style       \n
                grey22("Hello World", Style = 1 ) = it's return grey22 color text with bold text          \n
                grey22("Hello World", Style = 2 ) = it's return grey22 color text with light text         \n
                grey22("Hello World", Style = 3 ) = it's return grey22 color text with Italicized style   \n
                grey22("Hello World", Style = 4 ) = it's return grey22 color text with UnderLine          \n
                grey22("Hello World", Style = 5 ) = it's return Blinking grey22 color text                \n
        """
        if rgb:
            return (56, 56, 56)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 56, 56, 56,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 56, 56, 56)
                


def grey23( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey23 colored text.\n
        grey23() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey23bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey23("text",bg='grey23') then it's apply the grey23 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey23\n
                    for example : grey23(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey23("Hello World", Style = 0 ) = it's return grey23 color text without any style       \n
                grey23("Hello World", Style = 1 ) = it's return grey23 color text with bold text          \n
                grey23("Hello World", Style = 2 ) = it's return grey23 color text with light text         \n
                grey23("Hello World", Style = 3 ) = it's return grey23 color text with Italicized style   \n
                grey23("Hello World", Style = 4 ) = it's return grey23 color text with UnderLine          \n
                grey23("Hello World", Style = 5 ) = it's return Blinking grey23 color text                \n
        """
        if rgb:
            return (59, 59, 59)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 59, 59, 59,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 59, 59, 59)
                


def grey24( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey24 colored text.\n
        grey24() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey24bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey24("text",bg='grey24') then it's apply the grey24 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey24\n
                    for example : grey24(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey24("Hello World", Style = 0 ) = it's return grey24 color text without any style       \n
                grey24("Hello World", Style = 1 ) = it's return grey24 color text with bold text          \n
                grey24("Hello World", Style = 2 ) = it's return grey24 color text with light text         \n
                grey24("Hello World", Style = 3 ) = it's return grey24 color text with Italicized style   \n
                grey24("Hello World", Style = 4 ) = it's return grey24 color text with UnderLine          \n
                grey24("Hello World", Style = 5 ) = it's return Blinking grey24 color text                \n
        """
        if rgb:
            return (61, 61, 61)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 61, 61, 61,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 61, 61, 61)
                


def grey25( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey25 colored text.\n
        grey25() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey25bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey25("text",bg='grey25') then it's apply the grey25 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey25\n
                    for example : grey25(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey25("Hello World", Style = 0 ) = it's return grey25 color text without any style       \n
                grey25("Hello World", Style = 1 ) = it's return grey25 color text with bold text          \n
                grey25("Hello World", Style = 2 ) = it's return grey25 color text with light text         \n
                grey25("Hello World", Style = 3 ) = it's return grey25 color text with Italicized style   \n
                grey25("Hello World", Style = 4 ) = it's return grey25 color text with UnderLine          \n
                grey25("Hello World", Style = 5 ) = it's return Blinking grey25 color text                \n
        """
        if rgb:
            return (64, 64, 64)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 64, 64, 64,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 64, 64, 64)
                


def grey26( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey26 colored text.\n
        grey26() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey26bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey26("text",bg='grey26') then it's apply the grey26 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey26\n
                    for example : grey26(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey26("Hello World", Style = 0 ) = it's return grey26 color text without any style       \n
                grey26("Hello World", Style = 1 ) = it's return grey26 color text with bold text          \n
                grey26("Hello World", Style = 2 ) = it's return grey26 color text with light text         \n
                grey26("Hello World", Style = 3 ) = it's return grey26 color text with Italicized style   \n
                grey26("Hello World", Style = 4 ) = it's return grey26 color text with UnderLine          \n
                grey26("Hello World", Style = 5 ) = it's return Blinking grey26 color text                \n
        """
        if rgb:
            return (66, 66, 66)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 66, 66, 66,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 66, 66, 66)
                


def grey27( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey27 colored text.\n
        grey27() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey27bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey27("text",bg='grey27') then it's apply the grey27 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey27\n
                    for example : grey27(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey27("Hello World", Style = 0 ) = it's return grey27 color text without any style       \n
                grey27("Hello World", Style = 1 ) = it's return grey27 color text with bold text          \n
                grey27("Hello World", Style = 2 ) = it's return grey27 color text with light text         \n
                grey27("Hello World", Style = 3 ) = it's return grey27 color text with Italicized style   \n
                grey27("Hello World", Style = 4 ) = it's return grey27 color text with UnderLine          \n
                grey27("Hello World", Style = 5 ) = it's return Blinking grey27 color text                \n
        """
        if rgb:
            return (69, 69, 69)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 69, 69, 69,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 69, 69, 69)
                


def grey28( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey28 colored text.\n
        grey28() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey28bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey28("text",bg='grey28') then it's apply the grey28 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey28\n
                    for example : grey28(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey28("Hello World", Style = 0 ) = it's return grey28 color text without any style       \n
                grey28("Hello World", Style = 1 ) = it's return grey28 color text with bold text          \n
                grey28("Hello World", Style = 2 ) = it's return grey28 color text with light text         \n
                grey28("Hello World", Style = 3 ) = it's return grey28 color text with Italicized style   \n
                grey28("Hello World", Style = 4 ) = it's return grey28 color text with UnderLine          \n
                grey28("Hello World", Style = 5 ) = it's return Blinking grey28 color text                \n
        """
        if rgb:
            return (71, 71, 71)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 71, 71, 71,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 71, 71, 71)
                


def grey29( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey29 colored text.\n
        grey29() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey29bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey29("text",bg='grey29') then it's apply the grey29 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey29\n
                    for example : grey29(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey29("Hello World", Style = 0 ) = it's return grey29 color text without any style       \n
                grey29("Hello World", Style = 1 ) = it's return grey29 color text with bold text          \n
                grey29("Hello World", Style = 2 ) = it's return grey29 color text with light text         \n
                grey29("Hello World", Style = 3 ) = it's return grey29 color text with Italicized style   \n
                grey29("Hello World", Style = 4 ) = it's return grey29 color text with UnderLine          \n
                grey29("Hello World", Style = 5 ) = it's return Blinking grey29 color text                \n
        """
        if rgb:
            return (74, 74, 74)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 74, 74, 74,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 74, 74, 74)
                


def grey30( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey30 colored text.\n
        grey30() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey30bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey30("text",bg='grey30') then it's apply the grey30 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey30\n
                    for example : grey30(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey30("Hello World", Style = 0 ) = it's return grey30 color text without any style       \n
                grey30("Hello World", Style = 1 ) = it's return grey30 color text with bold text          \n
                grey30("Hello World", Style = 2 ) = it's return grey30 color text with light text         \n
                grey30("Hello World", Style = 3 ) = it's return grey30 color text with Italicized style   \n
                grey30("Hello World", Style = 4 ) = it's return grey30 color text with UnderLine          \n
                grey30("Hello World", Style = 5 ) = it's return Blinking grey30 color text                \n
        """
        if rgb:
            return (77, 77, 77)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 77, 77, 77,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 77, 77, 77)
                


def grey31( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey31 colored text.\n
        grey31() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey31bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey31("text",bg='grey31') then it's apply the grey31 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey31\n
                    for example : grey31(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey31("Hello World", Style = 0 ) = it's return grey31 color text without any style       \n
                grey31("Hello World", Style = 1 ) = it's return grey31 color text with bold text          \n
                grey31("Hello World", Style = 2 ) = it's return grey31 color text with light text         \n
                grey31("Hello World", Style = 3 ) = it's return grey31 color text with Italicized style   \n
                grey31("Hello World", Style = 4 ) = it's return grey31 color text with UnderLine          \n
                grey31("Hello World", Style = 5 ) = it's return Blinking grey31 color text                \n
        """
        if rgb:
            return (79, 79, 79)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 79, 79, 79,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 79, 79, 79)
                


def grey32( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey32 colored text.\n
        grey32() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey32bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey32("text",bg='grey32') then it's apply the grey32 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey32\n
                    for example : grey32(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey32("Hello World", Style = 0 ) = it's return grey32 color text without any style       \n
                grey32("Hello World", Style = 1 ) = it's return grey32 color text with bold text          \n
                grey32("Hello World", Style = 2 ) = it's return grey32 color text with light text         \n
                grey32("Hello World", Style = 3 ) = it's return grey32 color text with Italicized style   \n
                grey32("Hello World", Style = 4 ) = it's return grey32 color text with UnderLine          \n
                grey32("Hello World", Style = 5 ) = it's return Blinking grey32 color text                \n
        """
        if rgb:
            return (82, 82, 82)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 82, 82, 82,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 82, 82, 82)
                


def grey33( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey33 colored text.\n
        grey33() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey33bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey33("text",bg='grey33') then it's apply the grey33 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey33\n
                    for example : grey33(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey33("Hello World", Style = 0 ) = it's return grey33 color text without any style       \n
                grey33("Hello World", Style = 1 ) = it's return grey33 color text with bold text          \n
                grey33("Hello World", Style = 2 ) = it's return grey33 color text with light text         \n
                grey33("Hello World", Style = 3 ) = it's return grey33 color text with Italicized style   \n
                grey33("Hello World", Style = 4 ) = it's return grey33 color text with UnderLine          \n
                grey33("Hello World", Style = 5 ) = it's return Blinking grey33 color text                \n
        """
        if rgb:
            return (84, 84, 84)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 84, 84, 84,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 84, 84, 84)
                


def light_gray( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the light_gray colored text.\n
        light_gray() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use light_graybg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: light_gray("text",bg='light_gray') then it's apply the light_gray color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of light_gray\n
                    for example : light_gray(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                light_gray("Hello World", Style = 0 ) = it's return light_gray color text without any style       \n
                light_gray("Hello World", Style = 1 ) = it's return light_gray color text with bold text          \n
                light_gray("Hello World", Style = 2 ) = it's return light_gray color text with light text         \n
                light_gray("Hello World", Style = 3 ) = it's return light_gray color text with Italicized style   \n
                light_gray("Hello World", Style = 4 ) = it's return light_gray color text with UnderLine          \n
                light_gray("Hello World", Style = 5 ) = it's return Blinking light_gray color text                \n
        """
        if rgb:
            return (85, 85, 85)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 85, 85, 85,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 85, 85, 85)
                


def grey34( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey34 colored text.\n
        grey34() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey34bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey34("text",bg='grey34') then it's apply the grey34 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey34\n
                    for example : grey34(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey34("Hello World", Style = 0 ) = it's return grey34 color text without any style       \n
                grey34("Hello World", Style = 1 ) = it's return grey34 color text with bold text          \n
                grey34("Hello World", Style = 2 ) = it's return grey34 color text with light text         \n
                grey34("Hello World", Style = 3 ) = it's return grey34 color text with Italicized style   \n
                grey34("Hello World", Style = 4 ) = it's return grey34 color text with UnderLine          \n
                grey34("Hello World", Style = 5 ) = it's return Blinking grey34 color text                \n
        """
        if rgb:
            return (87, 87, 87)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 87, 87, 87,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 87, 87, 87)
                


def grey35( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey35 colored text.\n
        grey35() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey35bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey35("text",bg='grey35') then it's apply the grey35 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey35\n
                    for example : grey35(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey35("Hello World", Style = 0 ) = it's return grey35 color text without any style       \n
                grey35("Hello World", Style = 1 ) = it's return grey35 color text with bold text          \n
                grey35("Hello World", Style = 2 ) = it's return grey35 color text with light text         \n
                grey35("Hello World", Style = 3 ) = it's return grey35 color text with Italicized style   \n
                grey35("Hello World", Style = 4 ) = it's return grey35 color text with UnderLine          \n
                grey35("Hello World", Style = 5 ) = it's return Blinking grey35 color text                \n
        """
        if rgb:
            return (89, 89, 89)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 89, 89, 89,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 89, 89, 89)
                


def grey36( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey36 colored text.\n
        grey36() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey36bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey36("text",bg='grey36') then it's apply the grey36 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey36\n
                    for example : grey36(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey36("Hello World", Style = 0 ) = it's return grey36 color text without any style       \n
                grey36("Hello World", Style = 1 ) = it's return grey36 color text with bold text          \n
                grey36("Hello World", Style = 2 ) = it's return grey36 color text with light text         \n
                grey36("Hello World", Style = 3 ) = it's return grey36 color text with Italicized style   \n
                grey36("Hello World", Style = 4 ) = it's return grey36 color text with UnderLine          \n
                grey36("Hello World", Style = 5 ) = it's return Blinking grey36 color text                \n
        """
        if rgb:
            return (92, 92, 92)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 92, 92, 92,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 92, 92, 92)
                


def grey37( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey37 colored text.\n
        grey37() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey37bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey37("text",bg='grey37') then it's apply the grey37 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey37\n
                    for example : grey37(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey37("Hello World", Style = 0 ) = it's return grey37 color text without any style       \n
                grey37("Hello World", Style = 1 ) = it's return grey37 color text with bold text          \n
                grey37("Hello World", Style = 2 ) = it's return grey37 color text with light text         \n
                grey37("Hello World", Style = 3 ) = it's return grey37 color text with Italicized style   \n
                grey37("Hello World", Style = 4 ) = it's return grey37 color text with UnderLine          \n
                grey37("Hello World", Style = 5 ) = it's return Blinking grey37 color text                \n
        """
        if rgb:
            return (94, 94, 94)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 94, 94, 94,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 94, 94, 94)
                


def grey38( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey38 colored text.\n
        grey38() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey38bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey38("text",bg='grey38') then it's apply the grey38 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey38\n
                    for example : grey38(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey38("Hello World", Style = 0 ) = it's return grey38 color text without any style       \n
                grey38("Hello World", Style = 1 ) = it's return grey38 color text with bold text          \n
                grey38("Hello World", Style = 2 ) = it's return grey38 color text with light text         \n
                grey38("Hello World", Style = 3 ) = it's return grey38 color text with Italicized style   \n
                grey38("Hello World", Style = 4 ) = it's return grey38 color text with UnderLine          \n
                grey38("Hello World", Style = 5 ) = it's return Blinking grey38 color text                \n
        """
        if rgb:
            return (97, 97, 97)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 97, 97, 97,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 97, 97, 97)
                


def grey39( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey39 colored text.\n
        grey39() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey39bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey39("text",bg='grey39') then it's apply the grey39 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey39\n
                    for example : grey39(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey39("Hello World", Style = 0 ) = it's return grey39 color text without any style       \n
                grey39("Hello World", Style = 1 ) = it's return grey39 color text with bold text          \n
                grey39("Hello World", Style = 2 ) = it's return grey39 color text with light text         \n
                grey39("Hello World", Style = 3 ) = it's return grey39 color text with Italicized style   \n
                grey39("Hello World", Style = 4 ) = it's return grey39 color text with UnderLine          \n
                grey39("Hello World", Style = 5 ) = it's return Blinking grey39 color text                \n
        """
        if rgb:
            return (99, 99, 99)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 99, 99, 99,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 99, 99, 99)
                


def grey40( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey40 colored text.\n
        grey40() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey40bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey40("text",bg='grey40') then it's apply the grey40 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey40\n
                    for example : grey40(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey40("Hello World", Style = 0 ) = it's return grey40 color text without any style       \n
                grey40("Hello World", Style = 1 ) = it's return grey40 color text with bold text          \n
                grey40("Hello World", Style = 2 ) = it's return grey40 color text with light text         \n
                grey40("Hello World", Style = 3 ) = it's return grey40 color text with Italicized style   \n
                grey40("Hello World", Style = 4 ) = it's return grey40 color text with UnderLine          \n
                grey40("Hello World", Style = 5 ) = it's return Blinking grey40 color text                \n
        """
        if rgb:
            return (102, 102, 102)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 102, 102, 102,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 102, 102, 102)
                


def grey41_dimgrey( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey41_dimgrey colored text.\n
        grey41_dimgrey() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey41_dimgreybg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey41_dimgrey("text",bg='grey41_dimgrey') then it's apply the grey41_dimgrey color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey41_dimgrey\n
                    for example : grey41_dimgrey(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey41_dimgrey("Hello World", Style = 0 ) = it's return grey41_dimgrey color text without any style       \n
                grey41_dimgrey("Hello World", Style = 1 ) = it's return grey41_dimgrey color text with bold text          \n
                grey41_dimgrey("Hello World", Style = 2 ) = it's return grey41_dimgrey color text with light text         \n
                grey41_dimgrey("Hello World", Style = 3 ) = it's return grey41_dimgrey color text with Italicized style   \n
                grey41_dimgrey("Hello World", Style = 4 ) = it's return grey41_dimgrey color text with UnderLine          \n
                grey41_dimgrey("Hello World", Style = 5 ) = it's return Blinking grey41_dimgrey color text                \n
        """
        if rgb:
            return (105, 105, 105)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 105, 105, 105,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 105, 105, 105)
                


def grey42( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey42 colored text.\n
        grey42() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey42bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey42("text",bg='grey42') then it's apply the grey42 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey42\n
                    for example : grey42(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey42("Hello World", Style = 0 ) = it's return grey42 color text without any style       \n
                grey42("Hello World", Style = 1 ) = it's return grey42 color text with bold text          \n
                grey42("Hello World", Style = 2 ) = it's return grey42 color text with light text         \n
                grey42("Hello World", Style = 3 ) = it's return grey42 color text with Italicized style   \n
                grey42("Hello World", Style = 4 ) = it's return grey42 color text with UnderLine          \n
                grey42("Hello World", Style = 5 ) = it's return Blinking grey42 color text                \n
        """
        if rgb:
            return (107, 107, 107)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 107, 107, 107,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 107, 107, 107)
                


def grey43( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey43 colored text.\n
        grey43() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey43bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey43("text",bg='grey43') then it's apply the grey43 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey43\n
                    for example : grey43(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey43("Hello World", Style = 0 ) = it's return grey43 color text without any style       \n
                grey43("Hello World", Style = 1 ) = it's return grey43 color text with bold text          \n
                grey43("Hello World", Style = 2 ) = it's return grey43 color text with light text         \n
                grey43("Hello World", Style = 3 ) = it's return grey43 color text with Italicized style   \n
                grey43("Hello World", Style = 4 ) = it's return grey43 color text with UnderLine          \n
                grey43("Hello World", Style = 5 ) = it's return Blinking grey43 color text                \n
        """
        if rgb:
            return (110, 110, 110)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 110, 110, 110,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 110, 110, 110)
                


def grey44( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey44 colored text.\n
        grey44() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey44bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey44("text",bg='grey44') then it's apply the grey44 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey44\n
                    for example : grey44(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey44("Hello World", Style = 0 ) = it's return grey44 color text without any style       \n
                grey44("Hello World", Style = 1 ) = it's return grey44 color text with bold text          \n
                grey44("Hello World", Style = 2 ) = it's return grey44 color text with light text         \n
                grey44("Hello World", Style = 3 ) = it's return grey44 color text with Italicized style   \n
                grey44("Hello World", Style = 4 ) = it's return grey44 color text with UnderLine          \n
                grey44("Hello World", Style = 5 ) = it's return Blinking grey44 color text                \n
        """
        if rgb:
            return (112, 112, 112)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 112, 112, 112,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 112, 112, 112)
                


def grey45( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey45 colored text.\n
        grey45() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey45bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey45("text",bg='grey45') then it's apply the grey45 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey45\n
                    for example : grey45(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey45("Hello World", Style = 0 ) = it's return grey45 color text without any style       \n
                grey45("Hello World", Style = 1 ) = it's return grey45 color text with bold text          \n
                grey45("Hello World", Style = 2 ) = it's return grey45 color text with light text         \n
                grey45("Hello World", Style = 3 ) = it's return grey45 color text with Italicized style   \n
                grey45("Hello World", Style = 4 ) = it's return grey45 color text with UnderLine          \n
                grey45("Hello World", Style = 5 ) = it's return Blinking grey45 color text                \n
        """
        if rgb:
            return (115, 115, 115)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 115, 115, 115,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 115, 115, 115)
                


def grey46( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey46 colored text.\n
        grey46() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey46bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey46("text",bg='grey46') then it's apply the grey46 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey46\n
                    for example : grey46(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey46("Hello World", Style = 0 ) = it's return grey46 color text without any style       \n
                grey46("Hello World", Style = 1 ) = it's return grey46 color text with bold text          \n
                grey46("Hello World", Style = 2 ) = it's return grey46 color text with light text         \n
                grey46("Hello World", Style = 3 ) = it's return grey46 color text with Italicized style   \n
                grey46("Hello World", Style = 4 ) = it's return grey46 color text with UnderLine          \n
                grey46("Hello World", Style = 5 ) = it's return Blinking grey46 color text                \n
        """
        if rgb:
            return (117, 117, 117)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 117, 117, 117,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 117, 117, 117)
                


def grey47( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey47 colored text.\n
        grey47() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey47bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey47("text",bg='grey47') then it's apply the grey47 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey47\n
                    for example : grey47(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey47("Hello World", Style = 0 ) = it's return grey47 color text without any style       \n
                grey47("Hello World", Style = 1 ) = it's return grey47 color text with bold text          \n
                grey47("Hello World", Style = 2 ) = it's return grey47 color text with light text         \n
                grey47("Hello World", Style = 3 ) = it's return grey47 color text with Italicized style   \n
                grey47("Hello World", Style = 4 ) = it's return grey47 color text with UnderLine          \n
                grey47("Hello World", Style = 5 ) = it's return Blinking grey47 color text                \n
        """
        if rgb:
            return (120, 120, 120)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 120, 120, 120,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 120, 120, 120)
                


def grey48( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey48 colored text.\n
        grey48() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey48bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey48("text",bg='grey48') then it's apply the grey48 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey48\n
                    for example : grey48(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey48("Hello World", Style = 0 ) = it's return grey48 color text without any style       \n
                grey48("Hello World", Style = 1 ) = it's return grey48 color text with bold text          \n
                grey48("Hello World", Style = 2 ) = it's return grey48 color text with light text         \n
                grey48("Hello World", Style = 3 ) = it's return grey48 color text with Italicized style   \n
                grey48("Hello World", Style = 4 ) = it's return grey48 color text with UnderLine          \n
                grey48("Hello World", Style = 5 ) = it's return Blinking grey48 color text                \n
        """
        if rgb:
            return (122, 122, 122)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 122, 122, 122,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 122, 122, 122)
                


def grey49( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey49 colored text.\n
        grey49() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey49bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey49("text",bg='grey49') then it's apply the grey49 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey49\n
                    for example : grey49(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey49("Hello World", Style = 0 ) = it's return grey49 color text without any style       \n
                grey49("Hello World", Style = 1 ) = it's return grey49 color text with bold text          \n
                grey49("Hello World", Style = 2 ) = it's return grey49 color text with light text         \n
                grey49("Hello World", Style = 3 ) = it's return grey49 color text with Italicized style   \n
                grey49("Hello World", Style = 4 ) = it's return grey49 color text with UnderLine          \n
                grey49("Hello World", Style = 5 ) = it's return Blinking grey49 color text                \n
        """
        if rgb:
            return (125, 125, 125)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 125, 125, 125,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 125, 125, 125)
                


def grey50( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey50 colored text.\n
        grey50() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey50bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey50("text",bg='grey50') then it's apply the grey50 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey50\n
                    for example : grey50(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey50("Hello World", Style = 0 ) = it's return grey50 color text without any style       \n
                grey50("Hello World", Style = 1 ) = it's return grey50 color text with bold text          \n
                grey50("Hello World", Style = 2 ) = it's return grey50 color text with light text         \n
                grey50("Hello World", Style = 3 ) = it's return grey50 color text with Italicized style   \n
                grey50("Hello World", Style = 4 ) = it's return grey50 color text with UnderLine          \n
                grey50("Hello World", Style = 5 ) = it's return Blinking grey50 color text                \n
        """
        if rgb:
            return (127, 127, 127)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 127, 127, 127,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 127, 127, 127)
                


def grey51( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey51 colored text.\n
        grey51() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey51bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey51("text",bg='grey51') then it's apply the grey51 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey51\n
                    for example : grey51(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey51("Hello World", Style = 0 ) = it's return grey51 color text without any style       \n
                grey51("Hello World", Style = 1 ) = it's return grey51 color text with bold text          \n
                grey51("Hello World", Style = 2 ) = it's return grey51 color text with light text         \n
                grey51("Hello World", Style = 3 ) = it's return grey51 color text with Italicized style   \n
                grey51("Hello World", Style = 4 ) = it's return grey51 color text with UnderLine          \n
                grey51("Hello World", Style = 5 ) = it's return Blinking grey51 color text                \n
        """
        if rgb:
            return (130, 130, 130)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 130, 130, 130,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 130, 130, 130)
                


def grey52( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey52 colored text.\n
        grey52() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey52bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey52("text",bg='grey52') then it's apply the grey52 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey52\n
                    for example : grey52(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey52("Hello World", Style = 0 ) = it's return grey52 color text without any style       \n
                grey52("Hello World", Style = 1 ) = it's return grey52 color text with bold text          \n
                grey52("Hello World", Style = 2 ) = it's return grey52 color text with light text         \n
                grey52("Hello World", Style = 3 ) = it's return grey52 color text with Italicized style   \n
                grey52("Hello World", Style = 4 ) = it's return grey52 color text with UnderLine          \n
                grey52("Hello World", Style = 5 ) = it's return Blinking grey52 color text                \n
        """
        if rgb:
            return (133, 133, 133)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 133, 133, 133,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 133, 133, 133)
                


def grey53( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey53 colored text.\n
        grey53() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey53bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey53("text",bg='grey53') then it's apply the grey53 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey53\n
                    for example : grey53(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey53("Hello World", Style = 0 ) = it's return grey53 color text without any style       \n
                grey53("Hello World", Style = 1 ) = it's return grey53 color text with bold text          \n
                grey53("Hello World", Style = 2 ) = it's return grey53 color text with light text         \n
                grey53("Hello World", Style = 3 ) = it's return grey53 color text with Italicized style   \n
                grey53("Hello World", Style = 4 ) = it's return grey53 color text with UnderLine          \n
                grey53("Hello World", Style = 5 ) = it's return Blinking grey53 color text                \n
        """
        if rgb:
            return (135, 135, 135)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 135, 135, 135,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 135, 135, 135)
                


def grey54( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey54 colored text.\n
        grey54() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey54bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey54("text",bg='grey54') then it's apply the grey54 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey54\n
                    for example : grey54(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey54("Hello World", Style = 0 ) = it's return grey54 color text without any style       \n
                grey54("Hello World", Style = 1 ) = it's return grey54 color text with bold text          \n
                grey54("Hello World", Style = 2 ) = it's return grey54 color text with light text         \n
                grey54("Hello World", Style = 3 ) = it's return grey54 color text with Italicized style   \n
                grey54("Hello World", Style = 4 ) = it's return grey54 color text with UnderLine          \n
                grey54("Hello World", Style = 5 ) = it's return Blinking grey54 color text                \n
        """
        if rgb:
            return (138, 138, 138)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 138, 138, 138,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 138, 138, 138)
                


def grey55( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey55 colored text.\n
        grey55() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey55bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey55("text",bg='grey55') then it's apply the grey55 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey55\n
                    for example : grey55(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey55("Hello World", Style = 0 ) = it's return grey55 color text without any style       \n
                grey55("Hello World", Style = 1 ) = it's return grey55 color text with bold text          \n
                grey55("Hello World", Style = 2 ) = it's return grey55 color text with light text         \n
                grey55("Hello World", Style = 3 ) = it's return grey55 color text with Italicized style   \n
                grey55("Hello World", Style = 4 ) = it's return grey55 color text with UnderLine          \n
                grey55("Hello World", Style = 5 ) = it's return Blinking grey55 color text                \n
        """
        if rgb:
            return (140, 140, 140)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 140, 140, 140,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 140, 140, 140)
                


def grey56( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey56 colored text.\n
        grey56() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey56bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey56("text",bg='grey56') then it's apply the grey56 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey56\n
                    for example : grey56(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey56("Hello World", Style = 0 ) = it's return grey56 color text without any style       \n
                grey56("Hello World", Style = 1 ) = it's return grey56 color text with bold text          \n
                grey56("Hello World", Style = 2 ) = it's return grey56 color text with light text         \n
                grey56("Hello World", Style = 3 ) = it's return grey56 color text with Italicized style   \n
                grey56("Hello World", Style = 4 ) = it's return grey56 color text with UnderLine          \n
                grey56("Hello World", Style = 5 ) = it's return Blinking grey56 color text                \n
        """
        if rgb:
            return (143, 143, 143)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 143, 143, 143,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 143, 143, 143)
                


def grey57( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey57 colored text.\n
        grey57() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey57bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey57("text",bg='grey57') then it's apply the grey57 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey57\n
                    for example : grey57(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey57("Hello World", Style = 0 ) = it's return grey57 color text without any style       \n
                grey57("Hello World", Style = 1 ) = it's return grey57 color text with bold text          \n
                grey57("Hello World", Style = 2 ) = it's return grey57 color text with light text         \n
                grey57("Hello World", Style = 3 ) = it's return grey57 color text with Italicized style   \n
                grey57("Hello World", Style = 4 ) = it's return grey57 color text with UnderLine          \n
                grey57("Hello World", Style = 5 ) = it's return Blinking grey57 color text                \n
        """
        if rgb:
            return (145, 145, 145)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 145, 145, 145,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 145, 145, 145)
                


def grey58( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey58 colored text.\n
        grey58() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey58bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey58("text",bg='grey58') then it's apply the grey58 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey58\n
                    for example : grey58(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey58("Hello World", Style = 0 ) = it's return grey58 color text without any style       \n
                grey58("Hello World", Style = 1 ) = it's return grey58 color text with bold text          \n
                grey58("Hello World", Style = 2 ) = it's return grey58 color text with light text         \n
                grey58("Hello World", Style = 3 ) = it's return grey58 color text with Italicized style   \n
                grey58("Hello World", Style = 4 ) = it's return grey58 color text with UnderLine          \n
                grey58("Hello World", Style = 5 ) = it's return Blinking grey58 color text                \n
        """
        if rgb:
            return (148, 148, 148)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 148, 148, 148,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 148, 148, 148)
                


def grey59( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey59 colored text.\n
        grey59() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey59bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey59("text",bg='grey59') then it's apply the grey59 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey59\n
                    for example : grey59(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey59("Hello World", Style = 0 ) = it's return grey59 color text without any style       \n
                grey59("Hello World", Style = 1 ) = it's return grey59 color text with bold text          \n
                grey59("Hello World", Style = 2 ) = it's return grey59 color text with light text         \n
                grey59("Hello World", Style = 3 ) = it's return grey59 color text with Italicized style   \n
                grey59("Hello World", Style = 4 ) = it's return grey59 color text with UnderLine          \n
                grey59("Hello World", Style = 5 ) = it's return Blinking grey59 color text                \n
        """
        if rgb:
            return (150, 150, 150)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 150, 150, 150,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 150, 150, 150)
                


def grey60( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey60 colored text.\n
        grey60() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey60bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey60("text",bg='grey60') then it's apply the grey60 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey60\n
                    for example : grey60(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey60("Hello World", Style = 0 ) = it's return grey60 color text without any style       \n
                grey60("Hello World", Style = 1 ) = it's return grey60 color text with bold text          \n
                grey60("Hello World", Style = 2 ) = it's return grey60 color text with light text         \n
                grey60("Hello World", Style = 3 ) = it's return grey60 color text with Italicized style   \n
                grey60("Hello World", Style = 4 ) = it's return grey60 color text with UnderLine          \n
                grey60("Hello World", Style = 5 ) = it's return Blinking grey60 color text                \n
        """
        if rgb:
            return (153, 153, 153)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 153, 153, 153,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 153, 153, 153)
                


def grey61( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey61 colored text.\n
        grey61() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey61bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey61("text",bg='grey61') then it's apply the grey61 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey61\n
                    for example : grey61(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey61("Hello World", Style = 0 ) = it's return grey61 color text without any style       \n
                grey61("Hello World", Style = 1 ) = it's return grey61 color text with bold text          \n
                grey61("Hello World", Style = 2 ) = it's return grey61 color text with light text         \n
                grey61("Hello World", Style = 3 ) = it's return grey61 color text with Italicized style   \n
                grey61("Hello World", Style = 4 ) = it's return grey61 color text with UnderLine          \n
                grey61("Hello World", Style = 5 ) = it's return Blinking grey61 color text                \n
        """
        if rgb:
            return (156, 156, 156)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 156, 156, 156,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 156, 156, 156)
                


def grey62( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey62 colored text.\n
        grey62() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey62bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey62("text",bg='grey62') then it's apply the grey62 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey62\n
                    for example : grey62(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey62("Hello World", Style = 0 ) = it's return grey62 color text without any style       \n
                grey62("Hello World", Style = 1 ) = it's return grey62 color text with bold text          \n
                grey62("Hello World", Style = 2 ) = it's return grey62 color text with light text         \n
                grey62("Hello World", Style = 3 ) = it's return grey62 color text with Italicized style   \n
                grey62("Hello World", Style = 4 ) = it's return grey62 color text with UnderLine          \n
                grey62("Hello World", Style = 5 ) = it's return Blinking grey62 color text                \n
        """
        if rgb:
            return (158, 158, 158)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 158, 158, 158,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 158, 158, 158)
                


def grey63( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey63 colored text.\n
        grey63() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey63bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey63("text",bg='grey63') then it's apply the grey63 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey63\n
                    for example : grey63(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey63("Hello World", Style = 0 ) = it's return grey63 color text without any style       \n
                grey63("Hello World", Style = 1 ) = it's return grey63 color text with bold text          \n
                grey63("Hello World", Style = 2 ) = it's return grey63 color text with light text         \n
                grey63("Hello World", Style = 3 ) = it's return grey63 color text with Italicized style   \n
                grey63("Hello World", Style = 4 ) = it's return grey63 color text with UnderLine          \n
                grey63("Hello World", Style = 5 ) = it's return Blinking grey63 color text                \n
        """
        if rgb:
            return (161, 161, 161)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 161, 161, 161,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 161, 161, 161)
                


def grey64( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey64 colored text.\n
        grey64() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey64bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey64("text",bg='grey64') then it's apply the grey64 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey64\n
                    for example : grey64(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey64("Hello World", Style = 0 ) = it's return grey64 color text without any style       \n
                grey64("Hello World", Style = 1 ) = it's return grey64 color text with bold text          \n
                grey64("Hello World", Style = 2 ) = it's return grey64 color text with light text         \n
                grey64("Hello World", Style = 3 ) = it's return grey64 color text with Italicized style   \n
                grey64("Hello World", Style = 4 ) = it's return grey64 color text with UnderLine          \n
                grey64("Hello World", Style = 5 ) = it's return Blinking grey64 color text                \n
        """
        if rgb:
            return (163, 163, 163)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 163, 163, 163,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 163, 163, 163)
                


def grey65( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey65 colored text.\n
        grey65() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey65bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey65("text",bg='grey65') then it's apply the grey65 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey65\n
                    for example : grey65(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey65("Hello World", Style = 0 ) = it's return grey65 color text without any style       \n
                grey65("Hello World", Style = 1 ) = it's return grey65 color text with bold text          \n
                grey65("Hello World", Style = 2 ) = it's return grey65 color text with light text         \n
                grey65("Hello World", Style = 3 ) = it's return grey65 color text with Italicized style   \n
                grey65("Hello World", Style = 4 ) = it's return grey65 color text with UnderLine          \n
                grey65("Hello World", Style = 5 ) = it's return Blinking grey65 color text                \n
        """
        if rgb:
            return (166, 166, 166)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 166, 166, 166,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 166, 166, 166)
                


def grey66( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey66 colored text.\n
        grey66() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey66bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey66("text",bg='grey66') then it's apply the grey66 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey66\n
                    for example : grey66(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey66("Hello World", Style = 0 ) = it's return grey66 color text without any style       \n
                grey66("Hello World", Style = 1 ) = it's return grey66 color text with bold text          \n
                grey66("Hello World", Style = 2 ) = it's return grey66 color text with light text         \n
                grey66("Hello World", Style = 3 ) = it's return grey66 color text with Italicized style   \n
                grey66("Hello World", Style = 4 ) = it's return grey66 color text with UnderLine          \n
                grey66("Hello World", Style = 5 ) = it's return Blinking grey66 color text                \n
        """
        if rgb:
            return (168, 168, 168)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 168, 168, 168,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 168, 168, 168)
                


def grey67( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey67 colored text.\n
        grey67() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey67bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey67("text",bg='grey67') then it's apply the grey67 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey67\n
                    for example : grey67(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey67("Hello World", Style = 0 ) = it's return grey67 color text without any style       \n
                grey67("Hello World", Style = 1 ) = it's return grey67 color text with bold text          \n
                grey67("Hello World", Style = 2 ) = it's return grey67 color text with light text         \n
                grey67("Hello World", Style = 3 ) = it's return grey67 color text with Italicized style   \n
                grey67("Hello World", Style = 4 ) = it's return grey67 color text with UnderLine          \n
                grey67("Hello World", Style = 5 ) = it's return Blinking grey67 color text                \n
        """
        if rgb:
            return (171, 171, 171)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 171, 171, 171,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 171, 171, 171)
                


def grey68( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey68 colored text.\n
        grey68() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey68bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey68("text",bg='grey68') then it's apply the grey68 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey68\n
                    for example : grey68(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey68("Hello World", Style = 0 ) = it's return grey68 color text without any style       \n
                grey68("Hello World", Style = 1 ) = it's return grey68 color text with bold text          \n
                grey68("Hello World", Style = 2 ) = it's return grey68 color text with light text         \n
                grey68("Hello World", Style = 3 ) = it's return grey68 color text with Italicized style   \n
                grey68("Hello World", Style = 4 ) = it's return grey68 color text with UnderLine          \n
                grey68("Hello World", Style = 5 ) = it's return Blinking grey68 color text                \n
        """
        if rgb:
            return (173, 173, 173)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 173, 173, 173,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 173, 173, 173)
                


def grey69( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey69 colored text.\n
        grey69() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey69bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey69("text",bg='grey69') then it's apply the grey69 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey69\n
                    for example : grey69(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey69("Hello World", Style = 0 ) = it's return grey69 color text without any style       \n
                grey69("Hello World", Style = 1 ) = it's return grey69 color text with bold text          \n
                grey69("Hello World", Style = 2 ) = it's return grey69 color text with light text         \n
                grey69("Hello World", Style = 3 ) = it's return grey69 color text with Italicized style   \n
                grey69("Hello World", Style = 4 ) = it's return grey69 color text with UnderLine          \n
                grey69("Hello World", Style = 5 ) = it's return Blinking grey69 color text                \n
        """
        if rgb:
            return (176, 176, 176)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 176, 176, 176,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 176, 176, 176)
                


def grey70( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey70 colored text.\n
        grey70() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey70bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey70("text",bg='grey70') then it's apply the grey70 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey70\n
                    for example : grey70(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey70("Hello World", Style = 0 ) = it's return grey70 color text without any style       \n
                grey70("Hello World", Style = 1 ) = it's return grey70 color text with bold text          \n
                grey70("Hello World", Style = 2 ) = it's return grey70 color text with light text         \n
                grey70("Hello World", Style = 3 ) = it's return grey70 color text with Italicized style   \n
                grey70("Hello World", Style = 4 ) = it's return grey70 color text with UnderLine          \n
                grey70("Hello World", Style = 5 ) = it's return Blinking grey70 color text                \n
        """
        if rgb:
            return (179, 179, 179)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 179, 179, 179,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 179, 179, 179)
                


def grey71( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey71 colored text.\n
        grey71() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey71bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey71("text",bg='grey71') then it's apply the grey71 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey71\n
                    for example : grey71(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey71("Hello World", Style = 0 ) = it's return grey71 color text without any style       \n
                grey71("Hello World", Style = 1 ) = it's return grey71 color text with bold text          \n
                grey71("Hello World", Style = 2 ) = it's return grey71 color text with light text         \n
                grey71("Hello World", Style = 3 ) = it's return grey71 color text with Italicized style   \n
                grey71("Hello World", Style = 4 ) = it's return grey71 color text with UnderLine          \n
                grey71("Hello World", Style = 5 ) = it's return Blinking grey71 color text                \n
        """
        if rgb:
            return (181, 181, 181)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 181, 181, 181,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 181, 181, 181)
                


def grey72( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey72 colored text.\n
        grey72() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey72bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey72("text",bg='grey72') then it's apply the grey72 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey72\n
                    for example : grey72(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey72("Hello World", Style = 0 ) = it's return grey72 color text without any style       \n
                grey72("Hello World", Style = 1 ) = it's return grey72 color text with bold text          \n
                grey72("Hello World", Style = 2 ) = it's return grey72 color text with light text         \n
                grey72("Hello World", Style = 3 ) = it's return grey72 color text with Italicized style   \n
                grey72("Hello World", Style = 4 ) = it's return grey72 color text with UnderLine          \n
                grey72("Hello World", Style = 5 ) = it's return Blinking grey72 color text                \n
        """
        if rgb:
            return (184, 184, 184)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 184, 184, 184,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 184, 184, 184)
                


def grey73( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey73 colored text.\n
        grey73() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey73bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey73("text",bg='grey73') then it's apply the grey73 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey73\n
                    for example : grey73(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey73("Hello World", Style = 0 ) = it's return grey73 color text without any style       \n
                grey73("Hello World", Style = 1 ) = it's return grey73 color text with bold text          \n
                grey73("Hello World", Style = 2 ) = it's return grey73 color text with light text         \n
                grey73("Hello World", Style = 3 ) = it's return grey73 color text with Italicized style   \n
                grey73("Hello World", Style = 4 ) = it's return grey73 color text with UnderLine          \n
                grey73("Hello World", Style = 5 ) = it's return Blinking grey73 color text                \n
        """
        if rgb:
            return (186, 186, 186)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 186, 186, 186,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 186, 186, 186)
                


def grey74( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey74 colored text.\n
        grey74() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey74bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey74("text",bg='grey74') then it's apply the grey74 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey74\n
                    for example : grey74(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey74("Hello World", Style = 0 ) = it's return grey74 color text without any style       \n
                grey74("Hello World", Style = 1 ) = it's return grey74 color text with bold text          \n
                grey74("Hello World", Style = 2 ) = it's return grey74 color text with light text         \n
                grey74("Hello World", Style = 3 ) = it's return grey74 color text with Italicized style   \n
                grey74("Hello World", Style = 4 ) = it's return grey74 color text with UnderLine          \n
                grey74("Hello World", Style = 5 ) = it's return Blinking grey74 color text                \n
        """
        if rgb:
            return (189, 189, 189)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 189, 189, 189,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 189, 189, 189)
                


def grey75( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey75 colored text.\n
        grey75() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey75bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey75("text",bg='grey75') then it's apply the grey75 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey75\n
                    for example : grey75(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey75("Hello World", Style = 0 ) = it's return grey75 color text without any style       \n
                grey75("Hello World", Style = 1 ) = it's return grey75 color text with bold text          \n
                grey75("Hello World", Style = 2 ) = it's return grey75 color text with light text         \n
                grey75("Hello World", Style = 3 ) = it's return grey75 color text with Italicized style   \n
                grey75("Hello World", Style = 4 ) = it's return grey75 color text with UnderLine          \n
                grey75("Hello World", Style = 5 ) = it's return Blinking grey75 color text                \n
        """
        if rgb:
            return (191, 191, 191)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 191, 191, 191,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 191, 191, 191)
                


def grey76( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey76 colored text.\n
        grey76() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey76bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey76("text",bg='grey76') then it's apply the grey76 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey76\n
                    for example : grey76(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey76("Hello World", Style = 0 ) = it's return grey76 color text without any style       \n
                grey76("Hello World", Style = 1 ) = it's return grey76 color text with bold text          \n
                grey76("Hello World", Style = 2 ) = it's return grey76 color text with light text         \n
                grey76("Hello World", Style = 3 ) = it's return grey76 color text with Italicized style   \n
                grey76("Hello World", Style = 4 ) = it's return grey76 color text with UnderLine          \n
                grey76("Hello World", Style = 5 ) = it's return Blinking grey76 color text                \n
        """
        if rgb:
            return (194, 194, 194)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 194, 194, 194,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 194, 194, 194)
                


def grey77( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey77 colored text.\n
        grey77() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey77bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey77("text",bg='grey77') then it's apply the grey77 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey77\n
                    for example : grey77(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey77("Hello World", Style = 0 ) = it's return grey77 color text without any style       \n
                grey77("Hello World", Style = 1 ) = it's return grey77 color text with bold text          \n
                grey77("Hello World", Style = 2 ) = it's return grey77 color text with light text         \n
                grey77("Hello World", Style = 3 ) = it's return grey77 color text with Italicized style   \n
                grey77("Hello World", Style = 4 ) = it's return grey77 color text with UnderLine          \n
                grey77("Hello World", Style = 5 ) = it's return Blinking grey77 color text                \n
        """
        if rgb:
            return (196, 196, 196)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 196, 196, 196,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 196, 196, 196)
                


def grey78( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey78 colored text.\n
        grey78() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey78bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey78("text",bg='grey78') then it's apply the grey78 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey78\n
                    for example : grey78(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey78("Hello World", Style = 0 ) = it's return grey78 color text without any style       \n
                grey78("Hello World", Style = 1 ) = it's return grey78 color text with bold text          \n
                grey78("Hello World", Style = 2 ) = it's return grey78 color text with light text         \n
                grey78("Hello World", Style = 3 ) = it's return grey78 color text with Italicized style   \n
                grey78("Hello World", Style = 4 ) = it's return grey78 color text with UnderLine          \n
                grey78("Hello World", Style = 5 ) = it's return Blinking grey78 color text                \n
        """
        if rgb:
            return (199, 199, 199)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 199, 199, 199,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 199, 199, 199)
                


def grey79( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey79 colored text.\n
        grey79() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey79bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey79("text",bg='grey79') then it's apply the grey79 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey79\n
                    for example : grey79(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey79("Hello World", Style = 0 ) = it's return grey79 color text without any style       \n
                grey79("Hello World", Style = 1 ) = it's return grey79 color text with bold text          \n
                grey79("Hello World", Style = 2 ) = it's return grey79 color text with light text         \n
                grey79("Hello World", Style = 3 ) = it's return grey79 color text with Italicized style   \n
                grey79("Hello World", Style = 4 ) = it's return grey79 color text with UnderLine          \n
                grey79("Hello World", Style = 5 ) = it's return Blinking grey79 color text                \n
        """
        if rgb:
            return (201, 201, 201)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 201, 201, 201,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 201, 201, 201)
                


def grey80( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey80 colored text.\n
        grey80() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey80bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey80("text",bg='grey80') then it's apply the grey80 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey80\n
                    for example : grey80(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey80("Hello World", Style = 0 ) = it's return grey80 color text without any style       \n
                grey80("Hello World", Style = 1 ) = it's return grey80 color text with bold text          \n
                grey80("Hello World", Style = 2 ) = it's return grey80 color text with light text         \n
                grey80("Hello World", Style = 3 ) = it's return grey80 color text with Italicized style   \n
                grey80("Hello World", Style = 4 ) = it's return grey80 color text with UnderLine          \n
                grey80("Hello World", Style = 5 ) = it's return Blinking grey80 color text                \n
        """
        if rgb:
            return (204, 204, 204)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 204, 204, 204,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 204, 204, 204)
                


def grey81( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey81 colored text.\n
        grey81() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey81bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey81("text",bg='grey81') then it's apply the grey81 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey81\n
                    for example : grey81(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey81("Hello World", Style = 0 ) = it's return grey81 color text without any style       \n
                grey81("Hello World", Style = 1 ) = it's return grey81 color text with bold text          \n
                grey81("Hello World", Style = 2 ) = it's return grey81 color text with light text         \n
                grey81("Hello World", Style = 3 ) = it's return grey81 color text with Italicized style   \n
                grey81("Hello World", Style = 4 ) = it's return grey81 color text with UnderLine          \n
                grey81("Hello World", Style = 5 ) = it's return Blinking grey81 color text                \n
        """
        if rgb:
            return (207, 207, 207)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 207, 207, 207,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 207, 207, 207)
                


def grey82( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey82 colored text.\n
        grey82() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey82bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey82("text",bg='grey82') then it's apply the grey82 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey82\n
                    for example : grey82(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey82("Hello World", Style = 0 ) = it's return grey82 color text without any style       \n
                grey82("Hello World", Style = 1 ) = it's return grey82 color text with bold text          \n
                grey82("Hello World", Style = 2 ) = it's return grey82 color text with light text         \n
                grey82("Hello World", Style = 3 ) = it's return grey82 color text with Italicized style   \n
                grey82("Hello World", Style = 4 ) = it's return grey82 color text with UnderLine          \n
                grey82("Hello World", Style = 5 ) = it's return Blinking grey82 color text                \n
        """
        if rgb:
            return (209, 209, 209)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 209, 209, 209,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 209, 209, 209)
                


def grey83( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey83 colored text.\n
        grey83() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey83bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey83("text",bg='grey83') then it's apply the grey83 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey83\n
                    for example : grey83(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey83("Hello World", Style = 0 ) = it's return grey83 color text without any style       \n
                grey83("Hello World", Style = 1 ) = it's return grey83 color text with bold text          \n
                grey83("Hello World", Style = 2 ) = it's return grey83 color text with light text         \n
                grey83("Hello World", Style = 3 ) = it's return grey83 color text with Italicized style   \n
                grey83("Hello World", Style = 4 ) = it's return grey83 color text with UnderLine          \n
                grey83("Hello World", Style = 5 ) = it's return Blinking grey83 color text                \n
        """
        if rgb:
            return (212, 212, 212)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 212, 212, 212,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 212, 212, 212)
                


def grey84( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey84 colored text.\n
        grey84() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey84bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey84("text",bg='grey84') then it's apply the grey84 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey84\n
                    for example : grey84(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey84("Hello World", Style = 0 ) = it's return grey84 color text without any style       \n
                grey84("Hello World", Style = 1 ) = it's return grey84 color text with bold text          \n
                grey84("Hello World", Style = 2 ) = it's return grey84 color text with light text         \n
                grey84("Hello World", Style = 3 ) = it's return grey84 color text with Italicized style   \n
                grey84("Hello World", Style = 4 ) = it's return grey84 color text with UnderLine          \n
                grey84("Hello World", Style = 5 ) = it's return Blinking grey84 color text                \n
        """
        if rgb:
            return (214, 214, 214)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 214, 214, 214,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 214, 214, 214)
                


def grey85( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey85 colored text.\n
        grey85() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey85bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey85("text",bg='grey85') then it's apply the grey85 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey85\n
                    for example : grey85(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey85("Hello World", Style = 0 ) = it's return grey85 color text without any style       \n
                grey85("Hello World", Style = 1 ) = it's return grey85 color text with bold text          \n
                grey85("Hello World", Style = 2 ) = it's return grey85 color text with light text         \n
                grey85("Hello World", Style = 3 ) = it's return grey85 color text with Italicized style   \n
                grey85("Hello World", Style = 4 ) = it's return grey85 color text with UnderLine          \n
                grey85("Hello World", Style = 5 ) = it's return Blinking grey85 color text                \n
        """
        if rgb:
            return (217, 217, 217)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 217, 217, 217,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 217, 217, 217)
                


def grey86( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey86 colored text.\n
        grey86() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey86bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey86("text",bg='grey86') then it's apply the grey86 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey86\n
                    for example : grey86(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey86("Hello World", Style = 0 ) = it's return grey86 color text without any style       \n
                grey86("Hello World", Style = 1 ) = it's return grey86 color text with bold text          \n
                grey86("Hello World", Style = 2 ) = it's return grey86 color text with light text         \n
                grey86("Hello World", Style = 3 ) = it's return grey86 color text with Italicized style   \n
                grey86("Hello World", Style = 4 ) = it's return grey86 color text with UnderLine          \n
                grey86("Hello World", Style = 5 ) = it's return Blinking grey86 color text                \n
        """
        if rgb:
            return (219, 219, 219)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 219, 219, 219,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 219, 219, 219)
                


def grey87( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey87 colored text.\n
        grey87() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey87bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey87("text",bg='grey87') then it's apply the grey87 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey87\n
                    for example : grey87(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey87("Hello World", Style = 0 ) = it's return grey87 color text without any style       \n
                grey87("Hello World", Style = 1 ) = it's return grey87 color text with bold text          \n
                grey87("Hello World", Style = 2 ) = it's return grey87 color text with light text         \n
                grey87("Hello World", Style = 3 ) = it's return grey87 color text with Italicized style   \n
                grey87("Hello World", Style = 4 ) = it's return grey87 color text with UnderLine          \n
                grey87("Hello World", Style = 5 ) = it's return Blinking grey87 color text                \n
        """
        if rgb:
            return (222, 222, 222)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 222, 222, 222,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 222, 222, 222)
                


def grey88( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey88 colored text.\n
        grey88() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey88bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey88("text",bg='grey88') then it's apply the grey88 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey88\n
                    for example : grey88(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey88("Hello World", Style = 0 ) = it's return grey88 color text without any style       \n
                grey88("Hello World", Style = 1 ) = it's return grey88 color text with bold text          \n
                grey88("Hello World", Style = 2 ) = it's return grey88 color text with light text         \n
                grey88("Hello World", Style = 3 ) = it's return grey88 color text with Italicized style   \n
                grey88("Hello World", Style = 4 ) = it's return grey88 color text with UnderLine          \n
                grey88("Hello World", Style = 5 ) = it's return Blinking grey88 color text                \n
        """
        if rgb:
            return (224, 224, 224)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 224, 224, 224,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 224, 224, 224)
                


def grey89( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey89 colored text.\n
        grey89() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey89bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey89("text",bg='grey89') then it's apply the grey89 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey89\n
                    for example : grey89(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey89("Hello World", Style = 0 ) = it's return grey89 color text without any style       \n
                grey89("Hello World", Style = 1 ) = it's return grey89 color text with bold text          \n
                grey89("Hello World", Style = 2 ) = it's return grey89 color text with light text         \n
                grey89("Hello World", Style = 3 ) = it's return grey89 color text with Italicized style   \n
                grey89("Hello World", Style = 4 ) = it's return grey89 color text with UnderLine          \n
                grey89("Hello World", Style = 5 ) = it's return Blinking grey89 color text                \n
        """
        if rgb:
            return (227, 227, 227)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 227, 227, 227,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 227, 227, 227)
                


def grey90( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey90 colored text.\n
        grey90() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey90bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey90("text",bg='grey90') then it's apply the grey90 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey90\n
                    for example : grey90(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey90("Hello World", Style = 0 ) = it's return grey90 color text without any style       \n
                grey90("Hello World", Style = 1 ) = it's return grey90 color text with bold text          \n
                grey90("Hello World", Style = 2 ) = it's return grey90 color text with light text         \n
                grey90("Hello World", Style = 3 ) = it's return grey90 color text with Italicized style   \n
                grey90("Hello World", Style = 4 ) = it's return grey90 color text with UnderLine          \n
                grey90("Hello World", Style = 5 ) = it's return Blinking grey90 color text                \n
        """
        if rgb:
            return (229, 229, 229)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 229, 229, 229,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 229, 229, 229)
                


def grey91( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey91 colored text.\n
        grey91() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey91bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey91("text",bg='grey91') then it's apply the grey91 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey91\n
                    for example : grey91(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey91("Hello World", Style = 0 ) = it's return grey91 color text without any style       \n
                grey91("Hello World", Style = 1 ) = it's return grey91 color text with bold text          \n
                grey91("Hello World", Style = 2 ) = it's return grey91 color text with light text         \n
                grey91("Hello World", Style = 3 ) = it's return grey91 color text with Italicized style   \n
                grey91("Hello World", Style = 4 ) = it's return grey91 color text with UnderLine          \n
                grey91("Hello World", Style = 5 ) = it's return Blinking grey91 color text                \n
        """
        if rgb:
            return (232, 232, 232)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 232, 232, 232,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 232, 232, 232)
                


def grey92( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey92 colored text.\n
        grey92() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey92bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey92("text",bg='grey92') then it's apply the grey92 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey92\n
                    for example : grey92(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey92("Hello World", Style = 0 ) = it's return grey92 color text without any style       \n
                grey92("Hello World", Style = 1 ) = it's return grey92 color text with bold text          \n
                grey92("Hello World", Style = 2 ) = it's return grey92 color text with light text         \n
                grey92("Hello World", Style = 3 ) = it's return grey92 color text with Italicized style   \n
                grey92("Hello World", Style = 4 ) = it's return grey92 color text with UnderLine          \n
                grey92("Hello World", Style = 5 ) = it's return Blinking grey92 color text                \n
        """
        if rgb:
            return (235, 235, 235)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 235, 235, 235,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 235, 235, 235)
                


def grey93( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey93 colored text.\n
        grey93() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey93bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey93("text",bg='grey93') then it's apply the grey93 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey93\n
                    for example : grey93(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey93("Hello World", Style = 0 ) = it's return grey93 color text without any style       \n
                grey93("Hello World", Style = 1 ) = it's return grey93 color text with bold text          \n
                grey93("Hello World", Style = 2 ) = it's return grey93 color text with light text         \n
                grey93("Hello World", Style = 3 ) = it's return grey93 color text with Italicized style   \n
                grey93("Hello World", Style = 4 ) = it's return grey93 color text with UnderLine          \n
                grey93("Hello World", Style = 5 ) = it's return Blinking grey93 color text                \n
        """
        if rgb:
            return (237, 237, 237)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 237, 237, 237,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 237, 237, 237)
                


def grey94( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey94 colored text.\n
        grey94() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey94bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey94("text",bg='grey94') then it's apply the grey94 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey94\n
                    for example : grey94(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey94("Hello World", Style = 0 ) = it's return grey94 color text without any style       \n
                grey94("Hello World", Style = 1 ) = it's return grey94 color text with bold text          \n
                grey94("Hello World", Style = 2 ) = it's return grey94 color text with light text         \n
                grey94("Hello World", Style = 3 ) = it's return grey94 color text with Italicized style   \n
                grey94("Hello World", Style = 4 ) = it's return grey94 color text with UnderLine          \n
                grey94("Hello World", Style = 5 ) = it's return Blinking grey94 color text                \n
        """
        if rgb:
            return (240, 240, 240)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 240, 240, 240,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 240, 240, 240)
                


def grey95( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey95 colored text.\n
        grey95() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey95bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey95("text",bg='grey95') then it's apply the grey95 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey95\n
                    for example : grey95(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey95("Hello World", Style = 0 ) = it's return grey95 color text without any style       \n
                grey95("Hello World", Style = 1 ) = it's return grey95 color text with bold text          \n
                grey95("Hello World", Style = 2 ) = it's return grey95 color text with light text         \n
                grey95("Hello World", Style = 3 ) = it's return grey95 color text with Italicized style   \n
                grey95("Hello World", Style = 4 ) = it's return grey95 color text with UnderLine          \n
                grey95("Hello World", Style = 5 ) = it's return Blinking grey95 color text                \n
        """
        if rgb:
            return (242, 242, 242)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 242, 242, 242,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 242, 242, 242)
                


def grey96( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey96 colored text.\n
        grey96() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey96bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey96("text",bg='grey96') then it's apply the grey96 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey96\n
                    for example : grey96(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey96("Hello World", Style = 0 ) = it's return grey96 color text without any style       \n
                grey96("Hello World", Style = 1 ) = it's return grey96 color text with bold text          \n
                grey96("Hello World", Style = 2 ) = it's return grey96 color text with light text         \n
                grey96("Hello World", Style = 3 ) = it's return grey96 color text with Italicized style   \n
                grey96("Hello World", Style = 4 ) = it's return grey96 color text with UnderLine          \n
                grey96("Hello World", Style = 5 ) = it's return Blinking grey96 color text                \n
        """
        if rgb:
            return (245, 245, 245)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 245, 245, 245,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 245, 245, 245)
                


def grey97( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey97 colored text.\n
        grey97() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey97bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey97("text",bg='grey97') then it's apply the grey97 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey97\n
                    for example : grey97(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey97("Hello World", Style = 0 ) = it's return grey97 color text without any style       \n
                grey97("Hello World", Style = 1 ) = it's return grey97 color text with bold text          \n
                grey97("Hello World", Style = 2 ) = it's return grey97 color text with light text         \n
                grey97("Hello World", Style = 3 ) = it's return grey97 color text with Italicized style   \n
                grey97("Hello World", Style = 4 ) = it's return grey97 color text with UnderLine          \n
                grey97("Hello World", Style = 5 ) = it's return Blinking grey97 color text                \n
        """
        if rgb:
            return (247, 247, 247)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 247, 247, 247,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 247, 247, 247)
                


def grey98( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey98 colored text.\n
        grey98() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey98bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey98("text",bg='grey98') then it's apply the grey98 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey98\n
                    for example : grey98(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey98("Hello World", Style = 0 ) = it's return grey98 color text without any style       \n
                grey98("Hello World", Style = 1 ) = it's return grey98 color text with bold text          \n
                grey98("Hello World", Style = 2 ) = it's return grey98 color text with light text         \n
                grey98("Hello World", Style = 3 ) = it's return grey98 color text with Italicized style   \n
                grey98("Hello World", Style = 4 ) = it's return grey98 color text with UnderLine          \n
                grey98("Hello World", Style = 5 ) = it's return Blinking grey98 color text                \n
        """
        if rgb:
            return (250, 250, 250)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 250, 250, 250,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 250, 250, 250)
                


def grey99( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey99 colored text.\n
        grey99() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey99bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey99("text",bg='grey99') then it's apply the grey99 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey99\n
                    for example : grey99(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey99("Hello World", Style = 0 ) = it's return grey99 color text without any style       \n
                grey99("Hello World", Style = 1 ) = it's return grey99 color text with bold text          \n
                grey99("Hello World", Style = 2 ) = it's return grey99 color text with light text         \n
                grey99("Hello World", Style = 3 ) = it's return grey99 color text with Italicized style   \n
                grey99("Hello World", Style = 4 ) = it's return grey99 color text with UnderLine          \n
                grey99("Hello World", Style = 5 ) = it's return Blinking grey99 color text                \n
        """
        if rgb:
            return (252, 252, 252)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 252, 252, 252,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 252, 252, 252)
                


def grey100_white( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the grey100_white colored text.\n
        grey100_white() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use grey100_whitebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: grey100_white("text",bg='grey100_white') then it's apply the grey100_white color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of grey100_white\n
                    for example : grey100_white(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                grey100_white("Hello World", Style = 0 ) = it's return grey100_white color text without any style       \n
                grey100_white("Hello World", Style = 1 ) = it's return grey100_white color text with bold text          \n
                grey100_white("Hello World", Style = 2 ) = it's return grey100_white color text with light text         \n
                grey100_white("Hello World", Style = 3 ) = it's return grey100_white color text with Italicized style   \n
                grey100_white("Hello World", Style = 4 ) = it's return grey100_white color text with UnderLine          \n
                grey100_white("Hello World", Style = 5 ) = it's return Blinking grey100_white color text                \n
        """
        if rgb:
            return (255, 255, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 255, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 255, 255)
                


def dark_slate_grey( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the dark_slate_grey colored text.\n
        dark_slate_grey() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use dark_slate_greybg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: dark_slate_grey("text",bg='dark_slate_grey') then it's apply the dark_slate_grey color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of dark_slate_grey\n
                    for example : dark_slate_grey(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                dark_slate_grey("Hello World", Style = 0 ) = it's return dark_slate_grey color text without any style       \n
                dark_slate_grey("Hello World", Style = 1 ) = it's return dark_slate_grey color text with bold text          \n
                dark_slate_grey("Hello World", Style = 2 ) = it's return dark_slate_grey color text with light text         \n
                dark_slate_grey("Hello World", Style = 3 ) = it's return dark_slate_grey color text with Italicized style   \n
                dark_slate_grey("Hello World", Style = 4 ) = it's return dark_slate_grey color text with UnderLine          \n
                dark_slate_grey("Hello World", Style = 5 ) = it's return Blinking dark_slate_grey color text                \n
        """
        if rgb:
            return (47, 79, 79)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 47, 79, 79,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 47, 79, 79)
                


def dim_grey( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the dim_grey colored text.\n
        dim_grey() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use dim_greybg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: dim_grey("text",bg='dim_grey') then it's apply the dim_grey color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of dim_grey\n
                    for example : dim_grey(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                dim_grey("Hello World", Style = 0 ) = it's return dim_grey color text without any style       \n
                dim_grey("Hello World", Style = 1 ) = it's return dim_grey color text with bold text          \n
                dim_grey("Hello World", Style = 2 ) = it's return dim_grey color text with light text         \n
                dim_grey("Hello World", Style = 3 ) = it's return dim_grey color text with Italicized style   \n
                dim_grey("Hello World", Style = 4 ) = it's return dim_grey color text with UnderLine          \n
                dim_grey("Hello World", Style = 5 ) = it's return Blinking dim_grey color text                \n
        """
        if rgb:
            return (84, 84, 84)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 84, 84, 84,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 84, 84, 84)
                


def light_grey( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the light_grey colored text.\n
        light_grey() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use light_greybg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: light_grey("text",bg='light_grey') then it's apply the light_grey color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of light_grey\n
                    for example : light_grey(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                light_grey("Hello World", Style = 0 ) = it's return light_grey color text without any style       \n
                light_grey("Hello World", Style = 1 ) = it's return light_grey color text with bold text          \n
                light_grey("Hello World", Style = 2 ) = it's return light_grey color text with light text         \n
                light_grey("Hello World", Style = 3 ) = it's return light_grey color text with Italicized style   \n
                light_grey("Hello World", Style = 4 ) = it's return light_grey color text with UnderLine          \n
                light_grey("Hello World", Style = 5 ) = it's return Blinking light_grey color text                \n
        """
        if rgb:
            return (219, 219, 112)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 219, 219, 112,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 219, 219, 112)
                


def very_light_grey( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the very_light_grey colored text.\n
        very_light_grey() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use very_light_greybg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: very_light_grey("text",bg='very_light_grey') then it's apply the very_light_grey color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of very_light_grey\n
                    for example : very_light_grey(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                very_light_grey("Hello World", Style = 0 ) = it's return very_light_grey color text without any style       \n
                very_light_grey("Hello World", Style = 1 ) = it's return very_light_grey color text with bold text          \n
                very_light_grey("Hello World", Style = 2 ) = it's return very_light_grey color text with light text         \n
                very_light_grey("Hello World", Style = 3 ) = it's return very_light_grey color text with Italicized style   \n
                very_light_grey("Hello World", Style = 4 ) = it's return very_light_grey color text with UnderLine          \n
                very_light_grey("Hello World", Style = 5 ) = it's return Blinking very_light_grey color text                \n
        """
        if rgb:
            return (205, 205, 205)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 205, 205,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 205, 205)
                


def free_speech_grey( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the free_speech_grey colored text.\n
        free_speech_grey() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use free_speech_greybg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: free_speech_grey("text",bg='free_speech_grey') then it's apply the free_speech_grey color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of free_speech_grey\n
                    for example : free_speech_grey(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                free_speech_grey("Hello World", Style = 0 ) = it's return free_speech_grey color text without any style       \n
                free_speech_grey("Hello World", Style = 1 ) = it's return free_speech_grey color text with bold text          \n
                free_speech_grey("Hello World", Style = 2 ) = it's return free_speech_grey color text with light text         \n
                free_speech_grey("Hello World", Style = 3 ) = it's return free_speech_grey color text with Italicized style   \n
                free_speech_grey("Hello World", Style = 4 ) = it's return free_speech_grey color text with UnderLine          \n
                free_speech_grey("Hello World", Style = 5 ) = it's return Blinking free_speech_grey color text                \n
        """
        if rgb:
            return (99, 86, 136)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 99, 86, 136,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 99, 86, 136)
                


def aliceblue( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the aliceblue colored text.\n
        aliceblue() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use alicebluebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: aliceblue("text",bg='aliceblue') then it's apply the aliceblue color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of aliceblue\n
                    for example : aliceblue(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                aliceblue("Hello World", Style = 0 ) = it's return aliceblue color text without any style       \n
                aliceblue("Hello World", Style = 1 ) = it's return aliceblue color text with bold text          \n
                aliceblue("Hello World", Style = 2 ) = it's return aliceblue color text with light text         \n
                aliceblue("Hello World", Style = 3 ) = it's return aliceblue color text with Italicized style   \n
                aliceblue("Hello World", Style = 4 ) = it's return aliceblue color text with UnderLine          \n
                aliceblue("Hello World", Style = 5 ) = it's return Blinking aliceblue color text                \n
        """
        if rgb:
            return (240, 248, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 240, 248, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 240, 248, 255)
                


def blueviolet( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the blueviolet colored text.\n
        blueviolet() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use bluevioletbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: blueviolet("text",bg='blueviolet') then it's apply the blueviolet color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of blueviolet\n
                    for example : blueviolet(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                blueviolet("Hello World", Style = 0 ) = it's return blueviolet color text without any style       \n
                blueviolet("Hello World", Style = 1 ) = it's return blueviolet color text with bold text          \n
                blueviolet("Hello World", Style = 2 ) = it's return blueviolet color text with light text         \n
                blueviolet("Hello World", Style = 3 ) = it's return blueviolet color text with Italicized style   \n
                blueviolet("Hello World", Style = 4 ) = it's return blueviolet color text with UnderLine          \n
                blueviolet("Hello World", Style = 5 ) = it's return Blinking blueviolet color text                \n
        """
        if rgb:
            return (138, 43, 226)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 138, 43, 226,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 138, 43, 226)
                


def cadet_blue( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the cadet_blue colored text.\n
        cadet_blue() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use cadet_bluebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: cadet_blue("text",bg='cadet_blue') then it's apply the cadet_blue color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of cadet_blue\n
                    for example : cadet_blue(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                cadet_blue("Hello World", Style = 0 ) = it's return cadet_blue color text without any style       \n
                cadet_blue("Hello World", Style = 1 ) = it's return cadet_blue color text with bold text          \n
                cadet_blue("Hello World", Style = 2 ) = it's return cadet_blue color text with light text         \n
                cadet_blue("Hello World", Style = 3 ) = it's return cadet_blue color text with Italicized style   \n
                cadet_blue("Hello World", Style = 4 ) = it's return cadet_blue color text with UnderLine          \n
                cadet_blue("Hello World", Style = 5 ) = it's return Blinking cadet_blue color text                \n
        """
        if rgb:
            return (95, 159, 159)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 95, 159, 159,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 95, 159, 159)
                


def cadetblue( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the cadetblue colored text.\n
        cadetblue() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use cadetbluebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: cadetblue("text",bg='cadetblue') then it's apply the cadetblue color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of cadetblue\n
                    for example : cadetblue(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                cadetblue("Hello World", Style = 0 ) = it's return cadetblue color text without any style       \n
                cadetblue("Hello World", Style = 1 ) = it's return cadetblue color text with bold text          \n
                cadetblue("Hello World", Style = 2 ) = it's return cadetblue color text with light text         \n
                cadetblue("Hello World", Style = 3 ) = it's return cadetblue color text with Italicized style   \n
                cadetblue("Hello World", Style = 4 ) = it's return cadetblue color text with UnderLine          \n
                cadetblue("Hello World", Style = 5 ) = it's return Blinking cadetblue color text                \n
        """
        if rgb:
            return (95, 158, 160)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 95, 158, 160,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 95, 158, 160)
                


def cadetblue( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the cadetblue colored text.\n
        cadetblue() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use cadetbluebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: cadetblue("text",bg='cadetblue') then it's apply the cadetblue color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of cadetblue\n
                    for example : cadetblue(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                cadetblue("Hello World", Style = 0 ) = it's return cadetblue color text without any style       \n
                cadetblue("Hello World", Style = 1 ) = it's return cadetblue color text with bold text          \n
                cadetblue("Hello World", Style = 2 ) = it's return cadetblue color text with light text         \n
                cadetblue("Hello World", Style = 3 ) = it's return cadetblue color text with Italicized style   \n
                cadetblue("Hello World", Style = 4 ) = it's return cadetblue color text with UnderLine          \n
                cadetblue("Hello World", Style = 5 ) = it's return Blinking cadetblue color text                \n
        """
        if rgb:
            return (95, 158, 160)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 95, 158, 160,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 95, 158, 160)
                


def cadetblue1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the cadetblue1 colored text.\n
        cadetblue1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use cadetblue1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: cadetblue1("text",bg='cadetblue1') then it's apply the cadetblue1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of cadetblue1\n
                    for example : cadetblue1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                cadetblue1("Hello World", Style = 0 ) = it's return cadetblue1 color text without any style       \n
                cadetblue1("Hello World", Style = 1 ) = it's return cadetblue1 color text with bold text          \n
                cadetblue1("Hello World", Style = 2 ) = it's return cadetblue1 color text with light text         \n
                cadetblue1("Hello World", Style = 3 ) = it's return cadetblue1 color text with Italicized style   \n
                cadetblue1("Hello World", Style = 4 ) = it's return cadetblue1 color text with UnderLine          \n
                cadetblue1("Hello World", Style = 5 ) = it's return Blinking cadetblue1 color text                \n
        """
        if rgb:
            return (152, 245, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 152, 245, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 152, 245, 255)
                


def cadetblue2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the cadetblue2 colored text.\n
        cadetblue2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use cadetblue2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: cadetblue2("text",bg='cadetblue2') then it's apply the cadetblue2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of cadetblue2\n
                    for example : cadetblue2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                cadetblue2("Hello World", Style = 0 ) = it's return cadetblue2 color text without any style       \n
                cadetblue2("Hello World", Style = 1 ) = it's return cadetblue2 color text with bold text          \n
                cadetblue2("Hello World", Style = 2 ) = it's return cadetblue2 color text with light text         \n
                cadetblue2("Hello World", Style = 3 ) = it's return cadetblue2 color text with Italicized style   \n
                cadetblue2("Hello World", Style = 4 ) = it's return cadetblue2 color text with UnderLine          \n
                cadetblue2("Hello World", Style = 5 ) = it's return Blinking cadetblue2 color text                \n
        """
        if rgb:
            return (142, 229, 238)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 142, 229, 238,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 142, 229, 238)
                


def cadetblue3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the cadetblue3 colored text.\n
        cadetblue3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use cadetblue3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: cadetblue3("text",bg='cadetblue3') then it's apply the cadetblue3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of cadetblue3\n
                    for example : cadetblue3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                cadetblue3("Hello World", Style = 0 ) = it's return cadetblue3 color text without any style       \n
                cadetblue3("Hello World", Style = 1 ) = it's return cadetblue3 color text with bold text          \n
                cadetblue3("Hello World", Style = 2 ) = it's return cadetblue3 color text with light text         \n
                cadetblue3("Hello World", Style = 3 ) = it's return cadetblue3 color text with Italicized style   \n
                cadetblue3("Hello World", Style = 4 ) = it's return cadetblue3 color text with UnderLine          \n
                cadetblue3("Hello World", Style = 5 ) = it's return Blinking cadetblue3 color text                \n
        """
        if rgb:
            return (122, 197, 205)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 122, 197, 205,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 122, 197, 205)
                


def cadetblue4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the cadetblue4 colored text.\n
        cadetblue4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use cadetblue4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: cadetblue4("text",bg='cadetblue4') then it's apply the cadetblue4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of cadetblue4\n
                    for example : cadetblue4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                cadetblue4("Hello World", Style = 0 ) = it's return cadetblue4 color text without any style       \n
                cadetblue4("Hello World", Style = 1 ) = it's return cadetblue4 color text with bold text          \n
                cadetblue4("Hello World", Style = 2 ) = it's return cadetblue4 color text with light text         \n
                cadetblue4("Hello World", Style = 3 ) = it's return cadetblue4 color text with Italicized style   \n
                cadetblue4("Hello World", Style = 4 ) = it's return cadetblue4 color text with UnderLine          \n
                cadetblue4("Hello World", Style = 5 ) = it's return Blinking cadetblue4 color text                \n
        """
        if rgb:
            return (83, 134, 139)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 83, 134, 139,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 83, 134, 139)
                


def corn_flower_blue( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the corn_flower_blue colored text.\n
        corn_flower_blue() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use corn_flower_bluebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: corn_flower_blue("text",bg='corn_flower_blue') then it's apply the corn_flower_blue color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of corn_flower_blue\n
                    for example : corn_flower_blue(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                corn_flower_blue("Hello World", Style = 0 ) = it's return corn_flower_blue color text without any style       \n
                corn_flower_blue("Hello World", Style = 1 ) = it's return corn_flower_blue color text with bold text          \n
                corn_flower_blue("Hello World", Style = 2 ) = it's return corn_flower_blue color text with light text         \n
                corn_flower_blue("Hello World", Style = 3 ) = it's return corn_flower_blue color text with Italicized style   \n
                corn_flower_blue("Hello World", Style = 4 ) = it's return corn_flower_blue color text with UnderLine          \n
                corn_flower_blue("Hello World", Style = 5 ) = it's return Blinking corn_flower_blue color text                \n
        """
        if rgb:
            return (66, 66, 111)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 66, 66, 111,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 66, 66, 111)
                


def cornflowerblue( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the cornflowerblue colored text.\n
        cornflowerblue() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use cornflowerbluebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: cornflowerblue("text",bg='cornflowerblue') then it's apply the cornflowerblue color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of cornflowerblue\n
                    for example : cornflowerblue(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                cornflowerblue("Hello World", Style = 0 ) = it's return cornflowerblue color text without any style       \n
                cornflowerblue("Hello World", Style = 1 ) = it's return cornflowerblue color text with bold text          \n
                cornflowerblue("Hello World", Style = 2 ) = it's return cornflowerblue color text with light text         \n
                cornflowerblue("Hello World", Style = 3 ) = it's return cornflowerblue color text with Italicized style   \n
                cornflowerblue("Hello World", Style = 4 ) = it's return cornflowerblue color text with UnderLine          \n
                cornflowerblue("Hello World", Style = 5 ) = it's return Blinking cornflowerblue color text                \n
        """
        if rgb:
            return (100, 149, 237)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 100, 149, 237,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 100, 149, 237)
                


def darkslateblue( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darkslateblue colored text.\n
        darkslateblue() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darkslatebluebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darkslateblue("text",bg='darkslateblue') then it's apply the darkslateblue color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darkslateblue\n
                    for example : darkslateblue(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darkslateblue("Hello World", Style = 0 ) = it's return darkslateblue color text without any style       \n
                darkslateblue("Hello World", Style = 1 ) = it's return darkslateblue color text with bold text          \n
                darkslateblue("Hello World", Style = 2 ) = it's return darkslateblue color text with light text         \n
                darkslateblue("Hello World", Style = 3 ) = it's return darkslateblue color text with Italicized style   \n
                darkslateblue("Hello World", Style = 4 ) = it's return darkslateblue color text with UnderLine          \n
                darkslateblue("Hello World", Style = 5 ) = it's return Blinking darkslateblue color text                \n
        """
        if rgb:
            return (72, 61, 139)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 72, 61, 139,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 72, 61, 139)
                


def darkturquoise( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darkturquoise colored text.\n
        darkturquoise() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darkturquoisebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darkturquoise("text",bg='darkturquoise') then it's apply the darkturquoise color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darkturquoise\n
                    for example : darkturquoise(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darkturquoise("Hello World", Style = 0 ) = it's return darkturquoise color text without any style       \n
                darkturquoise("Hello World", Style = 1 ) = it's return darkturquoise color text with bold text          \n
                darkturquoise("Hello World", Style = 2 ) = it's return darkturquoise color text with light text         \n
                darkturquoise("Hello World", Style = 3 ) = it's return darkturquoise color text with Italicized style   \n
                darkturquoise("Hello World", Style = 4 ) = it's return darkturquoise color text with UnderLine          \n
                darkturquoise("Hello World", Style = 5 ) = it's return Blinking darkturquoise color text                \n
        """
        if rgb:
            return (0, 206, 209)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 206, 209,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 206, 209)
                


def deepskyblue( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the deepskyblue colored text.\n
        deepskyblue() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use deepskybluebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: deepskyblue("text",bg='deepskyblue') then it's apply the deepskyblue color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of deepskyblue\n
                    for example : deepskyblue(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                deepskyblue("Hello World", Style = 0 ) = it's return deepskyblue color text without any style       \n
                deepskyblue("Hello World", Style = 1 ) = it's return deepskyblue color text with bold text          \n
                deepskyblue("Hello World", Style = 2 ) = it's return deepskyblue color text with light text         \n
                deepskyblue("Hello World", Style = 3 ) = it's return deepskyblue color text with Italicized style   \n
                deepskyblue("Hello World", Style = 4 ) = it's return deepskyblue color text with UnderLine          \n
                deepskyblue("Hello World", Style = 5 ) = it's return Blinking deepskyblue color text                \n
        """
        if rgb:
            return (0, 191, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 191, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 191, 255)
                


def deepskyblue1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the deepskyblue1 colored text.\n
        deepskyblue1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use deepskyblue1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: deepskyblue1("text",bg='deepskyblue1') then it's apply the deepskyblue1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of deepskyblue1\n
                    for example : deepskyblue1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                deepskyblue1("Hello World", Style = 0 ) = it's return deepskyblue1 color text without any style       \n
                deepskyblue1("Hello World", Style = 1 ) = it's return deepskyblue1 color text with bold text          \n
                deepskyblue1("Hello World", Style = 2 ) = it's return deepskyblue1 color text with light text         \n
                deepskyblue1("Hello World", Style = 3 ) = it's return deepskyblue1 color text with Italicized style   \n
                deepskyblue1("Hello World", Style = 4 ) = it's return deepskyblue1 color text with UnderLine          \n
                deepskyblue1("Hello World", Style = 5 ) = it's return Blinking deepskyblue1 color text                \n
        """
        if rgb:
            return (0, 191, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 191, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 191, 255)
                


def deepskyblue2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the deepskyblue2 colored text.\n
        deepskyblue2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use deepskyblue2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: deepskyblue2("text",bg='deepskyblue2') then it's apply the deepskyblue2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of deepskyblue2\n
                    for example : deepskyblue2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                deepskyblue2("Hello World", Style = 0 ) = it's return deepskyblue2 color text without any style       \n
                deepskyblue2("Hello World", Style = 1 ) = it's return deepskyblue2 color text with bold text          \n
                deepskyblue2("Hello World", Style = 2 ) = it's return deepskyblue2 color text with light text         \n
                deepskyblue2("Hello World", Style = 3 ) = it's return deepskyblue2 color text with Italicized style   \n
                deepskyblue2("Hello World", Style = 4 ) = it's return deepskyblue2 color text with UnderLine          \n
                deepskyblue2("Hello World", Style = 5 ) = it's return Blinking deepskyblue2 color text                \n
        """
        if rgb:
            return (0, 178, 238)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 178, 238,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 178, 238)
                


def deepskyblue3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the deepskyblue3 colored text.\n
        deepskyblue3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use deepskyblue3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: deepskyblue3("text",bg='deepskyblue3') then it's apply the deepskyblue3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of deepskyblue3\n
                    for example : deepskyblue3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                deepskyblue3("Hello World", Style = 0 ) = it's return deepskyblue3 color text without any style       \n
                deepskyblue3("Hello World", Style = 1 ) = it's return deepskyblue3 color text with bold text          \n
                deepskyblue3("Hello World", Style = 2 ) = it's return deepskyblue3 color text with light text         \n
                deepskyblue3("Hello World", Style = 3 ) = it's return deepskyblue3 color text with Italicized style   \n
                deepskyblue3("Hello World", Style = 4 ) = it's return deepskyblue3 color text with UnderLine          \n
                deepskyblue3("Hello World", Style = 5 ) = it's return Blinking deepskyblue3 color text                \n
        """
        if rgb:
            return (0, 154, 205)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 154, 205,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 154, 205)
                


def deepskyblue4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the deepskyblue4 colored text.\n
        deepskyblue4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use deepskyblue4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: deepskyblue4("text",bg='deepskyblue4') then it's apply the deepskyblue4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of deepskyblue4\n
                    for example : deepskyblue4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                deepskyblue4("Hello World", Style = 0 ) = it's return deepskyblue4 color text without any style       \n
                deepskyblue4("Hello World", Style = 1 ) = it's return deepskyblue4 color text with bold text          \n
                deepskyblue4("Hello World", Style = 2 ) = it's return deepskyblue4 color text with light text         \n
                deepskyblue4("Hello World", Style = 3 ) = it's return deepskyblue4 color text with Italicized style   \n
                deepskyblue4("Hello World", Style = 4 ) = it's return deepskyblue4 color text with UnderLine          \n
                deepskyblue4("Hello World", Style = 5 ) = it's return Blinking deepskyblue4 color text                \n
        """
        if rgb:
            return (0, 104, 139)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 104, 139,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 104, 139)
                


def dodgerblue( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the dodgerblue colored text.\n
        dodgerblue() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use dodgerbluebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: dodgerblue("text",bg='dodgerblue') then it's apply the dodgerblue color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of dodgerblue\n
                    for example : dodgerblue(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                dodgerblue("Hello World", Style = 0 ) = it's return dodgerblue color text without any style       \n
                dodgerblue("Hello World", Style = 1 ) = it's return dodgerblue color text with bold text          \n
                dodgerblue("Hello World", Style = 2 ) = it's return dodgerblue color text with light text         \n
                dodgerblue("Hello World", Style = 3 ) = it's return dodgerblue color text with Italicized style   \n
                dodgerblue("Hello World", Style = 4 ) = it's return dodgerblue color text with UnderLine          \n
                dodgerblue("Hello World", Style = 5 ) = it's return Blinking dodgerblue color text                \n
        """
        if rgb:
            return (30, 144, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 30, 144, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 30, 144, 255)
                


def dodgerblue1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the dodgerblue1 colored text.\n
        dodgerblue1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use dodgerblue1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: dodgerblue1("text",bg='dodgerblue1') then it's apply the dodgerblue1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of dodgerblue1\n
                    for example : dodgerblue1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                dodgerblue1("Hello World", Style = 0 ) = it's return dodgerblue1 color text without any style       \n
                dodgerblue1("Hello World", Style = 1 ) = it's return dodgerblue1 color text with bold text          \n
                dodgerblue1("Hello World", Style = 2 ) = it's return dodgerblue1 color text with light text         \n
                dodgerblue1("Hello World", Style = 3 ) = it's return dodgerblue1 color text with Italicized style   \n
                dodgerblue1("Hello World", Style = 4 ) = it's return dodgerblue1 color text with UnderLine          \n
                dodgerblue1("Hello World", Style = 5 ) = it's return Blinking dodgerblue1 color text                \n
        """
        if rgb:
            return (30, 144, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 30, 144, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 30, 144, 255)
                


def dodgerblue2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the dodgerblue2 colored text.\n
        dodgerblue2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use dodgerblue2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: dodgerblue2("text",bg='dodgerblue2') then it's apply the dodgerblue2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of dodgerblue2\n
                    for example : dodgerblue2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                dodgerblue2("Hello World", Style = 0 ) = it's return dodgerblue2 color text without any style       \n
                dodgerblue2("Hello World", Style = 1 ) = it's return dodgerblue2 color text with bold text          \n
                dodgerblue2("Hello World", Style = 2 ) = it's return dodgerblue2 color text with light text         \n
                dodgerblue2("Hello World", Style = 3 ) = it's return dodgerblue2 color text with Italicized style   \n
                dodgerblue2("Hello World", Style = 4 ) = it's return dodgerblue2 color text with UnderLine          \n
                dodgerblue2("Hello World", Style = 5 ) = it's return Blinking dodgerblue2 color text                \n
        """
        if rgb:
            return (28, 134, 238)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 28, 134, 238,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 28, 134, 238)
                


def dodgerblue3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the dodgerblue3 colored text.\n
        dodgerblue3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use dodgerblue3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: dodgerblue3("text",bg='dodgerblue3') then it's apply the dodgerblue3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of dodgerblue3\n
                    for example : dodgerblue3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                dodgerblue3("Hello World", Style = 0 ) = it's return dodgerblue3 color text without any style       \n
                dodgerblue3("Hello World", Style = 1 ) = it's return dodgerblue3 color text with bold text          \n
                dodgerblue3("Hello World", Style = 2 ) = it's return dodgerblue3 color text with light text         \n
                dodgerblue3("Hello World", Style = 3 ) = it's return dodgerblue3 color text with Italicized style   \n
                dodgerblue3("Hello World", Style = 4 ) = it's return dodgerblue3 color text with UnderLine          \n
                dodgerblue3("Hello World", Style = 5 ) = it's return Blinking dodgerblue3 color text                \n
        """
        if rgb:
            return (24, 116, 205)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 24, 116, 205,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 24, 116, 205)
                


def dodgerblue4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the dodgerblue4 colored text.\n
        dodgerblue4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use dodgerblue4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: dodgerblue4("text",bg='dodgerblue4') then it's apply the dodgerblue4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of dodgerblue4\n
                    for example : dodgerblue4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                dodgerblue4("Hello World", Style = 0 ) = it's return dodgerblue4 color text without any style       \n
                dodgerblue4("Hello World", Style = 1 ) = it's return dodgerblue4 color text with bold text          \n
                dodgerblue4("Hello World", Style = 2 ) = it's return dodgerblue4 color text with light text         \n
                dodgerblue4("Hello World", Style = 3 ) = it's return dodgerblue4 color text with Italicized style   \n
                dodgerblue4("Hello World", Style = 4 ) = it's return dodgerblue4 color text with UnderLine          \n
                dodgerblue4("Hello World", Style = 5 ) = it's return Blinking dodgerblue4 color text                \n
        """
        if rgb:
            return (16, 78, 139)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 16, 78, 139,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 16, 78, 139)
                


def lightblue( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightblue colored text.\n
        lightblue() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightbluebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightblue("text",bg='lightblue') then it's apply the lightblue color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightblue\n
                    for example : lightblue(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightblue("Hello World", Style = 0 ) = it's return lightblue color text without any style       \n
                lightblue("Hello World", Style = 1 ) = it's return lightblue color text with bold text          \n
                lightblue("Hello World", Style = 2 ) = it's return lightblue color text with light text         \n
                lightblue("Hello World", Style = 3 ) = it's return lightblue color text with Italicized style   \n
                lightblue("Hello World", Style = 4 ) = it's return lightblue color text with UnderLine          \n
                lightblue("Hello World", Style = 5 ) = it's return Blinking lightblue color text                \n
        """
        if rgb:
            return (173, 216, 230)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 173, 216, 230,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 173, 216, 230)
                


def lightblue1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightblue1 colored text.\n
        lightblue1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightblue1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightblue1("text",bg='lightblue1') then it's apply the lightblue1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightblue1\n
                    for example : lightblue1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightblue1("Hello World", Style = 0 ) = it's return lightblue1 color text without any style       \n
                lightblue1("Hello World", Style = 1 ) = it's return lightblue1 color text with bold text          \n
                lightblue1("Hello World", Style = 2 ) = it's return lightblue1 color text with light text         \n
                lightblue1("Hello World", Style = 3 ) = it's return lightblue1 color text with Italicized style   \n
                lightblue1("Hello World", Style = 4 ) = it's return lightblue1 color text with UnderLine          \n
                lightblue1("Hello World", Style = 5 ) = it's return Blinking lightblue1 color text                \n
        """
        if rgb:
            return (191, 239, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 191, 239, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 191, 239, 255)
                


def lightblue2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightblue2 colored text.\n
        lightblue2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightblue2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightblue2("text",bg='lightblue2') then it's apply the lightblue2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightblue2\n
                    for example : lightblue2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightblue2("Hello World", Style = 0 ) = it's return lightblue2 color text without any style       \n
                lightblue2("Hello World", Style = 1 ) = it's return lightblue2 color text with bold text          \n
                lightblue2("Hello World", Style = 2 ) = it's return lightblue2 color text with light text         \n
                lightblue2("Hello World", Style = 3 ) = it's return lightblue2 color text with Italicized style   \n
                lightblue2("Hello World", Style = 4 ) = it's return lightblue2 color text with UnderLine          \n
                lightblue2("Hello World", Style = 5 ) = it's return Blinking lightblue2 color text                \n
        """
        if rgb:
            return (178, 223, 238)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 178, 223, 238,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 178, 223, 238)
                


def lightblue3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightblue3 colored text.\n
        lightblue3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightblue3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightblue3("text",bg='lightblue3') then it's apply the lightblue3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightblue3\n
                    for example : lightblue3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightblue3("Hello World", Style = 0 ) = it's return lightblue3 color text without any style       \n
                lightblue3("Hello World", Style = 1 ) = it's return lightblue3 color text with bold text          \n
                lightblue3("Hello World", Style = 2 ) = it's return lightblue3 color text with light text         \n
                lightblue3("Hello World", Style = 3 ) = it's return lightblue3 color text with Italicized style   \n
                lightblue3("Hello World", Style = 4 ) = it's return lightblue3 color text with UnderLine          \n
                lightblue3("Hello World", Style = 5 ) = it's return Blinking lightblue3 color text                \n
        """
        if rgb:
            return (154, 192, 205)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 154, 192, 205,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 154, 192, 205)
                


def lightblue4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightblue4 colored text.\n
        lightblue4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightblue4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightblue4("text",bg='lightblue4') then it's apply the lightblue4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightblue4\n
                    for example : lightblue4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightblue4("Hello World", Style = 0 ) = it's return lightblue4 color text without any style       \n
                lightblue4("Hello World", Style = 1 ) = it's return lightblue4 color text with bold text          \n
                lightblue4("Hello World", Style = 2 ) = it's return lightblue4 color text with light text         \n
                lightblue4("Hello World", Style = 3 ) = it's return lightblue4 color text with Italicized style   \n
                lightblue4("Hello World", Style = 4 ) = it's return lightblue4 color text with UnderLine          \n
                lightblue4("Hello World", Style = 5 ) = it's return Blinking lightblue4 color text                \n
        """
        if rgb:
            return (104, 131, 139)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 104, 131, 139,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 104, 131, 139)
                


def lightcyan( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightcyan colored text.\n
        lightcyan() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightcyanbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightcyan("text",bg='lightcyan') then it's apply the lightcyan color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightcyan\n
                    for example : lightcyan(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightcyan("Hello World", Style = 0 ) = it's return lightcyan color text without any style       \n
                lightcyan("Hello World", Style = 1 ) = it's return lightcyan color text with bold text          \n
                lightcyan("Hello World", Style = 2 ) = it's return lightcyan color text with light text         \n
                lightcyan("Hello World", Style = 3 ) = it's return lightcyan color text with Italicized style   \n
                lightcyan("Hello World", Style = 4 ) = it's return lightcyan color text with UnderLine          \n
                lightcyan("Hello World", Style = 5 ) = it's return Blinking lightcyan color text                \n
        """
        if rgb:
            return (224, 255, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 224, 255, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 224, 255, 255)
                


def lightcyan1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightcyan1 colored text.\n
        lightcyan1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightcyan1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightcyan1("text",bg='lightcyan1') then it's apply the lightcyan1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightcyan1\n
                    for example : lightcyan1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightcyan1("Hello World", Style = 0 ) = it's return lightcyan1 color text without any style       \n
                lightcyan1("Hello World", Style = 1 ) = it's return lightcyan1 color text with bold text          \n
                lightcyan1("Hello World", Style = 2 ) = it's return lightcyan1 color text with light text         \n
                lightcyan1("Hello World", Style = 3 ) = it's return lightcyan1 color text with Italicized style   \n
                lightcyan1("Hello World", Style = 4 ) = it's return lightcyan1 color text with UnderLine          \n
                lightcyan1("Hello World", Style = 5 ) = it's return Blinking lightcyan1 color text                \n
        """
        if rgb:
            return (224, 255, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 224, 255, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 224, 255, 255)
                


def lightcyan2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightcyan2 colored text.\n
        lightcyan2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightcyan2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightcyan2("text",bg='lightcyan2') then it's apply the lightcyan2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightcyan2\n
                    for example : lightcyan2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightcyan2("Hello World", Style = 0 ) = it's return lightcyan2 color text without any style       \n
                lightcyan2("Hello World", Style = 1 ) = it's return lightcyan2 color text with bold text          \n
                lightcyan2("Hello World", Style = 2 ) = it's return lightcyan2 color text with light text         \n
                lightcyan2("Hello World", Style = 3 ) = it's return lightcyan2 color text with Italicized style   \n
                lightcyan2("Hello World", Style = 4 ) = it's return lightcyan2 color text with UnderLine          \n
                lightcyan2("Hello World", Style = 5 ) = it's return Blinking lightcyan2 color text                \n
        """
        if rgb:
            return (209, 238, 238)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 209, 238, 238,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 209, 238, 238)
                


def lightcyan3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightcyan3 colored text.\n
        lightcyan3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightcyan3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightcyan3("text",bg='lightcyan3') then it's apply the lightcyan3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightcyan3\n
                    for example : lightcyan3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightcyan3("Hello World", Style = 0 ) = it's return lightcyan3 color text without any style       \n
                lightcyan3("Hello World", Style = 1 ) = it's return lightcyan3 color text with bold text          \n
                lightcyan3("Hello World", Style = 2 ) = it's return lightcyan3 color text with light text         \n
                lightcyan3("Hello World", Style = 3 ) = it's return lightcyan3 color text with Italicized style   \n
                lightcyan3("Hello World", Style = 4 ) = it's return lightcyan3 color text with UnderLine          \n
                lightcyan3("Hello World", Style = 5 ) = it's return Blinking lightcyan3 color text                \n
        """
        if rgb:
            return (180, 205, 205)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 180, 205, 205,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 180, 205, 205)
                


def lightcyan4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightcyan4 colored text.\n
        lightcyan4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightcyan4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightcyan4("text",bg='lightcyan4') then it's apply the lightcyan4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightcyan4\n
                    for example : lightcyan4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightcyan4("Hello World", Style = 0 ) = it's return lightcyan4 color text without any style       \n
                lightcyan4("Hello World", Style = 1 ) = it's return lightcyan4 color text with bold text          \n
                lightcyan4("Hello World", Style = 2 ) = it's return lightcyan4 color text with light text         \n
                lightcyan4("Hello World", Style = 3 ) = it's return lightcyan4 color text with Italicized style   \n
                lightcyan4("Hello World", Style = 4 ) = it's return lightcyan4 color text with UnderLine          \n
                lightcyan4("Hello World", Style = 5 ) = it's return Blinking lightcyan4 color text                \n
        """
        if rgb:
            return (122, 139, 139)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 122, 139, 139,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 122, 139, 139)
                


def lightskyblue( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightskyblue colored text.\n
        lightskyblue() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightskybluebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightskyblue("text",bg='lightskyblue') then it's apply the lightskyblue color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightskyblue\n
                    for example : lightskyblue(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightskyblue("Hello World", Style = 0 ) = it's return lightskyblue color text without any style       \n
                lightskyblue("Hello World", Style = 1 ) = it's return lightskyblue color text with bold text          \n
                lightskyblue("Hello World", Style = 2 ) = it's return lightskyblue color text with light text         \n
                lightskyblue("Hello World", Style = 3 ) = it's return lightskyblue color text with Italicized style   \n
                lightskyblue("Hello World", Style = 4 ) = it's return lightskyblue color text with UnderLine          \n
                lightskyblue("Hello World", Style = 5 ) = it's return Blinking lightskyblue color text                \n
        """
        if rgb:
            return (135, 206, 250)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 135, 206, 250,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 135, 206, 250)
                


def lightskyblue1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightskyblue1 colored text.\n
        lightskyblue1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightskyblue1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightskyblue1("text",bg='lightskyblue1') then it's apply the lightskyblue1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightskyblue1\n
                    for example : lightskyblue1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightskyblue1("Hello World", Style = 0 ) = it's return lightskyblue1 color text without any style       \n
                lightskyblue1("Hello World", Style = 1 ) = it's return lightskyblue1 color text with bold text          \n
                lightskyblue1("Hello World", Style = 2 ) = it's return lightskyblue1 color text with light text         \n
                lightskyblue1("Hello World", Style = 3 ) = it's return lightskyblue1 color text with Italicized style   \n
                lightskyblue1("Hello World", Style = 4 ) = it's return lightskyblue1 color text with UnderLine          \n
                lightskyblue1("Hello World", Style = 5 ) = it's return Blinking lightskyblue1 color text                \n
        """
        if rgb:
            return (176, 226, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 176, 226, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 176, 226, 255)
                


def lightskyblue2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightskyblue2 colored text.\n
        lightskyblue2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightskyblue2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightskyblue2("text",bg='lightskyblue2') then it's apply the lightskyblue2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightskyblue2\n
                    for example : lightskyblue2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightskyblue2("Hello World", Style = 0 ) = it's return lightskyblue2 color text without any style       \n
                lightskyblue2("Hello World", Style = 1 ) = it's return lightskyblue2 color text with bold text          \n
                lightskyblue2("Hello World", Style = 2 ) = it's return lightskyblue2 color text with light text         \n
                lightskyblue2("Hello World", Style = 3 ) = it's return lightskyblue2 color text with Italicized style   \n
                lightskyblue2("Hello World", Style = 4 ) = it's return lightskyblue2 color text with UnderLine          \n
                lightskyblue2("Hello World", Style = 5 ) = it's return Blinking lightskyblue2 color text                \n
        """
        if rgb:
            return (164, 211, 238)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 164, 211, 238,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 164, 211, 238)
                


def lightskyblue3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightskyblue3 colored text.\n
        lightskyblue3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightskyblue3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightskyblue3("text",bg='lightskyblue3') then it's apply the lightskyblue3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightskyblue3\n
                    for example : lightskyblue3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightskyblue3("Hello World", Style = 0 ) = it's return lightskyblue3 color text without any style       \n
                lightskyblue3("Hello World", Style = 1 ) = it's return lightskyblue3 color text with bold text          \n
                lightskyblue3("Hello World", Style = 2 ) = it's return lightskyblue3 color text with light text         \n
                lightskyblue3("Hello World", Style = 3 ) = it's return lightskyblue3 color text with Italicized style   \n
                lightskyblue3("Hello World", Style = 4 ) = it's return lightskyblue3 color text with UnderLine          \n
                lightskyblue3("Hello World", Style = 5 ) = it's return Blinking lightskyblue3 color text                \n
        """
        if rgb:
            return (141, 182, 205)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 141, 182, 205,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 141, 182, 205)
                


def lightskyblue4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightskyblue4 colored text.\n
        lightskyblue4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightskyblue4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightskyblue4("text",bg='lightskyblue4') then it's apply the lightskyblue4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightskyblue4\n
                    for example : lightskyblue4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightskyblue4("Hello World", Style = 0 ) = it's return lightskyblue4 color text without any style       \n
                lightskyblue4("Hello World", Style = 1 ) = it's return lightskyblue4 color text with bold text          \n
                lightskyblue4("Hello World", Style = 2 ) = it's return lightskyblue4 color text with light text         \n
                lightskyblue4("Hello World", Style = 3 ) = it's return lightskyblue4 color text with Italicized style   \n
                lightskyblue4("Hello World", Style = 4 ) = it's return lightskyblue4 color text with UnderLine          \n
                lightskyblue4("Hello World", Style = 5 ) = it's return Blinking lightskyblue4 color text                \n
        """
        if rgb:
            return (96, 123, 139)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 96, 123, 139,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 96, 123, 139)
                


def lightslateblue( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightslateblue colored text.\n
        lightslateblue() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightslatebluebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightslateblue("text",bg='lightslateblue') then it's apply the lightslateblue color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightslateblue\n
                    for example : lightslateblue(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightslateblue("Hello World", Style = 0 ) = it's return lightslateblue color text without any style       \n
                lightslateblue("Hello World", Style = 1 ) = it's return lightslateblue color text with bold text          \n
                lightslateblue("Hello World", Style = 2 ) = it's return lightslateblue color text with light text         \n
                lightslateblue("Hello World", Style = 3 ) = it's return lightslateblue color text with Italicized style   \n
                lightslateblue("Hello World", Style = 4 ) = it's return lightslateblue color text with UnderLine          \n
                lightslateblue("Hello World", Style = 5 ) = it's return Blinking lightslateblue color text                \n
        """
        if rgb:
            return (132, 112, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 132, 112, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 132, 112, 255)
                


def lightsteelblue( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightsteelblue colored text.\n
        lightsteelblue() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightsteelbluebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightsteelblue("text",bg='lightsteelblue') then it's apply the lightsteelblue color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightsteelblue\n
                    for example : lightsteelblue(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightsteelblue("Hello World", Style = 0 ) = it's return lightsteelblue color text without any style       \n
                lightsteelblue("Hello World", Style = 1 ) = it's return lightsteelblue color text with bold text          \n
                lightsteelblue("Hello World", Style = 2 ) = it's return lightsteelblue color text with light text         \n
                lightsteelblue("Hello World", Style = 3 ) = it's return lightsteelblue color text with Italicized style   \n
                lightsteelblue("Hello World", Style = 4 ) = it's return lightsteelblue color text with UnderLine          \n
                lightsteelblue("Hello World", Style = 5 ) = it's return Blinking lightsteelblue color text                \n
        """
        if rgb:
            return (176, 196, 222)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 176, 196, 222,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 176, 196, 222)
                


def lightsteelblue1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightsteelblue1 colored text.\n
        lightsteelblue1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightsteelblue1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightsteelblue1("text",bg='lightsteelblue1') then it's apply the lightsteelblue1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightsteelblue1\n
                    for example : lightsteelblue1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightsteelblue1("Hello World", Style = 0 ) = it's return lightsteelblue1 color text without any style       \n
                lightsteelblue1("Hello World", Style = 1 ) = it's return lightsteelblue1 color text with bold text          \n
                lightsteelblue1("Hello World", Style = 2 ) = it's return lightsteelblue1 color text with light text         \n
                lightsteelblue1("Hello World", Style = 3 ) = it's return lightsteelblue1 color text with Italicized style   \n
                lightsteelblue1("Hello World", Style = 4 ) = it's return lightsteelblue1 color text with UnderLine          \n
                lightsteelblue1("Hello World", Style = 5 ) = it's return Blinking lightsteelblue1 color text                \n
        """
        if rgb:
            return (202, 225, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 202, 225, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 202, 225, 255)
                


def lightsteelblue2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightsteelblue2 colored text.\n
        lightsteelblue2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightsteelblue2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightsteelblue2("text",bg='lightsteelblue2') then it's apply the lightsteelblue2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightsteelblue2\n
                    for example : lightsteelblue2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightsteelblue2("Hello World", Style = 0 ) = it's return lightsteelblue2 color text without any style       \n
                lightsteelblue2("Hello World", Style = 1 ) = it's return lightsteelblue2 color text with bold text          \n
                lightsteelblue2("Hello World", Style = 2 ) = it's return lightsteelblue2 color text with light text         \n
                lightsteelblue2("Hello World", Style = 3 ) = it's return lightsteelblue2 color text with Italicized style   \n
                lightsteelblue2("Hello World", Style = 4 ) = it's return lightsteelblue2 color text with UnderLine          \n
                lightsteelblue2("Hello World", Style = 5 ) = it's return Blinking lightsteelblue2 color text                \n
        """
        if rgb:
            return (188, 210, 238)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 188, 210, 238,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 188, 210, 238)
                


def lightsteelblue3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightsteelblue3 colored text.\n
        lightsteelblue3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightsteelblue3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightsteelblue3("text",bg='lightsteelblue3') then it's apply the lightsteelblue3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightsteelblue3\n
                    for example : lightsteelblue3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightsteelblue3("Hello World", Style = 0 ) = it's return lightsteelblue3 color text without any style       \n
                lightsteelblue3("Hello World", Style = 1 ) = it's return lightsteelblue3 color text with bold text          \n
                lightsteelblue3("Hello World", Style = 2 ) = it's return lightsteelblue3 color text with light text         \n
                lightsteelblue3("Hello World", Style = 3 ) = it's return lightsteelblue3 color text with Italicized style   \n
                lightsteelblue3("Hello World", Style = 4 ) = it's return lightsteelblue3 color text with UnderLine          \n
                lightsteelblue3("Hello World", Style = 5 ) = it's return Blinking lightsteelblue3 color text                \n
        """
        if rgb:
            return (162, 181, 205)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 162, 181, 205,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 162, 181, 205)
                


def lightsteelblue4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightsteelblue4 colored text.\n
        lightsteelblue4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightsteelblue4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightsteelblue4("text",bg='lightsteelblue4') then it's apply the lightsteelblue4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightsteelblue4\n
                    for example : lightsteelblue4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightsteelblue4("Hello World", Style = 0 ) = it's return lightsteelblue4 color text without any style       \n
                lightsteelblue4("Hello World", Style = 1 ) = it's return lightsteelblue4 color text with bold text          \n
                lightsteelblue4("Hello World", Style = 2 ) = it's return lightsteelblue4 color text with light text         \n
                lightsteelblue4("Hello World", Style = 3 ) = it's return lightsteelblue4 color text with Italicized style   \n
                lightsteelblue4("Hello World", Style = 4 ) = it's return lightsteelblue4 color text with UnderLine          \n
                lightsteelblue4("Hello World", Style = 5 ) = it's return Blinking lightsteelblue4 color text                \n
        """
        if rgb:
            return (110, 123, 139)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 110, 123, 139,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 110, 123, 139)
                


def aquamarine( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the aquamarine colored text.\n
        aquamarine() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use aquamarinebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: aquamarine("text",bg='aquamarine') then it's apply the aquamarine color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of aquamarine\n
                    for example : aquamarine(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                aquamarine("Hello World", Style = 0 ) = it's return aquamarine color text without any style       \n
                aquamarine("Hello World", Style = 1 ) = it's return aquamarine color text with bold text          \n
                aquamarine("Hello World", Style = 2 ) = it's return aquamarine color text with light text         \n
                aquamarine("Hello World", Style = 3 ) = it's return aquamarine color text with Italicized style   \n
                aquamarine("Hello World", Style = 4 ) = it's return aquamarine color text with UnderLine          \n
                aquamarine("Hello World", Style = 5 ) = it's return Blinking aquamarine color text                \n
        """
        if rgb:
            return (2, 157, 116)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 2, 157, 116,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 2, 157, 116)
                


def mediumblue( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the mediumblue colored text.\n
        mediumblue() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use mediumbluebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: mediumblue("text",bg='mediumblue') then it's apply the mediumblue color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of mediumblue\n
                    for example : mediumblue(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                mediumblue("Hello World", Style = 0 ) = it's return mediumblue color text without any style       \n
                mediumblue("Hello World", Style = 1 ) = it's return mediumblue color text with bold text          \n
                mediumblue("Hello World", Style = 2 ) = it's return mediumblue color text with light text         \n
                mediumblue("Hello World", Style = 3 ) = it's return mediumblue color text with Italicized style   \n
                mediumblue("Hello World", Style = 4 ) = it's return mediumblue color text with UnderLine          \n
                mediumblue("Hello World", Style = 5 ) = it's return Blinking mediumblue color text                \n
        """
        if rgb:
            return (0, 0, 205)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 0, 205,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 0, 205)
                


def mediumslateblue( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the mediumslateblue colored text.\n
        mediumslateblue() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use mediumslatebluebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: mediumslateblue("text",bg='mediumslateblue') then it's apply the mediumslateblue color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of mediumslateblue\n
                    for example : mediumslateblue(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                mediumslateblue("Hello World", Style = 0 ) = it's return mediumslateblue color text without any style       \n
                mediumslateblue("Hello World", Style = 1 ) = it's return mediumslateblue color text with bold text          \n
                mediumslateblue("Hello World", Style = 2 ) = it's return mediumslateblue color text with light text         \n
                mediumslateblue("Hello World", Style = 3 ) = it's return mediumslateblue color text with Italicized style   \n
                mediumslateblue("Hello World", Style = 4 ) = it's return mediumslateblue color text with UnderLine          \n
                mediumslateblue("Hello World", Style = 5 ) = it's return Blinking mediumslateblue color text                \n
        """
        if rgb:
            return (123, 104, 238)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 123, 104, 238,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 123, 104, 238)
                


def mediumturquoise( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the mediumturquoise colored text.\n
        mediumturquoise() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use mediumturquoisebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: mediumturquoise("text",bg='mediumturquoise') then it's apply the mediumturquoise color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of mediumturquoise\n
                    for example : mediumturquoise(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                mediumturquoise("Hello World", Style = 0 ) = it's return mediumturquoise color text without any style       \n
                mediumturquoise("Hello World", Style = 1 ) = it's return mediumturquoise color text with bold text          \n
                mediumturquoise("Hello World", Style = 2 ) = it's return mediumturquoise color text with light text         \n
                mediumturquoise("Hello World", Style = 3 ) = it's return mediumturquoise color text with Italicized style   \n
                mediumturquoise("Hello World", Style = 4 ) = it's return mediumturquoise color text with UnderLine          \n
                mediumturquoise("Hello World", Style = 5 ) = it's return Blinking mediumturquoise color text                \n
        """
        if rgb:
            return (72, 209, 204)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 72, 209, 204,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 72, 209, 204)
                


def midnightblue( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the midnightblue colored text.\n
        midnightblue() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use midnightbluebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: midnightblue("text",bg='midnightblue') then it's apply the midnightblue color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of midnightblue\n
                    for example : midnightblue(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                midnightblue("Hello World", Style = 0 ) = it's return midnightblue color text without any style       \n
                midnightblue("Hello World", Style = 1 ) = it's return midnightblue color text with bold text          \n
                midnightblue("Hello World", Style = 2 ) = it's return midnightblue color text with light text         \n
                midnightblue("Hello World", Style = 3 ) = it's return midnightblue color text with Italicized style   \n
                midnightblue("Hello World", Style = 4 ) = it's return midnightblue color text with UnderLine          \n
                midnightblue("Hello World", Style = 5 ) = it's return Blinking midnightblue color text                \n
        """
        if rgb:
            return (25, 25, 112)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 25, 25, 112,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 25, 25, 112)
                


def navyblue( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the navyblue colored text.\n
        navyblue() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use navybluebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: navyblue("text",bg='navyblue') then it's apply the navyblue color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of navyblue\n
                    for example : navyblue(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                navyblue("Hello World", Style = 0 ) = it's return navyblue color text without any style       \n
                navyblue("Hello World", Style = 1 ) = it's return navyblue color text with bold text          \n
                navyblue("Hello World", Style = 2 ) = it's return navyblue color text with light text         \n
                navyblue("Hello World", Style = 3 ) = it's return navyblue color text with Italicized style   \n
                navyblue("Hello World", Style = 4 ) = it's return navyblue color text with UnderLine          \n
                navyblue("Hello World", Style = 5 ) = it's return Blinking navyblue color text                \n
        """
        if rgb:
            return (0, 0, 128)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 0, 128,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 0, 128)
                


def paleturquoise( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the paleturquoise colored text.\n
        paleturquoise() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use paleturquoisebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: paleturquoise("text",bg='paleturquoise') then it's apply the paleturquoise color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of paleturquoise\n
                    for example : paleturquoise(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                paleturquoise("Hello World", Style = 0 ) = it's return paleturquoise color text without any style       \n
                paleturquoise("Hello World", Style = 1 ) = it's return paleturquoise color text with bold text          \n
                paleturquoise("Hello World", Style = 2 ) = it's return paleturquoise color text with light text         \n
                paleturquoise("Hello World", Style = 3 ) = it's return paleturquoise color text with Italicized style   \n
                paleturquoise("Hello World", Style = 4 ) = it's return paleturquoise color text with UnderLine          \n
                paleturquoise("Hello World", Style = 5 ) = it's return Blinking paleturquoise color text                \n
        """
        if rgb:
            return (175, 238, 238)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 175, 238, 238,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 175, 238, 238)
                


def paleturquoise1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the paleturquoise1 colored text.\n
        paleturquoise1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use paleturquoise1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: paleturquoise1("text",bg='paleturquoise1') then it's apply the paleturquoise1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of paleturquoise1\n
                    for example : paleturquoise1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                paleturquoise1("Hello World", Style = 0 ) = it's return paleturquoise1 color text without any style       \n
                paleturquoise1("Hello World", Style = 1 ) = it's return paleturquoise1 color text with bold text          \n
                paleturquoise1("Hello World", Style = 2 ) = it's return paleturquoise1 color text with light text         \n
                paleturquoise1("Hello World", Style = 3 ) = it's return paleturquoise1 color text with Italicized style   \n
                paleturquoise1("Hello World", Style = 4 ) = it's return paleturquoise1 color text with UnderLine          \n
                paleturquoise1("Hello World", Style = 5 ) = it's return Blinking paleturquoise1 color text                \n
        """
        if rgb:
            return (187, 255, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 187, 255, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 187, 255, 255)
                


def paleturquoise2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the paleturquoise2 colored text.\n
        paleturquoise2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use paleturquoise2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: paleturquoise2("text",bg='paleturquoise2') then it's apply the paleturquoise2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of paleturquoise2\n
                    for example : paleturquoise2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                paleturquoise2("Hello World", Style = 0 ) = it's return paleturquoise2 color text without any style       \n
                paleturquoise2("Hello World", Style = 1 ) = it's return paleturquoise2 color text with bold text          \n
                paleturquoise2("Hello World", Style = 2 ) = it's return paleturquoise2 color text with light text         \n
                paleturquoise2("Hello World", Style = 3 ) = it's return paleturquoise2 color text with Italicized style   \n
                paleturquoise2("Hello World", Style = 4 ) = it's return paleturquoise2 color text with UnderLine          \n
                paleturquoise2("Hello World", Style = 5 ) = it's return Blinking paleturquoise2 color text                \n
        """
        if rgb:
            return (174, 238, 238)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 174, 238, 238,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 174, 238, 238)
                


def paleturquoise3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the paleturquoise3 colored text.\n
        paleturquoise3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use paleturquoise3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: paleturquoise3("text",bg='paleturquoise3') then it's apply the paleturquoise3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of paleturquoise3\n
                    for example : paleturquoise3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                paleturquoise3("Hello World", Style = 0 ) = it's return paleturquoise3 color text without any style       \n
                paleturquoise3("Hello World", Style = 1 ) = it's return paleturquoise3 color text with bold text          \n
                paleturquoise3("Hello World", Style = 2 ) = it's return paleturquoise3 color text with light text         \n
                paleturquoise3("Hello World", Style = 3 ) = it's return paleturquoise3 color text with Italicized style   \n
                paleturquoise3("Hello World", Style = 4 ) = it's return paleturquoise3 color text with UnderLine          \n
                paleturquoise3("Hello World", Style = 5 ) = it's return Blinking paleturquoise3 color text                \n
        """
        if rgb:
            return (150, 205, 205)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 150, 205, 205,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 150, 205, 205)
                


def paleturquoise4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the paleturquoise4 colored text.\n
        paleturquoise4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use paleturquoise4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: paleturquoise4("text",bg='paleturquoise4') then it's apply the paleturquoise4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of paleturquoise4\n
                    for example : paleturquoise4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                paleturquoise4("Hello World", Style = 0 ) = it's return paleturquoise4 color text without any style       \n
                paleturquoise4("Hello World", Style = 1 ) = it's return paleturquoise4 color text with bold text          \n
                paleturquoise4("Hello World", Style = 2 ) = it's return paleturquoise4 color text with light text         \n
                paleturquoise4("Hello World", Style = 3 ) = it's return paleturquoise4 color text with Italicized style   \n
                paleturquoise4("Hello World", Style = 4 ) = it's return paleturquoise4 color text with UnderLine          \n
                paleturquoise4("Hello World", Style = 5 ) = it's return Blinking paleturquoise4 color text                \n
        """
        if rgb:
            return (102, 139, 139)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 102, 139, 139,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 102, 139, 139)
                


def powderblue( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the powderblue colored text.\n
        powderblue() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use powderbluebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: powderblue("text",bg='powderblue') then it's apply the powderblue color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of powderblue\n
                    for example : powderblue(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                powderblue("Hello World", Style = 0 ) = it's return powderblue color text without any style       \n
                powderblue("Hello World", Style = 1 ) = it's return powderblue color text with bold text          \n
                powderblue("Hello World", Style = 2 ) = it's return powderblue color text with light text         \n
                powderblue("Hello World", Style = 3 ) = it's return powderblue color text with Italicized style   \n
                powderblue("Hello World", Style = 4 ) = it's return powderblue color text with UnderLine          \n
                powderblue("Hello World", Style = 5 ) = it's return Blinking powderblue color text                \n
        """
        if rgb:
            return (176, 224, 230)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 176, 224, 230,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 176, 224, 230)
                


def royalblue( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the royalblue colored text.\n
        royalblue() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use royalbluebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: royalblue("text",bg='royalblue') then it's apply the royalblue color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of royalblue\n
                    for example : royalblue(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                royalblue("Hello World", Style = 0 ) = it's return royalblue color text without any style       \n
                royalblue("Hello World", Style = 1 ) = it's return royalblue color text with bold text          \n
                royalblue("Hello World", Style = 2 ) = it's return royalblue color text with light text         \n
                royalblue("Hello World", Style = 3 ) = it's return royalblue color text with Italicized style   \n
                royalblue("Hello World", Style = 4 ) = it's return royalblue color text with UnderLine          \n
                royalblue("Hello World", Style = 5 ) = it's return Blinking royalblue color text                \n
        """
        if rgb:
            return (65, 105, 225)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 65, 105, 225,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 65, 105, 225)
                


def royalblue1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the royalblue1 colored text.\n
        royalblue1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use royalblue1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: royalblue1("text",bg='royalblue1') then it's apply the royalblue1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of royalblue1\n
                    for example : royalblue1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                royalblue1("Hello World", Style = 0 ) = it's return royalblue1 color text without any style       \n
                royalblue1("Hello World", Style = 1 ) = it's return royalblue1 color text with bold text          \n
                royalblue1("Hello World", Style = 2 ) = it's return royalblue1 color text with light text         \n
                royalblue1("Hello World", Style = 3 ) = it's return royalblue1 color text with Italicized style   \n
                royalblue1("Hello World", Style = 4 ) = it's return royalblue1 color text with UnderLine          \n
                royalblue1("Hello World", Style = 5 ) = it's return Blinking royalblue1 color text                \n
        """
        if rgb:
            return (72, 118, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 72, 118, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 72, 118, 255)
                


def royalblue2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the royalblue2 colored text.\n
        royalblue2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use royalblue2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: royalblue2("text",bg='royalblue2') then it's apply the royalblue2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of royalblue2\n
                    for example : royalblue2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                royalblue2("Hello World", Style = 0 ) = it's return royalblue2 color text without any style       \n
                royalblue2("Hello World", Style = 1 ) = it's return royalblue2 color text with bold text          \n
                royalblue2("Hello World", Style = 2 ) = it's return royalblue2 color text with light text         \n
                royalblue2("Hello World", Style = 3 ) = it's return royalblue2 color text with Italicized style   \n
                royalblue2("Hello World", Style = 4 ) = it's return royalblue2 color text with UnderLine          \n
                royalblue2("Hello World", Style = 5 ) = it's return Blinking royalblue2 color text                \n
        """
        if rgb:
            return (67, 110, 238)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 67, 110, 238,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 67, 110, 238)
                


def royalblue3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the royalblue3 colored text.\n
        royalblue3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use royalblue3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: royalblue3("text",bg='royalblue3') then it's apply the royalblue3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of royalblue3\n
                    for example : royalblue3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                royalblue3("Hello World", Style = 0 ) = it's return royalblue3 color text without any style       \n
                royalblue3("Hello World", Style = 1 ) = it's return royalblue3 color text with bold text          \n
                royalblue3("Hello World", Style = 2 ) = it's return royalblue3 color text with light text         \n
                royalblue3("Hello World", Style = 3 ) = it's return royalblue3 color text with Italicized style   \n
                royalblue3("Hello World", Style = 4 ) = it's return royalblue3 color text with UnderLine          \n
                royalblue3("Hello World", Style = 5 ) = it's return Blinking royalblue3 color text                \n
        """
        if rgb:
            return (58, 95, 205)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 58, 95, 205,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 58, 95, 205)
                


def royalblue4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the royalblue4 colored text.\n
        royalblue4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use royalblue4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: royalblue4("text",bg='royalblue4') then it's apply the royalblue4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of royalblue4\n
                    for example : royalblue4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                royalblue4("Hello World", Style = 0 ) = it's return royalblue4 color text without any style       \n
                royalblue4("Hello World", Style = 1 ) = it's return royalblue4 color text with bold text          \n
                royalblue4("Hello World", Style = 2 ) = it's return royalblue4 color text with light text         \n
                royalblue4("Hello World", Style = 3 ) = it's return royalblue4 color text with Italicized style   \n
                royalblue4("Hello World", Style = 4 ) = it's return royalblue4 color text with UnderLine          \n
                royalblue4("Hello World", Style = 5 ) = it's return Blinking royalblue4 color text                \n
        """
        if rgb:
            return (39, 64, 139)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 39, 64, 139,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 39, 64, 139)
                


def royalblue5( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the royalblue5 colored text.\n
        royalblue5() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use royalblue5bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: royalblue5("text",bg='royalblue5') then it's apply the royalblue5 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of royalblue5\n
                    for example : royalblue5(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                royalblue5("Hello World", Style = 0 ) = it's return royalblue5 color text without any style       \n
                royalblue5("Hello World", Style = 1 ) = it's return royalblue5 color text with bold text          \n
                royalblue5("Hello World", Style = 2 ) = it's return royalblue5 color text with light text         \n
                royalblue5("Hello World", Style = 3 ) = it's return royalblue5 color text with Italicized style   \n
                royalblue5("Hello World", Style = 4 ) = it's return royalblue5 color text with UnderLine          \n
                royalblue5("Hello World", Style = 5 ) = it's return Blinking royalblue5 color text                \n
        """
        if rgb:
            return (0, 34, 102)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 34, 102,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 34, 102)
                


def skyblue( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the skyblue colored text.\n
        skyblue() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use skybluebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: skyblue("text",bg='skyblue') then it's apply the skyblue color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of skyblue\n
                    for example : skyblue(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                skyblue("Hello World", Style = 0 ) = it's return skyblue color text without any style       \n
                skyblue("Hello World", Style = 1 ) = it's return skyblue color text with bold text          \n
                skyblue("Hello World", Style = 2 ) = it's return skyblue color text with light text         \n
                skyblue("Hello World", Style = 3 ) = it's return skyblue color text with Italicized style   \n
                skyblue("Hello World", Style = 4 ) = it's return skyblue color text with UnderLine          \n
                skyblue("Hello World", Style = 5 ) = it's return Blinking skyblue color text                \n
        """
        if rgb:
            return (135, 206, 235)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 135, 206, 235,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 135, 206, 235)
                


def skyblue1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the skyblue1 colored text.\n
        skyblue1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use skyblue1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: skyblue1("text",bg='skyblue1') then it's apply the skyblue1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of skyblue1\n
                    for example : skyblue1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                skyblue1("Hello World", Style = 0 ) = it's return skyblue1 color text without any style       \n
                skyblue1("Hello World", Style = 1 ) = it's return skyblue1 color text with bold text          \n
                skyblue1("Hello World", Style = 2 ) = it's return skyblue1 color text with light text         \n
                skyblue1("Hello World", Style = 3 ) = it's return skyblue1 color text with Italicized style   \n
                skyblue1("Hello World", Style = 4 ) = it's return skyblue1 color text with UnderLine          \n
                skyblue1("Hello World", Style = 5 ) = it's return Blinking skyblue1 color text                \n
        """
        if rgb:
            return (135, 206, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 135, 206, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 135, 206, 255)
                


def skyblue2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the skyblue2 colored text.\n
        skyblue2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use skyblue2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: skyblue2("text",bg='skyblue2') then it's apply the skyblue2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of skyblue2\n
                    for example : skyblue2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                skyblue2("Hello World", Style = 0 ) = it's return skyblue2 color text without any style       \n
                skyblue2("Hello World", Style = 1 ) = it's return skyblue2 color text with bold text          \n
                skyblue2("Hello World", Style = 2 ) = it's return skyblue2 color text with light text         \n
                skyblue2("Hello World", Style = 3 ) = it's return skyblue2 color text with Italicized style   \n
                skyblue2("Hello World", Style = 4 ) = it's return skyblue2 color text with UnderLine          \n
                skyblue2("Hello World", Style = 5 ) = it's return Blinking skyblue2 color text                \n
        """
        if rgb:
            return (126, 192, 238)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 126, 192, 238,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 126, 192, 238)
                


def skyblue3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the skyblue3 colored text.\n
        skyblue3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use skyblue3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: skyblue3("text",bg='skyblue3') then it's apply the skyblue3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of skyblue3\n
                    for example : skyblue3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                skyblue3("Hello World", Style = 0 ) = it's return skyblue3 color text without any style       \n
                skyblue3("Hello World", Style = 1 ) = it's return skyblue3 color text with bold text          \n
                skyblue3("Hello World", Style = 2 ) = it's return skyblue3 color text with light text         \n
                skyblue3("Hello World", Style = 3 ) = it's return skyblue3 color text with Italicized style   \n
                skyblue3("Hello World", Style = 4 ) = it's return skyblue3 color text with UnderLine          \n
                skyblue3("Hello World", Style = 5 ) = it's return Blinking skyblue3 color text                \n
        """
        if rgb:
            return (108, 166, 205)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 108, 166, 205,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 108, 166, 205)
                


def skyblue4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the skyblue4 colored text.\n
        skyblue4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use skyblue4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: skyblue4("text",bg='skyblue4') then it's apply the skyblue4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of skyblue4\n
                    for example : skyblue4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                skyblue4("Hello World", Style = 0 ) = it's return skyblue4 color text without any style       \n
                skyblue4("Hello World", Style = 1 ) = it's return skyblue4 color text with bold text          \n
                skyblue4("Hello World", Style = 2 ) = it's return skyblue4 color text with light text         \n
                skyblue4("Hello World", Style = 3 ) = it's return skyblue4 color text with Italicized style   \n
                skyblue4("Hello World", Style = 4 ) = it's return skyblue4 color text with UnderLine          \n
                skyblue4("Hello World", Style = 5 ) = it's return Blinking skyblue4 color text                \n
        """
        if rgb:
            return (74, 112, 139)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 74, 112, 139,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 74, 112, 139)
                


def slateblue( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the slateblue colored text.\n
        slateblue() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use slatebluebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: slateblue("text",bg='slateblue') then it's apply the slateblue color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of slateblue\n
                    for example : slateblue(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                slateblue("Hello World", Style = 0 ) = it's return slateblue color text without any style       \n
                slateblue("Hello World", Style = 1 ) = it's return slateblue color text with bold text          \n
                slateblue("Hello World", Style = 2 ) = it's return slateblue color text with light text         \n
                slateblue("Hello World", Style = 3 ) = it's return slateblue color text with Italicized style   \n
                slateblue("Hello World", Style = 4 ) = it's return slateblue color text with UnderLine          \n
                slateblue("Hello World", Style = 5 ) = it's return Blinking slateblue color text                \n
        """
        if rgb:
            return (106, 90, 205)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 106, 90, 205,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 106, 90, 205)
                


def slateblue1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the slateblue1 colored text.\n
        slateblue1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use slateblue1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: slateblue1("text",bg='slateblue1') then it's apply the slateblue1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of slateblue1\n
                    for example : slateblue1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                slateblue1("Hello World", Style = 0 ) = it's return slateblue1 color text without any style       \n
                slateblue1("Hello World", Style = 1 ) = it's return slateblue1 color text with bold text          \n
                slateblue1("Hello World", Style = 2 ) = it's return slateblue1 color text with light text         \n
                slateblue1("Hello World", Style = 3 ) = it's return slateblue1 color text with Italicized style   \n
                slateblue1("Hello World", Style = 4 ) = it's return slateblue1 color text with UnderLine          \n
                slateblue1("Hello World", Style = 5 ) = it's return Blinking slateblue1 color text                \n
        """
        if rgb:
            return (131, 111, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 131, 111, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 131, 111, 255)
                


def slateblue2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the slateblue2 colored text.\n
        slateblue2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use slateblue2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: slateblue2("text",bg='slateblue2') then it's apply the slateblue2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of slateblue2\n
                    for example : slateblue2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                slateblue2("Hello World", Style = 0 ) = it's return slateblue2 color text without any style       \n
                slateblue2("Hello World", Style = 1 ) = it's return slateblue2 color text with bold text          \n
                slateblue2("Hello World", Style = 2 ) = it's return slateblue2 color text with light text         \n
                slateblue2("Hello World", Style = 3 ) = it's return slateblue2 color text with Italicized style   \n
                slateblue2("Hello World", Style = 4 ) = it's return slateblue2 color text with UnderLine          \n
                slateblue2("Hello World", Style = 5 ) = it's return Blinking slateblue2 color text                \n
        """
        if rgb:
            return (122, 103, 238)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 122, 103, 238,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 122, 103, 238)
                


def slateblue3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the slateblue3 colored text.\n
        slateblue3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use slateblue3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: slateblue3("text",bg='slateblue3') then it's apply the slateblue3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of slateblue3\n
                    for example : slateblue3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                slateblue3("Hello World", Style = 0 ) = it's return slateblue3 color text without any style       \n
                slateblue3("Hello World", Style = 1 ) = it's return slateblue3 color text with bold text          \n
                slateblue3("Hello World", Style = 2 ) = it's return slateblue3 color text with light text         \n
                slateblue3("Hello World", Style = 3 ) = it's return slateblue3 color text with Italicized style   \n
                slateblue3("Hello World", Style = 4 ) = it's return slateblue3 color text with UnderLine          \n
                slateblue3("Hello World", Style = 5 ) = it's return Blinking slateblue3 color text                \n
        """
        if rgb:
            return (105, 89, 205)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 105, 89, 205,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 105, 89, 205)
                


def slateblue4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the slateblue4 colored text.\n
        slateblue4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use slateblue4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: slateblue4("text",bg='slateblue4') then it's apply the slateblue4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of slateblue4\n
                    for example : slateblue4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                slateblue4("Hello World", Style = 0 ) = it's return slateblue4 color text without any style       \n
                slateblue4("Hello World", Style = 1 ) = it's return slateblue4 color text with bold text          \n
                slateblue4("Hello World", Style = 2 ) = it's return slateblue4 color text with light text         \n
                slateblue4("Hello World", Style = 3 ) = it's return slateblue4 color text with Italicized style   \n
                slateblue4("Hello World", Style = 4 ) = it's return slateblue4 color text with UnderLine          \n
                slateblue4("Hello World", Style = 5 ) = it's return Blinking slateblue4 color text                \n
        """
        if rgb:
            return (71, 60, 139)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 71, 60, 139,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 71, 60, 139)
                


def steelblue( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the steelblue colored text.\n
        steelblue() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use steelbluebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: steelblue("text",bg='steelblue') then it's apply the steelblue color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of steelblue\n
                    for example : steelblue(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                steelblue("Hello World", Style = 0 ) = it's return steelblue color text without any style       \n
                steelblue("Hello World", Style = 1 ) = it's return steelblue color text with bold text          \n
                steelblue("Hello World", Style = 2 ) = it's return steelblue color text with light text         \n
                steelblue("Hello World", Style = 3 ) = it's return steelblue color text with Italicized style   \n
                steelblue("Hello World", Style = 4 ) = it's return steelblue color text with UnderLine          \n
                steelblue("Hello World", Style = 5 ) = it's return Blinking steelblue color text                \n
        """
        if rgb:
            return (70, 130, 180)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 70, 130, 180,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 70, 130, 180)
                


def steelblue1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the steelblue1 colored text.\n
        steelblue1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use steelblue1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: steelblue1("text",bg='steelblue1') then it's apply the steelblue1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of steelblue1\n
                    for example : steelblue1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                steelblue1("Hello World", Style = 0 ) = it's return steelblue1 color text without any style       \n
                steelblue1("Hello World", Style = 1 ) = it's return steelblue1 color text with bold text          \n
                steelblue1("Hello World", Style = 2 ) = it's return steelblue1 color text with light text         \n
                steelblue1("Hello World", Style = 3 ) = it's return steelblue1 color text with Italicized style   \n
                steelblue1("Hello World", Style = 4 ) = it's return steelblue1 color text with UnderLine          \n
                steelblue1("Hello World", Style = 5 ) = it's return Blinking steelblue1 color text                \n
        """
        if rgb:
            return (99, 184, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 99, 184, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 99, 184, 255)
                


def steelblue2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the steelblue2 colored text.\n
        steelblue2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use steelblue2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: steelblue2("text",bg='steelblue2') then it's apply the steelblue2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of steelblue2\n
                    for example : steelblue2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                steelblue2("Hello World", Style = 0 ) = it's return steelblue2 color text without any style       \n
                steelblue2("Hello World", Style = 1 ) = it's return steelblue2 color text with bold text          \n
                steelblue2("Hello World", Style = 2 ) = it's return steelblue2 color text with light text         \n
                steelblue2("Hello World", Style = 3 ) = it's return steelblue2 color text with Italicized style   \n
                steelblue2("Hello World", Style = 4 ) = it's return steelblue2 color text with UnderLine          \n
                steelblue2("Hello World", Style = 5 ) = it's return Blinking steelblue2 color text                \n
        """
        if rgb:
            return (92, 172, 238)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 92, 172, 238,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 92, 172, 238)
                


def steelblue3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the steelblue3 colored text.\n
        steelblue3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use steelblue3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: steelblue3("text",bg='steelblue3') then it's apply the steelblue3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of steelblue3\n
                    for example : steelblue3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                steelblue3("Hello World", Style = 0 ) = it's return steelblue3 color text without any style       \n
                steelblue3("Hello World", Style = 1 ) = it's return steelblue3 color text with bold text          \n
                steelblue3("Hello World", Style = 2 ) = it's return steelblue3 color text with light text         \n
                steelblue3("Hello World", Style = 3 ) = it's return steelblue3 color text with Italicized style   \n
                steelblue3("Hello World", Style = 4 ) = it's return steelblue3 color text with UnderLine          \n
                steelblue3("Hello World", Style = 5 ) = it's return Blinking steelblue3 color text                \n
        """
        if rgb:
            return (79, 148, 205)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 79, 148, 205,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 79, 148, 205)
                


def steelblue4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the steelblue4 colored text.\n
        steelblue4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use steelblue4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: steelblue4("text",bg='steelblue4') then it's apply the steelblue4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of steelblue4\n
                    for example : steelblue4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                steelblue4("Hello World", Style = 0 ) = it's return steelblue4 color text without any style       \n
                steelblue4("Hello World", Style = 1 ) = it's return steelblue4 color text with bold text          \n
                steelblue4("Hello World", Style = 2 ) = it's return steelblue4 color text with light text         \n
                steelblue4("Hello World", Style = 3 ) = it's return steelblue4 color text with Italicized style   \n
                steelblue4("Hello World", Style = 4 ) = it's return steelblue4 color text with UnderLine          \n
                steelblue4("Hello World", Style = 5 ) = it's return Blinking steelblue4 color text                \n
        """
        if rgb:
            return (54, 100, 139)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 54, 100, 139,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 54, 100, 139)
                


def aquamarine( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the aquamarine colored text.\n
        aquamarine() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use aquamarinebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: aquamarine("text",bg='aquamarine') then it's apply the aquamarine color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of aquamarine\n
                    for example : aquamarine(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                aquamarine("Hello World", Style = 0 ) = it's return aquamarine color text without any style       \n
                aquamarine("Hello World", Style = 1 ) = it's return aquamarine color text with bold text          \n
                aquamarine("Hello World", Style = 2 ) = it's return aquamarine color text with light text         \n
                aquamarine("Hello World", Style = 3 ) = it's return aquamarine color text with Italicized style   \n
                aquamarine("Hello World", Style = 4 ) = it's return aquamarine color text with UnderLine          \n
                aquamarine("Hello World", Style = 5 ) = it's return Blinking aquamarine color text                \n
        """
        if rgb:
            return (127, 255, 212)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 127, 255, 212,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 127, 255, 212)
                


def aquamarine1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the aquamarine1 colored text.\n
        aquamarine1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use aquamarine1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: aquamarine1("text",bg='aquamarine1') then it's apply the aquamarine1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of aquamarine1\n
                    for example : aquamarine1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                aquamarine1("Hello World", Style = 0 ) = it's return aquamarine1 color text without any style       \n
                aquamarine1("Hello World", Style = 1 ) = it's return aquamarine1 color text with bold text          \n
                aquamarine1("Hello World", Style = 2 ) = it's return aquamarine1 color text with light text         \n
                aquamarine1("Hello World", Style = 3 ) = it's return aquamarine1 color text with Italicized style   \n
                aquamarine1("Hello World", Style = 4 ) = it's return aquamarine1 color text with UnderLine          \n
                aquamarine1("Hello World", Style = 5 ) = it's return Blinking aquamarine1 color text                \n
        """
        if rgb:
            return (127, 255, 212)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 127, 255, 212,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 127, 255, 212)
                


def aquamarine2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the aquamarine2 colored text.\n
        aquamarine2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use aquamarine2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: aquamarine2("text",bg='aquamarine2') then it's apply the aquamarine2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of aquamarine2\n
                    for example : aquamarine2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                aquamarine2("Hello World", Style = 0 ) = it's return aquamarine2 color text without any style       \n
                aquamarine2("Hello World", Style = 1 ) = it's return aquamarine2 color text with bold text          \n
                aquamarine2("Hello World", Style = 2 ) = it's return aquamarine2 color text with light text         \n
                aquamarine2("Hello World", Style = 3 ) = it's return aquamarine2 color text with Italicized style   \n
                aquamarine2("Hello World", Style = 4 ) = it's return aquamarine2 color text with UnderLine          \n
                aquamarine2("Hello World", Style = 5 ) = it's return Blinking aquamarine2 color text                \n
        """
        if rgb:
            return (118, 238, 198)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 118, 238, 198,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 118, 238, 198)
                


def mediumaquamarine( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the mediumaquamarine colored text.\n
        mediumaquamarine() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use mediumaquamarinebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: mediumaquamarine("text",bg='mediumaquamarine') then it's apply the mediumaquamarine color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of mediumaquamarine\n
                    for example : mediumaquamarine(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                mediumaquamarine("Hello World", Style = 0 ) = it's return mediumaquamarine color text without any style       \n
                mediumaquamarine("Hello World", Style = 1 ) = it's return mediumaquamarine color text with bold text          \n
                mediumaquamarine("Hello World", Style = 2 ) = it's return mediumaquamarine color text with light text         \n
                mediumaquamarine("Hello World", Style = 3 ) = it's return mediumaquamarine color text with Italicized style   \n
                mediumaquamarine("Hello World", Style = 4 ) = it's return mediumaquamarine color text with UnderLine          \n
                mediumaquamarine("Hello World", Style = 5 ) = it's return Blinking mediumaquamarine color text                \n
        """
        if rgb:
            return (102, 205, 170)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 102, 205, 170,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 102, 205, 170)
                


def aquamarine4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the aquamarine4 colored text.\n
        aquamarine4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use aquamarine4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: aquamarine4("text",bg='aquamarine4') then it's apply the aquamarine4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of aquamarine4\n
                    for example : aquamarine4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                aquamarine4("Hello World", Style = 0 ) = it's return aquamarine4 color text without any style       \n
                aquamarine4("Hello World", Style = 1 ) = it's return aquamarine4 color text with bold text          \n
                aquamarine4("Hello World", Style = 2 ) = it's return aquamarine4 color text with light text         \n
                aquamarine4("Hello World", Style = 3 ) = it's return aquamarine4 color text with Italicized style   \n
                aquamarine4("Hello World", Style = 4 ) = it's return aquamarine4 color text with UnderLine          \n
                aquamarine4("Hello World", Style = 5 ) = it's return Blinking aquamarine4 color text                \n
        """
        if rgb:
            return (69, 139, 116)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 69, 139, 116,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 69, 139, 116)
                


def azure( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the azure colored text.\n
        azure() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use azurebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: azure("text",bg='azure') then it's apply the azure color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of azure\n
                    for example : azure(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                azure("Hello World", Style = 0 ) = it's return azure color text without any style       \n
                azure("Hello World", Style = 1 ) = it's return azure color text with bold text          \n
                azure("Hello World", Style = 2 ) = it's return azure color text with light text         \n
                azure("Hello World", Style = 3 ) = it's return azure color text with Italicized style   \n
                azure("Hello World", Style = 4 ) = it's return azure color text with UnderLine          \n
                azure("Hello World", Style = 5 ) = it's return Blinking azure color text                \n
        """
        if rgb:
            return (240, 255, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 240, 255, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 240, 255, 255)
                


def azure1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the azure1 colored text.\n
        azure1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use azure1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: azure1("text",bg='azure1') then it's apply the azure1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of azure1\n
                    for example : azure1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                azure1("Hello World", Style = 0 ) = it's return azure1 color text without any style       \n
                azure1("Hello World", Style = 1 ) = it's return azure1 color text with bold text          \n
                azure1("Hello World", Style = 2 ) = it's return azure1 color text with light text         \n
                azure1("Hello World", Style = 3 ) = it's return azure1 color text with Italicized style   \n
                azure1("Hello World", Style = 4 ) = it's return azure1 color text with UnderLine          \n
                azure1("Hello World", Style = 5 ) = it's return Blinking azure1 color text                \n
        """
        if rgb:
            return (240, 255, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 240, 255, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 240, 255, 255)
                


def azure2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the azure2 colored text.\n
        azure2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use azure2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: azure2("text",bg='azure2') then it's apply the azure2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of azure2\n
                    for example : azure2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                azure2("Hello World", Style = 0 ) = it's return azure2 color text without any style       \n
                azure2("Hello World", Style = 1 ) = it's return azure2 color text with bold text          \n
                azure2("Hello World", Style = 2 ) = it's return azure2 color text with light text         \n
                azure2("Hello World", Style = 3 ) = it's return azure2 color text with Italicized style   \n
                azure2("Hello World", Style = 4 ) = it's return azure2 color text with UnderLine          \n
                azure2("Hello World", Style = 5 ) = it's return Blinking azure2 color text                \n
        """
        if rgb:
            return (224, 238, 238)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 224, 238, 238,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 224, 238, 238)
                


def azure3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the azure3 colored text.\n
        azure3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use azure3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: azure3("text",bg='azure3') then it's apply the azure3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of azure3\n
                    for example : azure3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                azure3("Hello World", Style = 0 ) = it's return azure3 color text without any style       \n
                azure3("Hello World", Style = 1 ) = it's return azure3 color text with bold text          \n
                azure3("Hello World", Style = 2 ) = it's return azure3 color text with light text         \n
                azure3("Hello World", Style = 3 ) = it's return azure3 color text with Italicized style   \n
                azure3("Hello World", Style = 4 ) = it's return azure3 color text with UnderLine          \n
                azure3("Hello World", Style = 5 ) = it's return Blinking azure3 color text                \n
        """
        if rgb:
            return (193, 205, 205)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 193, 205, 205,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 193, 205, 205)
                


def azure4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the azure4 colored text.\n
        azure4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use azure4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: azure4("text",bg='azure4') then it's apply the azure4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of azure4\n
                    for example : azure4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                azure4("Hello World", Style = 0 ) = it's return azure4 color text without any style       \n
                azure4("Hello World", Style = 1 ) = it's return azure4 color text with bold text          \n
                azure4("Hello World", Style = 2 ) = it's return azure4 color text with light text         \n
                azure4("Hello World", Style = 3 ) = it's return azure4 color text with Italicized style   \n
                azure4("Hello World", Style = 4 ) = it's return azure4 color text with UnderLine          \n
                azure4("Hello World", Style = 5 ) = it's return Blinking azure4 color text                \n
        """
        if rgb:
            return (131, 139, 139)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 131, 139, 139,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 131, 139, 139)
                


def blue( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the blue colored text.\n
        blue() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use bluebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: blue("text",bg='blue') then it's apply the blue color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of blue\n
                    for example : blue(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                blue("Hello World", Style = 0 ) = it's return blue color text without any style       \n
                blue("Hello World", Style = 1 ) = it's return blue color text with bold text          \n
                blue("Hello World", Style = 2 ) = it's return blue color text with light text         \n
                blue("Hello World", Style = 3 ) = it's return blue color text with Italicized style   \n
                blue("Hello World", Style = 4 ) = it's return blue color text with UnderLine          \n
                blue("Hello World", Style = 5 ) = it's return Blinking blue color text                \n
        """
        if rgb:
            return (0, 0, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 0, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 0, 255)
                


def blue1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the blue1 colored text.\n
        blue1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use blue1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: blue1("text",bg='blue1') then it's apply the blue1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of blue1\n
                    for example : blue1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                blue1("Hello World", Style = 0 ) = it's return blue1 color text without any style       \n
                blue1("Hello World", Style = 1 ) = it's return blue1 color text with bold text          \n
                blue1("Hello World", Style = 2 ) = it's return blue1 color text with light text         \n
                blue1("Hello World", Style = 3 ) = it's return blue1 color text with Italicized style   \n
                blue1("Hello World", Style = 4 ) = it's return blue1 color text with UnderLine          \n
                blue1("Hello World", Style = 5 ) = it's return Blinking blue1 color text                \n
        """
        if rgb:
            return (0, 0, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 0, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 0, 255)
                


def blue2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the blue2 colored text.\n
        blue2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use blue2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: blue2("text",bg='blue2') then it's apply the blue2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of blue2\n
                    for example : blue2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                blue2("Hello World", Style = 0 ) = it's return blue2 color text without any style       \n
                blue2("Hello World", Style = 1 ) = it's return blue2 color text with bold text          \n
                blue2("Hello World", Style = 2 ) = it's return blue2 color text with light text         \n
                blue2("Hello World", Style = 3 ) = it's return blue2 color text with Italicized style   \n
                blue2("Hello World", Style = 4 ) = it's return blue2 color text with UnderLine          \n
                blue2("Hello World", Style = 5 ) = it's return Blinking blue2 color text                \n
        """
        if rgb:
            return (0, 0, 238)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 0, 238,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 0, 238)
                


def blue3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the blue3 colored text.\n
        blue3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use blue3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: blue3("text",bg='blue3') then it's apply the blue3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of blue3\n
                    for example : blue3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                blue3("Hello World", Style = 0 ) = it's return blue3 color text without any style       \n
                blue3("Hello World", Style = 1 ) = it's return blue3 color text with bold text          \n
                blue3("Hello World", Style = 2 ) = it's return blue3 color text with light text         \n
                blue3("Hello World", Style = 3 ) = it's return blue3 color text with Italicized style   \n
                blue3("Hello World", Style = 4 ) = it's return blue3 color text with UnderLine          \n
                blue3("Hello World", Style = 5 ) = it's return Blinking blue3 color text                \n
        """
        if rgb:
            return (0, 0, 205)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 0, 205,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 0, 205)
                


def blue4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the blue4 colored text.\n
        blue4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use blue4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: blue4("text",bg='blue4') then it's apply the blue4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of blue4\n
                    for example : blue4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                blue4("Hello World", Style = 0 ) = it's return blue4 color text without any style       \n
                blue4("Hello World", Style = 1 ) = it's return blue4 color text with bold text          \n
                blue4("Hello World", Style = 2 ) = it's return blue4 color text with light text         \n
                blue4("Hello World", Style = 3 ) = it's return blue4 color text with Italicized style   \n
                blue4("Hello World", Style = 4 ) = it's return blue4 color text with UnderLine          \n
                blue4("Hello World", Style = 5 ) = it's return Blinking blue4 color text                \n
        """
        if rgb:
            return (0, 0, 139)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 0, 139,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 0, 139)
                


def aqua( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the aqua colored text.\n
        aqua() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use aquabg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: aqua("text",bg='aqua') then it's apply the aqua color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of aqua\n
                    for example : aqua(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                aqua("Hello World", Style = 0 ) = it's return aqua color text without any style       \n
                aqua("Hello World", Style = 1 ) = it's return aqua color text with bold text          \n
                aqua("Hello World", Style = 2 ) = it's return aqua color text with light text         \n
                aqua("Hello World", Style = 3 ) = it's return aqua color text with Italicized style   \n
                aqua("Hello World", Style = 4 ) = it's return aqua color text with UnderLine          \n
                aqua("Hello World", Style = 5 ) = it's return Blinking aqua color text                \n
        """
        if rgb:
            return (0, 255, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 255, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 255, 255)
                


def cyan( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the cyan colored text.\n
        cyan() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use cyanbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: cyan("text",bg='cyan') then it's apply the cyan color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of cyan\n
                    for example : cyan(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                cyan("Hello World", Style = 0 ) = it's return cyan color text without any style       \n
                cyan("Hello World", Style = 1 ) = it's return cyan color text with bold text          \n
                cyan("Hello World", Style = 2 ) = it's return cyan color text with light text         \n
                cyan("Hello World", Style = 3 ) = it's return cyan color text with Italicized style   \n
                cyan("Hello World", Style = 4 ) = it's return cyan color text with UnderLine          \n
                cyan("Hello World", Style = 5 ) = it's return Blinking cyan color text                \n
        """
        if rgb:
            return (0, 255, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 255, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 255, 255)
                


def cyan1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the cyan1 colored text.\n
        cyan1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use cyan1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: cyan1("text",bg='cyan1') then it's apply the cyan1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of cyan1\n
                    for example : cyan1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                cyan1("Hello World", Style = 0 ) = it's return cyan1 color text without any style       \n
                cyan1("Hello World", Style = 1 ) = it's return cyan1 color text with bold text          \n
                cyan1("Hello World", Style = 2 ) = it's return cyan1 color text with light text         \n
                cyan1("Hello World", Style = 3 ) = it's return cyan1 color text with Italicized style   \n
                cyan1("Hello World", Style = 4 ) = it's return cyan1 color text with UnderLine          \n
                cyan1("Hello World", Style = 5 ) = it's return Blinking cyan1 color text                \n
        """
        if rgb:
            return (0, 255, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 255, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 255, 255)
                


def cyan2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the cyan2 colored text.\n
        cyan2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use cyan2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: cyan2("text",bg='cyan2') then it's apply the cyan2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of cyan2\n
                    for example : cyan2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                cyan2("Hello World", Style = 0 ) = it's return cyan2 color text without any style       \n
                cyan2("Hello World", Style = 1 ) = it's return cyan2 color text with bold text          \n
                cyan2("Hello World", Style = 2 ) = it's return cyan2 color text with light text         \n
                cyan2("Hello World", Style = 3 ) = it's return cyan2 color text with Italicized style   \n
                cyan2("Hello World", Style = 4 ) = it's return cyan2 color text with UnderLine          \n
                cyan2("Hello World", Style = 5 ) = it's return Blinking cyan2 color text                \n
        """
        if rgb:
            return (0, 238, 238)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 238, 238,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 238, 238)
                


def cyan3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the cyan3 colored text.\n
        cyan3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use cyan3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: cyan3("text",bg='cyan3') then it's apply the cyan3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of cyan3\n
                    for example : cyan3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                cyan3("Hello World", Style = 0 ) = it's return cyan3 color text without any style       \n
                cyan3("Hello World", Style = 1 ) = it's return cyan3 color text with bold text          \n
                cyan3("Hello World", Style = 2 ) = it's return cyan3 color text with light text         \n
                cyan3("Hello World", Style = 3 ) = it's return cyan3 color text with Italicized style   \n
                cyan3("Hello World", Style = 4 ) = it's return cyan3 color text with UnderLine          \n
                cyan3("Hello World", Style = 5 ) = it's return Blinking cyan3 color text                \n
        """
        if rgb:
            return (0, 205, 205)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 205, 205,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 205, 205)
                


def cyan4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the cyan4 colored text.\n
        cyan4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use cyan4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: cyan4("text",bg='cyan4') then it's apply the cyan4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of cyan4\n
                    for example : cyan4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                cyan4("Hello World", Style = 0 ) = it's return cyan4 color text without any style       \n
                cyan4("Hello World", Style = 1 ) = it's return cyan4 color text with bold text          \n
                cyan4("Hello World", Style = 2 ) = it's return cyan4 color text with light text         \n
                cyan4("Hello World", Style = 3 ) = it's return cyan4 color text with Italicized style   \n
                cyan4("Hello World", Style = 4 ) = it's return cyan4 color text with UnderLine          \n
                cyan4("Hello World", Style = 5 ) = it's return Blinking cyan4 color text                \n
        """
        if rgb:
            return (0, 139, 139)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 139, 139,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 139, 139)
                


def navy( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the navy colored text.\n
        navy() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use navybg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: navy("text",bg='navy') then it's apply the navy color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of navy\n
                    for example : navy(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                navy("Hello World", Style = 0 ) = it's return navy color text without any style       \n
                navy("Hello World", Style = 1 ) = it's return navy color text with bold text          \n
                navy("Hello World", Style = 2 ) = it's return navy color text with light text         \n
                navy("Hello World", Style = 3 ) = it's return navy color text with Italicized style   \n
                navy("Hello World", Style = 4 ) = it's return navy color text with UnderLine          \n
                navy("Hello World", Style = 5 ) = it's return Blinking navy color text                \n
        """
        if rgb:
            return (0, 0, 128)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 0, 128,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 0, 128)
                


def teal( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the teal colored text.\n
        teal() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use tealbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: teal("text",bg='teal') then it's apply the teal color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of teal\n
                    for example : teal(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                teal("Hello World", Style = 0 ) = it's return teal color text without any style       \n
                teal("Hello World", Style = 1 ) = it's return teal color text with bold text          \n
                teal("Hello World", Style = 2 ) = it's return teal color text with light text         \n
                teal("Hello World", Style = 3 ) = it's return teal color text with Italicized style   \n
                teal("Hello World", Style = 4 ) = it's return teal color text with UnderLine          \n
                teal("Hello World", Style = 5 ) = it's return Blinking teal color text                \n
        """
        if rgb:
            return (0, 128, 128)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 128, 128,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 128, 128)
                


def turquoise( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the turquoise colored text.\n
        turquoise() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use turquoisebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: turquoise("text",bg='turquoise') then it's apply the turquoise color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of turquoise\n
                    for example : turquoise(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                turquoise("Hello World", Style = 0 ) = it's return turquoise color text without any style       \n
                turquoise("Hello World", Style = 1 ) = it's return turquoise color text with bold text          \n
                turquoise("Hello World", Style = 2 ) = it's return turquoise color text with light text         \n
                turquoise("Hello World", Style = 3 ) = it's return turquoise color text with Italicized style   \n
                turquoise("Hello World", Style = 4 ) = it's return turquoise color text with UnderLine          \n
                turquoise("Hello World", Style = 5 ) = it's return Blinking turquoise color text                \n
        """
        if rgb:
            return (64, 224, 208)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 64, 224, 208,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 64, 224, 208)
                


def turquoise1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the turquoise1 colored text.\n
        turquoise1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use turquoise1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: turquoise1("text",bg='turquoise1') then it's apply the turquoise1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of turquoise1\n
                    for example : turquoise1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                turquoise1("Hello World", Style = 0 ) = it's return turquoise1 color text without any style       \n
                turquoise1("Hello World", Style = 1 ) = it's return turquoise1 color text with bold text          \n
                turquoise1("Hello World", Style = 2 ) = it's return turquoise1 color text with light text         \n
                turquoise1("Hello World", Style = 3 ) = it's return turquoise1 color text with Italicized style   \n
                turquoise1("Hello World", Style = 4 ) = it's return turquoise1 color text with UnderLine          \n
                turquoise1("Hello World", Style = 5 ) = it's return Blinking turquoise1 color text                \n
        """
        if rgb:
            return (0, 245, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 245, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 245, 255)
                


def turquoise2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the turquoise2 colored text.\n
        turquoise2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use turquoise2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: turquoise2("text",bg='turquoise2') then it's apply the turquoise2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of turquoise2\n
                    for example : turquoise2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                turquoise2("Hello World", Style = 0 ) = it's return turquoise2 color text without any style       \n
                turquoise2("Hello World", Style = 1 ) = it's return turquoise2 color text with bold text          \n
                turquoise2("Hello World", Style = 2 ) = it's return turquoise2 color text with light text         \n
                turquoise2("Hello World", Style = 3 ) = it's return turquoise2 color text with Italicized style   \n
                turquoise2("Hello World", Style = 4 ) = it's return turquoise2 color text with UnderLine          \n
                turquoise2("Hello World", Style = 5 ) = it's return Blinking turquoise2 color text                \n
        """
        if rgb:
            return (0, 229, 238)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 229, 238,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 229, 238)
                


def turquoise3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the turquoise3 colored text.\n
        turquoise3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use turquoise3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: turquoise3("text",bg='turquoise3') then it's apply the turquoise3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of turquoise3\n
                    for example : turquoise3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                turquoise3("Hello World", Style = 0 ) = it's return turquoise3 color text without any style       \n
                turquoise3("Hello World", Style = 1 ) = it's return turquoise3 color text with bold text          \n
                turquoise3("Hello World", Style = 2 ) = it's return turquoise3 color text with light text         \n
                turquoise3("Hello World", Style = 3 ) = it's return turquoise3 color text with Italicized style   \n
                turquoise3("Hello World", Style = 4 ) = it's return turquoise3 color text with UnderLine          \n
                turquoise3("Hello World", Style = 5 ) = it's return Blinking turquoise3 color text                \n
        """
        if rgb:
            return (0, 197, 205)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 197, 205,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 197, 205)
                


def turquoise4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the turquoise4 colored text.\n
        turquoise4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use turquoise4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: turquoise4("text",bg='turquoise4') then it's apply the turquoise4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of turquoise4\n
                    for example : turquoise4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                turquoise4("Hello World", Style = 0 ) = it's return turquoise4 color text without any style       \n
                turquoise4("Hello World", Style = 1 ) = it's return turquoise4 color text with bold text          \n
                turquoise4("Hello World", Style = 2 ) = it's return turquoise4 color text with light text         \n
                turquoise4("Hello World", Style = 3 ) = it's return turquoise4 color text with Italicized style   \n
                turquoise4("Hello World", Style = 4 ) = it's return turquoise4 color text with UnderLine          \n
                turquoise4("Hello World", Style = 5 ) = it's return Blinking turquoise4 color text                \n
        """
        if rgb:
            return (0, 134, 139)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 134, 139,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 134, 139)
                


def darkslategray( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darkslategray colored text.\n
        darkslategray() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darkslategraybg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darkslategray("text",bg='darkslategray') then it's apply the darkslategray color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darkslategray\n
                    for example : darkslategray(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darkslategray("Hello World", Style = 0 ) = it's return darkslategray color text without any style       \n
                darkslategray("Hello World", Style = 1 ) = it's return darkslategray color text with bold text          \n
                darkslategray("Hello World", Style = 2 ) = it's return darkslategray color text with light text         \n
                darkslategray("Hello World", Style = 3 ) = it's return darkslategray color text with Italicized style   \n
                darkslategray("Hello World", Style = 4 ) = it's return darkslategray color text with UnderLine          \n
                darkslategray("Hello World", Style = 5 ) = it's return Blinking darkslategray color text                \n
        """
        if rgb:
            return (47, 79, 79)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 47, 79, 79,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 47, 79, 79)
                


def darkslategray1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darkslategray1 colored text.\n
        darkslategray1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darkslategray1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darkslategray1("text",bg='darkslategray1') then it's apply the darkslategray1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darkslategray1\n
                    for example : darkslategray1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darkslategray1("Hello World", Style = 0 ) = it's return darkslategray1 color text without any style       \n
                darkslategray1("Hello World", Style = 1 ) = it's return darkslategray1 color text with bold text          \n
                darkslategray1("Hello World", Style = 2 ) = it's return darkslategray1 color text with light text         \n
                darkslategray1("Hello World", Style = 3 ) = it's return darkslategray1 color text with Italicized style   \n
                darkslategray1("Hello World", Style = 4 ) = it's return darkslategray1 color text with UnderLine          \n
                darkslategray1("Hello World", Style = 5 ) = it's return Blinking darkslategray1 color text                \n
        """
        if rgb:
            return (151, 255, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 151, 255, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 151, 255, 255)
                


def darkslategray2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darkslategray2 colored text.\n
        darkslategray2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darkslategray2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darkslategray2("text",bg='darkslategray2') then it's apply the darkslategray2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darkslategray2\n
                    for example : darkslategray2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darkslategray2("Hello World", Style = 0 ) = it's return darkslategray2 color text without any style       \n
                darkslategray2("Hello World", Style = 1 ) = it's return darkslategray2 color text with bold text          \n
                darkslategray2("Hello World", Style = 2 ) = it's return darkslategray2 color text with light text         \n
                darkslategray2("Hello World", Style = 3 ) = it's return darkslategray2 color text with Italicized style   \n
                darkslategray2("Hello World", Style = 4 ) = it's return darkslategray2 color text with UnderLine          \n
                darkslategray2("Hello World", Style = 5 ) = it's return Blinking darkslategray2 color text                \n
        """
        if rgb:
            return (141, 238, 238)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 141, 238, 238,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 141, 238, 238)
                


def darkslategray3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darkslategray3 colored text.\n
        darkslategray3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darkslategray3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darkslategray3("text",bg='darkslategray3') then it's apply the darkslategray3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darkslategray3\n
                    for example : darkslategray3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darkslategray3("Hello World", Style = 0 ) = it's return darkslategray3 color text without any style       \n
                darkslategray3("Hello World", Style = 1 ) = it's return darkslategray3 color text with bold text          \n
                darkslategray3("Hello World", Style = 2 ) = it's return darkslategray3 color text with light text         \n
                darkslategray3("Hello World", Style = 3 ) = it's return darkslategray3 color text with Italicized style   \n
                darkslategray3("Hello World", Style = 4 ) = it's return darkslategray3 color text with UnderLine          \n
                darkslategray3("Hello World", Style = 5 ) = it's return Blinking darkslategray3 color text                \n
        """
        if rgb:
            return (121, 205, 205)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 121, 205, 205,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 121, 205, 205)
                


def darkslategray4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darkslategray4 colored text.\n
        darkslategray4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darkslategray4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darkslategray4("text",bg='darkslategray4') then it's apply the darkslategray4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darkslategray4\n
                    for example : darkslategray4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darkslategray4("Hello World", Style = 0 ) = it's return darkslategray4 color text without any style       \n
                darkslategray4("Hello World", Style = 1 ) = it's return darkslategray4 color text with bold text          \n
                darkslategray4("Hello World", Style = 2 ) = it's return darkslategray4 color text with light text         \n
                darkslategray4("Hello World", Style = 3 ) = it's return darkslategray4 color text with Italicized style   \n
                darkslategray4("Hello World", Style = 4 ) = it's return darkslategray4 color text with UnderLine          \n
                darkslategray4("Hello World", Style = 5 ) = it's return Blinking darkslategray4 color text                \n
        """
        if rgb:
            return (82, 139, 139)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 82, 139, 139,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 82, 139, 139)
                


def dark_slate_blue( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the dark_slate_blue colored text.\n
        dark_slate_blue() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use dark_slate_bluebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: dark_slate_blue("text",bg='dark_slate_blue') then it's apply the dark_slate_blue color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of dark_slate_blue\n
                    for example : dark_slate_blue(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                dark_slate_blue("Hello World", Style = 0 ) = it's return dark_slate_blue color text without any style       \n
                dark_slate_blue("Hello World", Style = 1 ) = it's return dark_slate_blue color text with bold text          \n
                dark_slate_blue("Hello World", Style = 2 ) = it's return dark_slate_blue color text with light text         \n
                dark_slate_blue("Hello World", Style = 3 ) = it's return dark_slate_blue color text with Italicized style   \n
                dark_slate_blue("Hello World", Style = 4 ) = it's return dark_slate_blue color text with UnderLine          \n
                dark_slate_blue("Hello World", Style = 5 ) = it's return Blinking dark_slate_blue color text                \n
        """
        if rgb:
            return (36, 24, 130)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 36, 24, 130,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 36, 24, 130)
                


def dark_turquoise( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the dark_turquoise colored text.\n
        dark_turquoise() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use dark_turquoisebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: dark_turquoise("text",bg='dark_turquoise') then it's apply the dark_turquoise color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of dark_turquoise\n
                    for example : dark_turquoise(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                dark_turquoise("Hello World", Style = 0 ) = it's return dark_turquoise color text without any style       \n
                dark_turquoise("Hello World", Style = 1 ) = it's return dark_turquoise color text with bold text          \n
                dark_turquoise("Hello World", Style = 2 ) = it's return dark_turquoise color text with light text         \n
                dark_turquoise("Hello World", Style = 3 ) = it's return dark_turquoise color text with Italicized style   \n
                dark_turquoise("Hello World", Style = 4 ) = it's return dark_turquoise color text with UnderLine          \n
                dark_turquoise("Hello World", Style = 5 ) = it's return Blinking dark_turquoise color text                \n
        """
        if rgb:
            return (112, 147, 219)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 112, 147, 219,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 112, 147, 219)
                


def medium_slate_blue( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the medium_slate_blue colored text.\n
        medium_slate_blue() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use medium_slate_bluebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: medium_slate_blue("text",bg='medium_slate_blue') then it's apply the medium_slate_blue color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of medium_slate_blue\n
                    for example : medium_slate_blue(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                medium_slate_blue("Hello World", Style = 0 ) = it's return medium_slate_blue color text without any style       \n
                medium_slate_blue("Hello World", Style = 1 ) = it's return medium_slate_blue color text with bold text          \n
                medium_slate_blue("Hello World", Style = 2 ) = it's return medium_slate_blue color text with light text         \n
                medium_slate_blue("Hello World", Style = 3 ) = it's return medium_slate_blue color text with Italicized style   \n
                medium_slate_blue("Hello World", Style = 4 ) = it's return medium_slate_blue color text with UnderLine          \n
                medium_slate_blue("Hello World", Style = 5 ) = it's return Blinking medium_slate_blue color text                \n
        """
        if rgb:
            return (127, 0, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 127, 0, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 127, 0, 255)
                


def medium_turquoise( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the medium_turquoise colored text.\n
        medium_turquoise() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use medium_turquoisebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: medium_turquoise("text",bg='medium_turquoise') then it's apply the medium_turquoise color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of medium_turquoise\n
                    for example : medium_turquoise(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                medium_turquoise("Hello World", Style = 0 ) = it's return medium_turquoise color text without any style       \n
                medium_turquoise("Hello World", Style = 1 ) = it's return medium_turquoise color text with bold text          \n
                medium_turquoise("Hello World", Style = 2 ) = it's return medium_turquoise color text with light text         \n
                medium_turquoise("Hello World", Style = 3 ) = it's return medium_turquoise color text with Italicized style   \n
                medium_turquoise("Hello World", Style = 4 ) = it's return medium_turquoise color text with UnderLine          \n
                medium_turquoise("Hello World", Style = 5 ) = it's return Blinking medium_turquoise color text                \n
        """
        if rgb:
            return (112, 219, 219)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 112, 219, 219,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 112, 219, 219)
                


def midnight_blue( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the midnight_blue colored text.\n
        midnight_blue() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use midnight_bluebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: midnight_blue("text",bg='midnight_blue') then it's apply the midnight_blue color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of midnight_blue\n
                    for example : midnight_blue(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                midnight_blue("Hello World", Style = 0 ) = it's return midnight_blue color text without any style       \n
                midnight_blue("Hello World", Style = 1 ) = it's return midnight_blue color text with bold text          \n
                midnight_blue("Hello World", Style = 2 ) = it's return midnight_blue color text with light text         \n
                midnight_blue("Hello World", Style = 3 ) = it's return midnight_blue color text with Italicized style   \n
                midnight_blue("Hello World", Style = 4 ) = it's return midnight_blue color text with UnderLine          \n
                midnight_blue("Hello World", Style = 5 ) = it's return Blinking midnight_blue color text                \n
        """
        if rgb:
            return (47, 47, 79)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 47, 47, 79,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 47, 47, 79)
                


def navy_blue( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the navy_blue colored text.\n
        navy_blue() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use navy_bluebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: navy_blue("text",bg='navy_blue') then it's apply the navy_blue color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of navy_blue\n
                    for example : navy_blue(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                navy_blue("Hello World", Style = 0 ) = it's return navy_blue color text without any style       \n
                navy_blue("Hello World", Style = 1 ) = it's return navy_blue color text with bold text          \n
                navy_blue("Hello World", Style = 2 ) = it's return navy_blue color text with light text         \n
                navy_blue("Hello World", Style = 3 ) = it's return navy_blue color text with Italicized style   \n
                navy_blue("Hello World", Style = 4 ) = it's return navy_blue color text with UnderLine          \n
                navy_blue("Hello World", Style = 5 ) = it's return Blinking navy_blue color text                \n
        """
        if rgb:
            return (35, 35, 142)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 35, 35, 142,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 35, 35, 142)
                


def neon_blue( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the neon_blue colored text.\n
        neon_blue() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use neon_bluebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: neon_blue("text",bg='neon_blue') then it's apply the neon_blue color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of neon_blue\n
                    for example : neon_blue(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                neon_blue("Hello World", Style = 0 ) = it's return neon_blue color text without any style       \n
                neon_blue("Hello World", Style = 1 ) = it's return neon_blue color text with bold text          \n
                neon_blue("Hello World", Style = 2 ) = it's return neon_blue color text with light text         \n
                neon_blue("Hello World", Style = 3 ) = it's return neon_blue color text with Italicized style   \n
                neon_blue("Hello World", Style = 4 ) = it's return neon_blue color text with UnderLine          \n
                neon_blue("Hello World", Style = 5 ) = it's return Blinking neon_blue color text                \n
        """
        if rgb:
            return (77, 77, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 77, 77, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 77, 77, 255)
                


def new_midnight_blue( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the new_midnight_blue colored text.\n
        new_midnight_blue() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use new_midnight_bluebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: new_midnight_blue("text",bg='new_midnight_blue') then it's apply the new_midnight_blue color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of new_midnight_blue\n
                    for example : new_midnight_blue(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                new_midnight_blue("Hello World", Style = 0 ) = it's return new_midnight_blue color text without any style       \n
                new_midnight_blue("Hello World", Style = 1 ) = it's return new_midnight_blue color text with bold text          \n
                new_midnight_blue("Hello World", Style = 2 ) = it's return new_midnight_blue color text with light text         \n
                new_midnight_blue("Hello World", Style = 3 ) = it's return new_midnight_blue color text with Italicized style   \n
                new_midnight_blue("Hello World", Style = 4 ) = it's return new_midnight_blue color text with UnderLine          \n
                new_midnight_blue("Hello World", Style = 5 ) = it's return Blinking new_midnight_blue color text                \n
        """
        if rgb:
            return (0, 0, 156)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 0, 156,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 0, 156)
                


def rich_blue( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the rich_blue colored text.\n
        rich_blue() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use rich_bluebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: rich_blue("text",bg='rich_blue') then it's apply the rich_blue color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of rich_blue\n
                    for example : rich_blue(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                rich_blue("Hello World", Style = 0 ) = it's return rich_blue color text without any style       \n
                rich_blue("Hello World", Style = 1 ) = it's return rich_blue color text with bold text          \n
                rich_blue("Hello World", Style = 2 ) = it's return rich_blue color text with light text         \n
                rich_blue("Hello World", Style = 3 ) = it's return rich_blue color text with Italicized style   \n
                rich_blue("Hello World", Style = 4 ) = it's return rich_blue color text with UnderLine          \n
                rich_blue("Hello World", Style = 5 ) = it's return Blinking rich_blue color text                \n
        """
        if rgb:
            return (89, 89, 171)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 89, 89, 171,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 89, 89, 171)
                


def sky_blue( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the sky_blue colored text.\n
        sky_blue() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use sky_bluebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: sky_blue("text",bg='sky_blue') then it's apply the sky_blue color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of sky_blue\n
                    for example : sky_blue(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                sky_blue("Hello World", Style = 0 ) = it's return sky_blue color text without any style       \n
                sky_blue("Hello World", Style = 1 ) = it's return sky_blue color text with bold text          \n
                sky_blue("Hello World", Style = 2 ) = it's return sky_blue color text with light text         \n
                sky_blue("Hello World", Style = 3 ) = it's return sky_blue color text with Italicized style   \n
                sky_blue("Hello World", Style = 4 ) = it's return sky_blue color text with UnderLine          \n
                sky_blue("Hello World", Style = 5 ) = it's return Blinking sky_blue color text                \n
        """
        if rgb:
            return (50, 153, 204)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 50, 153, 204,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 50, 153, 204)
                


def slate_blue( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the slate_blue colored text.\n
        slate_blue() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use slate_bluebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: slate_blue("text",bg='slate_blue') then it's apply the slate_blue color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of slate_blue\n
                    for example : slate_blue(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                slate_blue("Hello World", Style = 0 ) = it's return slate_blue color text without any style       \n
                slate_blue("Hello World", Style = 1 ) = it's return slate_blue color text with bold text          \n
                slate_blue("Hello World", Style = 2 ) = it's return slate_blue color text with light text         \n
                slate_blue("Hello World", Style = 3 ) = it's return slate_blue color text with Italicized style   \n
                slate_blue("Hello World", Style = 4 ) = it's return slate_blue color text with UnderLine          \n
                slate_blue("Hello World", Style = 5 ) = it's return Blinking slate_blue color text                \n
        """
        if rgb:
            return (0, 127, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 127, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 127, 255)
                


def summer_sky( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the summer_sky colored text.\n
        summer_sky() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use summer_skybg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: summer_sky("text",bg='summer_sky') then it's apply the summer_sky color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of summer_sky\n
                    for example : summer_sky(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                summer_sky("Hello World", Style = 0 ) = it's return summer_sky color text without any style       \n
                summer_sky("Hello World", Style = 1 ) = it's return summer_sky color text with bold text          \n
                summer_sky("Hello World", Style = 2 ) = it's return summer_sky color text with light text         \n
                summer_sky("Hello World", Style = 3 ) = it's return summer_sky color text with Italicized style   \n
                summer_sky("Hello World", Style = 4 ) = it's return summer_sky color text with UnderLine          \n
                summer_sky("Hello World", Style = 5 ) = it's return Blinking summer_sky color text                \n
        """
        if rgb:
            return (56, 176, 222)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 56, 176, 222,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 56, 176, 222)
                


def iris_blue( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the iris_blue colored text.\n
        iris_blue() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use iris_bluebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: iris_blue("text",bg='iris_blue') then it's apply the iris_blue color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of iris_blue\n
                    for example : iris_blue(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                iris_blue("Hello World", Style = 0 ) = it's return iris_blue color text without any style       \n
                iris_blue("Hello World", Style = 1 ) = it's return iris_blue color text with bold text          \n
                iris_blue("Hello World", Style = 2 ) = it's return iris_blue color text with light text         \n
                iris_blue("Hello World", Style = 3 ) = it's return iris_blue color text with Italicized style   \n
                iris_blue("Hello World", Style = 4 ) = it's return iris_blue color text with UnderLine          \n
                iris_blue("Hello World", Style = 5 ) = it's return Blinking iris_blue color text                \n
        """
        if rgb:
            return (3, 180, 200)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 3, 180, 200,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 3, 180, 200)
                


def free_speech_blue( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the free_speech_blue colored text.\n
        free_speech_blue() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use free_speech_bluebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: free_speech_blue("text",bg='free_speech_blue') then it's apply the free_speech_blue color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of free_speech_blue\n
                    for example : free_speech_blue(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                free_speech_blue("Hello World", Style = 0 ) = it's return free_speech_blue color text without any style       \n
                free_speech_blue("Hello World", Style = 1 ) = it's return free_speech_blue color text with bold text          \n
                free_speech_blue("Hello World", Style = 2 ) = it's return free_speech_blue color text with light text         \n
                free_speech_blue("Hello World", Style = 3 ) = it's return free_speech_blue color text with Italicized style   \n
                free_speech_blue("Hello World", Style = 4 ) = it's return free_speech_blue color text with UnderLine          \n
                free_speech_blue("Hello World", Style = 5 ) = it's return Blinking free_speech_blue color text                \n
        """
        if rgb:
            return (65, 86, 197)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 65, 86, 197,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 65, 86, 197)
                


def rosybrown( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the rosybrown colored text.\n
        rosybrown() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use rosybrownbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: rosybrown("text",bg='rosybrown') then it's apply the rosybrown color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of rosybrown\n
                    for example : rosybrown(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                rosybrown("Hello World", Style = 0 ) = it's return rosybrown color text without any style       \n
                rosybrown("Hello World", Style = 1 ) = it's return rosybrown color text with bold text          \n
                rosybrown("Hello World", Style = 2 ) = it's return rosybrown color text with light text         \n
                rosybrown("Hello World", Style = 3 ) = it's return rosybrown color text with Italicized style   \n
                rosybrown("Hello World", Style = 4 ) = it's return rosybrown color text with UnderLine          \n
                rosybrown("Hello World", Style = 5 ) = it's return Blinking rosybrown color text                \n
        """
        if rgb:
            return (188, 143, 143)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 188, 143, 143,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 188, 143, 143)
                


def rosybrown1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the rosybrown1 colored text.\n
        rosybrown1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use rosybrown1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: rosybrown1("text",bg='rosybrown1') then it's apply the rosybrown1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of rosybrown1\n
                    for example : rosybrown1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                rosybrown1("Hello World", Style = 0 ) = it's return rosybrown1 color text without any style       \n
                rosybrown1("Hello World", Style = 1 ) = it's return rosybrown1 color text with bold text          \n
                rosybrown1("Hello World", Style = 2 ) = it's return rosybrown1 color text with light text         \n
                rosybrown1("Hello World", Style = 3 ) = it's return rosybrown1 color text with Italicized style   \n
                rosybrown1("Hello World", Style = 4 ) = it's return rosybrown1 color text with UnderLine          \n
                rosybrown1("Hello World", Style = 5 ) = it's return Blinking rosybrown1 color text                \n
        """
        if rgb:
            return (255, 193, 193)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 193, 193,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 193, 193)
                


def rosybrown2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the rosybrown2 colored text.\n
        rosybrown2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use rosybrown2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: rosybrown2("text",bg='rosybrown2') then it's apply the rosybrown2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of rosybrown2\n
                    for example : rosybrown2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                rosybrown2("Hello World", Style = 0 ) = it's return rosybrown2 color text without any style       \n
                rosybrown2("Hello World", Style = 1 ) = it's return rosybrown2 color text with bold text          \n
                rosybrown2("Hello World", Style = 2 ) = it's return rosybrown2 color text with light text         \n
                rosybrown2("Hello World", Style = 3 ) = it's return rosybrown2 color text with Italicized style   \n
                rosybrown2("Hello World", Style = 4 ) = it's return rosybrown2 color text with UnderLine          \n
                rosybrown2("Hello World", Style = 5 ) = it's return Blinking rosybrown2 color text                \n
        """
        if rgb:
            return (238, 180, 180)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 180, 180,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 180, 180)
                


def rosybrown3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the rosybrown3 colored text.\n
        rosybrown3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use rosybrown3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: rosybrown3("text",bg='rosybrown3') then it's apply the rosybrown3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of rosybrown3\n
                    for example : rosybrown3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                rosybrown3("Hello World", Style = 0 ) = it's return rosybrown3 color text without any style       \n
                rosybrown3("Hello World", Style = 1 ) = it's return rosybrown3 color text with bold text          \n
                rosybrown3("Hello World", Style = 2 ) = it's return rosybrown3 color text with light text         \n
                rosybrown3("Hello World", Style = 3 ) = it's return rosybrown3 color text with Italicized style   \n
                rosybrown3("Hello World", Style = 4 ) = it's return rosybrown3 color text with UnderLine          \n
                rosybrown3("Hello World", Style = 5 ) = it's return Blinking rosybrown3 color text                \n
        """
        if rgb:
            return (205, 155, 155)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 155, 155,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 155, 155)
                


def rosybrown4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the rosybrown4 colored text.\n
        rosybrown4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use rosybrown4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: rosybrown4("text",bg='rosybrown4') then it's apply the rosybrown4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of rosybrown4\n
                    for example : rosybrown4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                rosybrown4("Hello World", Style = 0 ) = it's return rosybrown4 color text without any style       \n
                rosybrown4("Hello World", Style = 1 ) = it's return rosybrown4 color text with bold text          \n
                rosybrown4("Hello World", Style = 2 ) = it's return rosybrown4 color text with light text         \n
                rosybrown4("Hello World", Style = 3 ) = it's return rosybrown4 color text with Italicized style   \n
                rosybrown4("Hello World", Style = 4 ) = it's return rosybrown4 color text with UnderLine          \n
                rosybrown4("Hello World", Style = 5 ) = it's return Blinking rosybrown4 color text                \n
        """
        if rgb:
            return (139, 105, 105)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 105, 105,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 105, 105)
                


def saddlebrown( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the saddlebrown colored text.\n
        saddlebrown() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use saddlebrownbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: saddlebrown("text",bg='saddlebrown') then it's apply the saddlebrown color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of saddlebrown\n
                    for example : saddlebrown(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                saddlebrown("Hello World", Style = 0 ) = it's return saddlebrown color text without any style       \n
                saddlebrown("Hello World", Style = 1 ) = it's return saddlebrown color text with bold text          \n
                saddlebrown("Hello World", Style = 2 ) = it's return saddlebrown color text with light text         \n
                saddlebrown("Hello World", Style = 3 ) = it's return saddlebrown color text with Italicized style   \n
                saddlebrown("Hello World", Style = 4 ) = it's return saddlebrown color text with UnderLine          \n
                saddlebrown("Hello World", Style = 5 ) = it's return Blinking saddlebrown color text                \n
        """
        if rgb:
            return (139, 69, 19)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 69, 19,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 69, 19)
                


def sandybrown( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the sandybrown colored text.\n
        sandybrown() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use sandybrownbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: sandybrown("text",bg='sandybrown') then it's apply the sandybrown color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of sandybrown\n
                    for example : sandybrown(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                sandybrown("Hello World", Style = 0 ) = it's return sandybrown color text without any style       \n
                sandybrown("Hello World", Style = 1 ) = it's return sandybrown color text with bold text          \n
                sandybrown("Hello World", Style = 2 ) = it's return sandybrown color text with light text         \n
                sandybrown("Hello World", Style = 3 ) = it's return sandybrown color text with Italicized style   \n
                sandybrown("Hello World", Style = 4 ) = it's return sandybrown color text with UnderLine          \n
                sandybrown("Hello World", Style = 5 ) = it's return Blinking sandybrown color text                \n
        """
        if rgb:
            return (244, 164, 96)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 244, 164, 96,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 244, 164, 96)
                


def beige( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the beige colored text.\n
        beige() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use beigebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: beige("text",bg='beige') then it's apply the beige color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of beige\n
                    for example : beige(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                beige("Hello World", Style = 0 ) = it's return beige color text without any style       \n
                beige("Hello World", Style = 1 ) = it's return beige color text with bold text          \n
                beige("Hello World", Style = 2 ) = it's return beige color text with light text         \n
                beige("Hello World", Style = 3 ) = it's return beige color text with Italicized style   \n
                beige("Hello World", Style = 4 ) = it's return beige color text with UnderLine          \n
                beige("Hello World", Style = 5 ) = it's return Blinking beige color text                \n
        """
        if rgb:
            return (245, 245, 220)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 245, 245, 220,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 245, 245, 220)
                


def brown( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the brown colored text.\n
        brown() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use brownbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: brown("text",bg='brown') then it's apply the brown color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of brown\n
                    for example : brown(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                brown("Hello World", Style = 0 ) = it's return brown color text without any style       \n
                brown("Hello World", Style = 1 ) = it's return brown color text with bold text          \n
                brown("Hello World", Style = 2 ) = it's return brown color text with light text         \n
                brown("Hello World", Style = 3 ) = it's return brown color text with Italicized style   \n
                brown("Hello World", Style = 4 ) = it's return brown color text with UnderLine          \n
                brown("Hello World", Style = 5 ) = it's return Blinking brown color text                \n
        """
        if rgb:
            return (166, 42, 42)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 166, 42, 42,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 166, 42, 42)
                


def brown( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the brown colored text.\n
        brown() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use brownbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: brown("text",bg='brown') then it's apply the brown color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of brown\n
                    for example : brown(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                brown("Hello World", Style = 0 ) = it's return brown color text without any style       \n
                brown("Hello World", Style = 1 ) = it's return brown color text with bold text          \n
                brown("Hello World", Style = 2 ) = it's return brown color text with light text         \n
                brown("Hello World", Style = 3 ) = it's return brown color text with Italicized style   \n
                brown("Hello World", Style = 4 ) = it's return brown color text with UnderLine          \n
                brown("Hello World", Style = 5 ) = it's return Blinking brown color text                \n
        """
        if rgb:
            return (166, 42, 42)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 166, 42, 42,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 166, 42, 42)
                


def brown1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the brown1 colored text.\n
        brown1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use brown1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: brown1("text",bg='brown1') then it's apply the brown1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of brown1\n
                    for example : brown1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                brown1("Hello World", Style = 0 ) = it's return brown1 color text without any style       \n
                brown1("Hello World", Style = 1 ) = it's return brown1 color text with bold text          \n
                brown1("Hello World", Style = 2 ) = it's return brown1 color text with light text         \n
                brown1("Hello World", Style = 3 ) = it's return brown1 color text with Italicized style   \n
                brown1("Hello World", Style = 4 ) = it's return brown1 color text with UnderLine          \n
                brown1("Hello World", Style = 5 ) = it's return Blinking brown1 color text                \n
        """
        if rgb:
            return (255, 64, 64)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 64, 64,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 64, 64)
                


def brown2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the brown2 colored text.\n
        brown2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use brown2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: brown2("text",bg='brown2') then it's apply the brown2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of brown2\n
                    for example : brown2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                brown2("Hello World", Style = 0 ) = it's return brown2 color text without any style       \n
                brown2("Hello World", Style = 1 ) = it's return brown2 color text with bold text          \n
                brown2("Hello World", Style = 2 ) = it's return brown2 color text with light text         \n
                brown2("Hello World", Style = 3 ) = it's return brown2 color text with Italicized style   \n
                brown2("Hello World", Style = 4 ) = it's return brown2 color text with UnderLine          \n
                brown2("Hello World", Style = 5 ) = it's return Blinking brown2 color text                \n
        """
        if rgb:
            return (238, 59, 59)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 59, 59,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 59, 59)
                


def brown3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the brown3 colored text.\n
        brown3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use brown3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: brown3("text",bg='brown3') then it's apply the brown3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of brown3\n
                    for example : brown3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                brown3("Hello World", Style = 0 ) = it's return brown3 color text without any style       \n
                brown3("Hello World", Style = 1 ) = it's return brown3 color text with bold text          \n
                brown3("Hello World", Style = 2 ) = it's return brown3 color text with light text         \n
                brown3("Hello World", Style = 3 ) = it's return brown3 color text with Italicized style   \n
                brown3("Hello World", Style = 4 ) = it's return brown3 color text with UnderLine          \n
                brown3("Hello World", Style = 5 ) = it's return Blinking brown3 color text                \n
        """
        if rgb:
            return (205, 51, 51)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 51, 51,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 51, 51)
                


def brown4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the brown4 colored text.\n
        brown4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use brown4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: brown4("text",bg='brown4') then it's apply the brown4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of brown4\n
                    for example : brown4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                brown4("Hello World", Style = 0 ) = it's return brown4 color text without any style       \n
                brown4("Hello World", Style = 1 ) = it's return brown4 color text with bold text          \n
                brown4("Hello World", Style = 2 ) = it's return brown4 color text with light text         \n
                brown4("Hello World", Style = 3 ) = it's return brown4 color text with Italicized style   \n
                brown4("Hello World", Style = 4 ) = it's return brown4 color text with UnderLine          \n
                brown4("Hello World", Style = 5 ) = it's return Blinking brown4 color text                \n
        """
        if rgb:
            return (139, 35, 35)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 35, 35,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 35, 35)
                


def dark_brown( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the dark_brown colored text.\n
        dark_brown() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use dark_brownbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: dark_brown("text",bg='dark_brown') then it's apply the dark_brown color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of dark_brown\n
                    for example : dark_brown(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                dark_brown("Hello World", Style = 0 ) = it's return dark_brown color text without any style       \n
                dark_brown("Hello World", Style = 1 ) = it's return dark_brown color text with bold text          \n
                dark_brown("Hello World", Style = 2 ) = it's return dark_brown color text with light text         \n
                dark_brown("Hello World", Style = 3 ) = it's return dark_brown color text with Italicized style   \n
                dark_brown("Hello World", Style = 4 ) = it's return dark_brown color text with UnderLine          \n
                dark_brown("Hello World", Style = 5 ) = it's return Blinking dark_brown color text                \n
        """
        if rgb:
            return (92, 64, 51)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 92, 64, 51,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 92, 64, 51)
                


def burlywood( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the burlywood colored text.\n
        burlywood() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use burlywoodbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: burlywood("text",bg='burlywood') then it's apply the burlywood color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of burlywood\n
                    for example : burlywood(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                burlywood("Hello World", Style = 0 ) = it's return burlywood color text without any style       \n
                burlywood("Hello World", Style = 1 ) = it's return burlywood color text with bold text          \n
                burlywood("Hello World", Style = 2 ) = it's return burlywood color text with light text         \n
                burlywood("Hello World", Style = 3 ) = it's return burlywood color text with Italicized style   \n
                burlywood("Hello World", Style = 4 ) = it's return burlywood color text with UnderLine          \n
                burlywood("Hello World", Style = 5 ) = it's return Blinking burlywood color text                \n
        """
        if rgb:
            return (222, 184, 135)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 222, 184, 135,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 222, 184, 135)
                


def burlywood1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the burlywood1 colored text.\n
        burlywood1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use burlywood1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: burlywood1("text",bg='burlywood1') then it's apply the burlywood1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of burlywood1\n
                    for example : burlywood1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                burlywood1("Hello World", Style = 0 ) = it's return burlywood1 color text without any style       \n
                burlywood1("Hello World", Style = 1 ) = it's return burlywood1 color text with bold text          \n
                burlywood1("Hello World", Style = 2 ) = it's return burlywood1 color text with light text         \n
                burlywood1("Hello World", Style = 3 ) = it's return burlywood1 color text with Italicized style   \n
                burlywood1("Hello World", Style = 4 ) = it's return burlywood1 color text with UnderLine          \n
                burlywood1("Hello World", Style = 5 ) = it's return Blinking burlywood1 color text                \n
        """
        if rgb:
            return (255, 211, 155)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 211, 155,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 211, 155)
                


def burlywood2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the burlywood2 colored text.\n
        burlywood2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use burlywood2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: burlywood2("text",bg='burlywood2') then it's apply the burlywood2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of burlywood2\n
                    for example : burlywood2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                burlywood2("Hello World", Style = 0 ) = it's return burlywood2 color text without any style       \n
                burlywood2("Hello World", Style = 1 ) = it's return burlywood2 color text with bold text          \n
                burlywood2("Hello World", Style = 2 ) = it's return burlywood2 color text with light text         \n
                burlywood2("Hello World", Style = 3 ) = it's return burlywood2 color text with Italicized style   \n
                burlywood2("Hello World", Style = 4 ) = it's return burlywood2 color text with UnderLine          \n
                burlywood2("Hello World", Style = 5 ) = it's return Blinking burlywood2 color text                \n
        """
        if rgb:
            return (238, 197, 145)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 197, 145,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 197, 145)
                


def burlywood3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the burlywood3 colored text.\n
        burlywood3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use burlywood3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: burlywood3("text",bg='burlywood3') then it's apply the burlywood3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of burlywood3\n
                    for example : burlywood3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                burlywood3("Hello World", Style = 0 ) = it's return burlywood3 color text without any style       \n
                burlywood3("Hello World", Style = 1 ) = it's return burlywood3 color text with bold text          \n
                burlywood3("Hello World", Style = 2 ) = it's return burlywood3 color text with light text         \n
                burlywood3("Hello World", Style = 3 ) = it's return burlywood3 color text with Italicized style   \n
                burlywood3("Hello World", Style = 4 ) = it's return burlywood3 color text with UnderLine          \n
                burlywood3("Hello World", Style = 5 ) = it's return Blinking burlywood3 color text                \n
        """
        if rgb:
            return (205, 170, 125)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 170, 125,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 170, 125)
                


def burlywood4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the burlywood4 colored text.\n
        burlywood4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use burlywood4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: burlywood4("text",bg='burlywood4') then it's apply the burlywood4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of burlywood4\n
                    for example : burlywood4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                burlywood4("Hello World", Style = 0 ) = it's return burlywood4 color text without any style       \n
                burlywood4("Hello World", Style = 1 ) = it's return burlywood4 color text with bold text          \n
                burlywood4("Hello World", Style = 2 ) = it's return burlywood4 color text with light text         \n
                burlywood4("Hello World", Style = 3 ) = it's return burlywood4 color text with Italicized style   \n
                burlywood4("Hello World", Style = 4 ) = it's return burlywood4 color text with UnderLine          \n
                burlywood4("Hello World", Style = 5 ) = it's return Blinking burlywood4 color text                \n
        """
        if rgb:
            return (139, 115, 85)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 115, 85,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 115, 85)
                


def baker_chocolate( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the baker_chocolate colored text.\n
        baker_chocolate() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use baker_chocolatebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: baker_chocolate("text",bg='baker_chocolate') then it's apply the baker_chocolate color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of baker_chocolate\n
                    for example : baker_chocolate(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                baker_chocolate("Hello World", Style = 0 ) = it's return baker_chocolate color text without any style       \n
                baker_chocolate("Hello World", Style = 1 ) = it's return baker_chocolate color text with bold text          \n
                baker_chocolate("Hello World", Style = 2 ) = it's return baker_chocolate color text with light text         \n
                baker_chocolate("Hello World", Style = 3 ) = it's return baker_chocolate color text with Italicized style   \n
                baker_chocolate("Hello World", Style = 4 ) = it's return baker_chocolate color text with UnderLine          \n
                baker_chocolate("Hello World", Style = 5 ) = it's return Blinking baker_chocolate color text                \n
        """
        if rgb:
            return (92, 51, 23)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 92, 51, 23,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 92, 51, 23)
                


def chocolate( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the chocolate colored text.\n
        chocolate() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use chocolatebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: chocolate("text",bg='chocolate') then it's apply the chocolate color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of chocolate\n
                    for example : chocolate(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                chocolate("Hello World", Style = 0 ) = it's return chocolate color text without any style       \n
                chocolate("Hello World", Style = 1 ) = it's return chocolate color text with bold text          \n
                chocolate("Hello World", Style = 2 ) = it's return chocolate color text with light text         \n
                chocolate("Hello World", Style = 3 ) = it's return chocolate color text with Italicized style   \n
                chocolate("Hello World", Style = 4 ) = it's return chocolate color text with UnderLine          \n
                chocolate("Hello World", Style = 5 ) = it's return Blinking chocolate color text                \n
        """
        if rgb:
            return (210, 105, 30)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 210, 105, 30,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 210, 105, 30)
                


def chocolate1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the chocolate1 colored text.\n
        chocolate1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use chocolate1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: chocolate1("text",bg='chocolate1') then it's apply the chocolate1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of chocolate1\n
                    for example : chocolate1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                chocolate1("Hello World", Style = 0 ) = it's return chocolate1 color text without any style       \n
                chocolate1("Hello World", Style = 1 ) = it's return chocolate1 color text with bold text          \n
                chocolate1("Hello World", Style = 2 ) = it's return chocolate1 color text with light text         \n
                chocolate1("Hello World", Style = 3 ) = it's return chocolate1 color text with Italicized style   \n
                chocolate1("Hello World", Style = 4 ) = it's return chocolate1 color text with UnderLine          \n
                chocolate1("Hello World", Style = 5 ) = it's return Blinking chocolate1 color text                \n
        """
        if rgb:
            return (255, 127, 36)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 127, 36,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 127, 36)
                


def chocolate2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the chocolate2 colored text.\n
        chocolate2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use chocolate2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: chocolate2("text",bg='chocolate2') then it's apply the chocolate2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of chocolate2\n
                    for example : chocolate2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                chocolate2("Hello World", Style = 0 ) = it's return chocolate2 color text without any style       \n
                chocolate2("Hello World", Style = 1 ) = it's return chocolate2 color text with bold text          \n
                chocolate2("Hello World", Style = 2 ) = it's return chocolate2 color text with light text         \n
                chocolate2("Hello World", Style = 3 ) = it's return chocolate2 color text with Italicized style   \n
                chocolate2("Hello World", Style = 4 ) = it's return chocolate2 color text with UnderLine          \n
                chocolate2("Hello World", Style = 5 ) = it's return Blinking chocolate2 color text                \n
        """
        if rgb:
            return (238, 118, 33)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 118, 33,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 118, 33)
                


def chocolate3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the chocolate3 colored text.\n
        chocolate3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use chocolate3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: chocolate3("text",bg='chocolate3') then it's apply the chocolate3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of chocolate3\n
                    for example : chocolate3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                chocolate3("Hello World", Style = 0 ) = it's return chocolate3 color text without any style       \n
                chocolate3("Hello World", Style = 1 ) = it's return chocolate3 color text with bold text          \n
                chocolate3("Hello World", Style = 2 ) = it's return chocolate3 color text with light text         \n
                chocolate3("Hello World", Style = 3 ) = it's return chocolate3 color text with Italicized style   \n
                chocolate3("Hello World", Style = 4 ) = it's return chocolate3 color text with UnderLine          \n
                chocolate3("Hello World", Style = 5 ) = it's return Blinking chocolate3 color text                \n
        """
        if rgb:
            return (205, 102, 29)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 102, 29,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 102, 29)
                


def chocolate4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the chocolate4 colored text.\n
        chocolate4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use chocolate4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: chocolate4("text",bg='chocolate4') then it's apply the chocolate4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of chocolate4\n
                    for example : chocolate4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                chocolate4("Hello World", Style = 0 ) = it's return chocolate4 color text without any style       \n
                chocolate4("Hello World", Style = 1 ) = it's return chocolate4 color text with bold text          \n
                chocolate4("Hello World", Style = 2 ) = it's return chocolate4 color text with light text         \n
                chocolate4("Hello World", Style = 3 ) = it's return chocolate4 color text with Italicized style   \n
                chocolate4("Hello World", Style = 4 ) = it's return chocolate4 color text with UnderLine          \n
                chocolate4("Hello World", Style = 5 ) = it's return Blinking chocolate4 color text                \n
        """
        if rgb:
            return (139, 69, 19)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 69, 19,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 69, 19)
                


def peru( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the peru colored text.\n
        peru() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use perubg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: peru("text",bg='peru') then it's apply the peru color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of peru\n
                    for example : peru(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                peru("Hello World", Style = 0 ) = it's return peru color text without any style       \n
                peru("Hello World", Style = 1 ) = it's return peru color text with bold text          \n
                peru("Hello World", Style = 2 ) = it's return peru color text with light text         \n
                peru("Hello World", Style = 3 ) = it's return peru color text with Italicized style   \n
                peru("Hello World", Style = 4 ) = it's return peru color text with UnderLine          \n
                peru("Hello World", Style = 5 ) = it's return Blinking peru color text                \n
        """
        if rgb:
            return (205, 133, 63)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 133, 63,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 133, 63)
                


def tan( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the tan colored text.\n
        tan() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use tanbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: tan("text",bg='tan') then it's apply the tan color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of tan\n
                    for example : tan(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                tan("Hello World", Style = 0 ) = it's return tan color text without any style       \n
                tan("Hello World", Style = 1 ) = it's return tan color text with bold text          \n
                tan("Hello World", Style = 2 ) = it's return tan color text with light text         \n
                tan("Hello World", Style = 3 ) = it's return tan color text with Italicized style   \n
                tan("Hello World", Style = 4 ) = it's return tan color text with UnderLine          \n
                tan("Hello World", Style = 5 ) = it's return Blinking tan color text                \n
        """
        if rgb:
            return (210, 180, 140)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 210, 180, 140,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 210, 180, 140)
                


def tan1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the tan1 colored text.\n
        tan1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use tan1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: tan1("text",bg='tan1') then it's apply the tan1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of tan1\n
                    for example : tan1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                tan1("Hello World", Style = 0 ) = it's return tan1 color text without any style       \n
                tan1("Hello World", Style = 1 ) = it's return tan1 color text with bold text          \n
                tan1("Hello World", Style = 2 ) = it's return tan1 color text with light text         \n
                tan1("Hello World", Style = 3 ) = it's return tan1 color text with Italicized style   \n
                tan1("Hello World", Style = 4 ) = it's return tan1 color text with UnderLine          \n
                tan1("Hello World", Style = 5 ) = it's return Blinking tan1 color text                \n
        """
        if rgb:
            return (255, 165, 79)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 165, 79,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 165, 79)
                


def tan2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the tan2 colored text.\n
        tan2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use tan2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: tan2("text",bg='tan2') then it's apply the tan2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of tan2\n
                    for example : tan2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                tan2("Hello World", Style = 0 ) = it's return tan2 color text without any style       \n
                tan2("Hello World", Style = 1 ) = it's return tan2 color text with bold text          \n
                tan2("Hello World", Style = 2 ) = it's return tan2 color text with light text         \n
                tan2("Hello World", Style = 3 ) = it's return tan2 color text with Italicized style   \n
                tan2("Hello World", Style = 4 ) = it's return tan2 color text with UnderLine          \n
                tan2("Hello World", Style = 5 ) = it's return Blinking tan2 color text                \n
        """
        if rgb:
            return (238, 154, 73)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 154, 73,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 154, 73)
                


def tan3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the tan3 colored text.\n
        tan3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use tan3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: tan3("text",bg='tan3') then it's apply the tan3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of tan3\n
                    for example : tan3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                tan3("Hello World", Style = 0 ) = it's return tan3 color text without any style       \n
                tan3("Hello World", Style = 1 ) = it's return tan3 color text with bold text          \n
                tan3("Hello World", Style = 2 ) = it's return tan3 color text with light text         \n
                tan3("Hello World", Style = 3 ) = it's return tan3 color text with Italicized style   \n
                tan3("Hello World", Style = 4 ) = it's return tan3 color text with UnderLine          \n
                tan3("Hello World", Style = 5 ) = it's return Blinking tan3 color text                \n
        """
        if rgb:
            return (205, 133, 63)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 133, 63,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 133, 63)
                


def tan4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the tan4 colored text.\n
        tan4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use tan4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: tan4("text",bg='tan4') then it's apply the tan4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of tan4\n
                    for example : tan4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                tan4("Hello World", Style = 0 ) = it's return tan4 color text without any style       \n
                tan4("Hello World", Style = 1 ) = it's return tan4 color text with bold text          \n
                tan4("Hello World", Style = 2 ) = it's return tan4 color text with light text         \n
                tan4("Hello World", Style = 3 ) = it's return tan4 color text with Italicized style   \n
                tan4("Hello World", Style = 4 ) = it's return tan4 color text with UnderLine          \n
                tan4("Hello World", Style = 5 ) = it's return Blinking tan4 color text                \n
        """
        if rgb:
            return (139, 90, 43)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 90, 43,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 90, 43)
                


def dark_tan( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the dark_tan colored text.\n
        dark_tan() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use dark_tanbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: dark_tan("text",bg='dark_tan') then it's apply the dark_tan color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of dark_tan\n
                    for example : dark_tan(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                dark_tan("Hello World", Style = 0 ) = it's return dark_tan color text without any style       \n
                dark_tan("Hello World", Style = 1 ) = it's return dark_tan color text with bold text          \n
                dark_tan("Hello World", Style = 2 ) = it's return dark_tan color text with light text         \n
                dark_tan("Hello World", Style = 3 ) = it's return dark_tan color text with Italicized style   \n
                dark_tan("Hello World", Style = 4 ) = it's return dark_tan color text with UnderLine          \n
                dark_tan("Hello World", Style = 5 ) = it's return Blinking dark_tan color text                \n
        """
        if rgb:
            return (151, 105, 79)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 151, 105, 79,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 151, 105, 79)
                


def dark_wood( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the dark_wood colored text.\n
        dark_wood() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use dark_woodbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: dark_wood("text",bg='dark_wood') then it's apply the dark_wood color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of dark_wood\n
                    for example : dark_wood(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                dark_wood("Hello World", Style = 0 ) = it's return dark_wood color text without any style       \n
                dark_wood("Hello World", Style = 1 ) = it's return dark_wood color text with bold text          \n
                dark_wood("Hello World", Style = 2 ) = it's return dark_wood color text with light text         \n
                dark_wood("Hello World", Style = 3 ) = it's return dark_wood color text with Italicized style   \n
                dark_wood("Hello World", Style = 4 ) = it's return dark_wood color text with UnderLine          \n
                dark_wood("Hello World", Style = 5 ) = it's return Blinking dark_wood color text                \n
        """
        if rgb:
            return (133, 94, 66)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 133, 94, 66,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 133, 94, 66)
                


def light_wood( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the light_wood colored text.\n
        light_wood() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use light_woodbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: light_wood("text",bg='light_wood') then it's apply the light_wood color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of light_wood\n
                    for example : light_wood(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                light_wood("Hello World", Style = 0 ) = it's return light_wood color text without any style       \n
                light_wood("Hello World", Style = 1 ) = it's return light_wood color text with bold text          \n
                light_wood("Hello World", Style = 2 ) = it's return light_wood color text with light text         \n
                light_wood("Hello World", Style = 3 ) = it's return light_wood color text with Italicized style   \n
                light_wood("Hello World", Style = 4 ) = it's return light_wood color text with UnderLine          \n
                light_wood("Hello World", Style = 5 ) = it's return Blinking light_wood color text                \n
        """
        if rgb:
            return (133, 99, 99)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 133, 99, 99,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 133, 99, 99)
                


def medium_wood( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the medium_wood colored text.\n
        medium_wood() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use medium_woodbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: medium_wood("text",bg='medium_wood') then it's apply the medium_wood color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of medium_wood\n
                    for example : medium_wood(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                medium_wood("Hello World", Style = 0 ) = it's return medium_wood color text without any style       \n
                medium_wood("Hello World", Style = 1 ) = it's return medium_wood color text with bold text          \n
                medium_wood("Hello World", Style = 2 ) = it's return medium_wood color text with light text         \n
                medium_wood("Hello World", Style = 3 ) = it's return medium_wood color text with Italicized style   \n
                medium_wood("Hello World", Style = 4 ) = it's return medium_wood color text with UnderLine          \n
                medium_wood("Hello World", Style = 5 ) = it's return Blinking medium_wood color text                \n
        """
        if rgb:
            return (166, 128, 100)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 166, 128, 100,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 166, 128, 100)
                


def new_tan( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the new_tan colored text.\n
        new_tan() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use new_tanbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: new_tan("text",bg='new_tan') then it's apply the new_tan color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of new_tan\n
                    for example : new_tan(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                new_tan("Hello World", Style = 0 ) = it's return new_tan color text without any style       \n
                new_tan("Hello World", Style = 1 ) = it's return new_tan color text with bold text          \n
                new_tan("Hello World", Style = 2 ) = it's return new_tan color text with light text         \n
                new_tan("Hello World", Style = 3 ) = it's return new_tan color text with Italicized style   \n
                new_tan("Hello World", Style = 4 ) = it's return new_tan color text with UnderLine          \n
                new_tan("Hello World", Style = 5 ) = it's return Blinking new_tan color text                \n
        """
        if rgb:
            return (235, 199, 158)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 235, 199, 158,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 235, 199, 158)
                


def semi_sweet_chocolate( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the semi_sweet_chocolate colored text.\n
        semi_sweet_chocolate() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use semi_sweet_chocolatebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: semi_sweet_chocolate("text",bg='semi_sweet_chocolate') then it's apply the semi_sweet_chocolate color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of semi_sweet_chocolate\n
                    for example : semi_sweet_chocolate(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                semi_sweet_chocolate("Hello World", Style = 0 ) = it's return semi_sweet_chocolate color text without any style       \n
                semi_sweet_chocolate("Hello World", Style = 1 ) = it's return semi_sweet_chocolate color text with bold text          \n
                semi_sweet_chocolate("Hello World", Style = 2 ) = it's return semi_sweet_chocolate color text with light text         \n
                semi_sweet_chocolate("Hello World", Style = 3 ) = it's return semi_sweet_chocolate color text with Italicized style   \n
                semi_sweet_chocolate("Hello World", Style = 4 ) = it's return semi_sweet_chocolate color text with UnderLine          \n
                semi_sweet_chocolate("Hello World", Style = 5 ) = it's return Blinking semi_sweet_chocolate color text                \n
        """
        if rgb:
            return (107, 66, 38)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 107, 66, 38,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 107, 66, 38)
                


def sienna( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the sienna colored text.\n
        sienna() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use siennabg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: sienna("text",bg='sienna') then it's apply the sienna color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of sienna\n
                    for example : sienna(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                sienna("Hello World", Style = 0 ) = it's return sienna color text without any style       \n
                sienna("Hello World", Style = 1 ) = it's return sienna color text with bold text          \n
                sienna("Hello World", Style = 2 ) = it's return sienna color text with light text         \n
                sienna("Hello World", Style = 3 ) = it's return sienna color text with Italicized style   \n
                sienna("Hello World", Style = 4 ) = it's return sienna color text with UnderLine          \n
                sienna("Hello World", Style = 5 ) = it's return Blinking sienna color text                \n
        """
        if rgb:
            return (142, 107, 35)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 142, 107, 35,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 142, 107, 35)
                


def tan( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the tan colored text.\n
        tan() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use tanbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: tan("text",bg='tan') then it's apply the tan color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of tan\n
                    for example : tan(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                tan("Hello World", Style = 0 ) = it's return tan color text without any style       \n
                tan("Hello World", Style = 1 ) = it's return tan color text with bold text          \n
                tan("Hello World", Style = 2 ) = it's return tan color text with light text         \n
                tan("Hello World", Style = 3 ) = it's return tan color text with Italicized style   \n
                tan("Hello World", Style = 4 ) = it's return tan color text with UnderLine          \n
                tan("Hello World", Style = 5 ) = it's return Blinking tan color text                \n
        """
        if rgb:
            return (219, 147, 112)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 219, 147, 112,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 219, 147, 112)
                


def very_dark_brown( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the very_dark_brown colored text.\n
        very_dark_brown() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use very_dark_brownbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: very_dark_brown("text",bg='very_dark_brown') then it's apply the very_dark_brown color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of very_dark_brown\n
                    for example : very_dark_brown(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                very_dark_brown("Hello World", Style = 0 ) = it's return very_dark_brown color text without any style       \n
                very_dark_brown("Hello World", Style = 1 ) = it's return very_dark_brown color text with bold text          \n
                very_dark_brown("Hello World", Style = 2 ) = it's return very_dark_brown color text with light text         \n
                very_dark_brown("Hello World", Style = 3 ) = it's return very_dark_brown color text with Italicized style   \n
                very_dark_brown("Hello World", Style = 4 ) = it's return very_dark_brown color text with UnderLine          \n
                very_dark_brown("Hello World", Style = 5 ) = it's return Blinking very_dark_brown color text                \n
        """
        if rgb:
            return (92, 64, 51)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 92, 64, 51,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 92, 64, 51)
                


def dark_green( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the dark_green colored text.\n
        dark_green() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use dark_greenbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: dark_green("text",bg='dark_green') then it's apply the dark_green color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of dark_green\n
                    for example : dark_green(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                dark_green("Hello World", Style = 0 ) = it's return dark_green color text without any style       \n
                dark_green("Hello World", Style = 1 ) = it's return dark_green color text with bold text          \n
                dark_green("Hello World", Style = 2 ) = it's return dark_green color text with light text         \n
                dark_green("Hello World", Style = 3 ) = it's return dark_green color text with Italicized style   \n
                dark_green("Hello World", Style = 4 ) = it's return dark_green color text with UnderLine          \n
                dark_green("Hello World", Style = 5 ) = it's return Blinking dark_green color text                \n
        """
        if rgb:
            return (47, 79, 47)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 47, 79, 47,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 47, 79, 47)
                


def darkgreen( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darkgreen colored text.\n
        darkgreen() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darkgreenbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darkgreen("text",bg='darkgreen') then it's apply the darkgreen color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darkgreen\n
                    for example : darkgreen(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darkgreen("Hello World", Style = 0 ) = it's return darkgreen color text without any style       \n
                darkgreen("Hello World", Style = 1 ) = it's return darkgreen color text with bold text          \n
                darkgreen("Hello World", Style = 2 ) = it's return darkgreen color text with light text         \n
                darkgreen("Hello World", Style = 3 ) = it's return darkgreen color text with Italicized style   \n
                darkgreen("Hello World", Style = 4 ) = it's return darkgreen color text with UnderLine          \n
                darkgreen("Hello World", Style = 5 ) = it's return Blinking darkgreen color text                \n
        """
        if rgb:
            return (0, 100, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 100, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 100, 0)
                


def dark_green_copper( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the dark_green_copper colored text.\n
        dark_green_copper() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use dark_green_copperbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: dark_green_copper("text",bg='dark_green_copper') then it's apply the dark_green_copper color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of dark_green_copper\n
                    for example : dark_green_copper(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                dark_green_copper("Hello World", Style = 0 ) = it's return dark_green_copper color text without any style       \n
                dark_green_copper("Hello World", Style = 1 ) = it's return dark_green_copper color text with bold text          \n
                dark_green_copper("Hello World", Style = 2 ) = it's return dark_green_copper color text with light text         \n
                dark_green_copper("Hello World", Style = 3 ) = it's return dark_green_copper color text with Italicized style   \n
                dark_green_copper("Hello World", Style = 4 ) = it's return dark_green_copper color text with UnderLine          \n
                dark_green_copper("Hello World", Style = 5 ) = it's return Blinking dark_green_copper color text                \n
        """
        if rgb:
            return (74, 118, 110)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 74, 118, 110,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 74, 118, 110)
                


def darkkhaki( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darkkhaki colored text.\n
        darkkhaki() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darkkhakibg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darkkhaki("text",bg='darkkhaki') then it's apply the darkkhaki color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darkkhaki\n
                    for example : darkkhaki(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darkkhaki("Hello World", Style = 0 ) = it's return darkkhaki color text without any style       \n
                darkkhaki("Hello World", Style = 1 ) = it's return darkkhaki color text with bold text          \n
                darkkhaki("Hello World", Style = 2 ) = it's return darkkhaki color text with light text         \n
                darkkhaki("Hello World", Style = 3 ) = it's return darkkhaki color text with Italicized style   \n
                darkkhaki("Hello World", Style = 4 ) = it's return darkkhaki color text with UnderLine          \n
                darkkhaki("Hello World", Style = 5 ) = it's return Blinking darkkhaki color text                \n
        """
        if rgb:
            return (189, 183, 107)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 189, 183, 107,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 189, 183, 107)
                


def darkolivegreen( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darkolivegreen colored text.\n
        darkolivegreen() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darkolivegreenbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darkolivegreen("text",bg='darkolivegreen') then it's apply the darkolivegreen color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darkolivegreen\n
                    for example : darkolivegreen(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darkolivegreen("Hello World", Style = 0 ) = it's return darkolivegreen color text without any style       \n
                darkolivegreen("Hello World", Style = 1 ) = it's return darkolivegreen color text with bold text          \n
                darkolivegreen("Hello World", Style = 2 ) = it's return darkolivegreen color text with light text         \n
                darkolivegreen("Hello World", Style = 3 ) = it's return darkolivegreen color text with Italicized style   \n
                darkolivegreen("Hello World", Style = 4 ) = it's return darkolivegreen color text with UnderLine          \n
                darkolivegreen("Hello World", Style = 5 ) = it's return Blinking darkolivegreen color text                \n
        """
        if rgb:
            return (85, 107, 47)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 85, 107, 47,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 85, 107, 47)
                


def darkolivegreen1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darkolivegreen1 colored text.\n
        darkolivegreen1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darkolivegreen1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darkolivegreen1("text",bg='darkolivegreen1') then it's apply the darkolivegreen1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darkolivegreen1\n
                    for example : darkolivegreen1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darkolivegreen1("Hello World", Style = 0 ) = it's return darkolivegreen1 color text without any style       \n
                darkolivegreen1("Hello World", Style = 1 ) = it's return darkolivegreen1 color text with bold text          \n
                darkolivegreen1("Hello World", Style = 2 ) = it's return darkolivegreen1 color text with light text         \n
                darkolivegreen1("Hello World", Style = 3 ) = it's return darkolivegreen1 color text with Italicized style   \n
                darkolivegreen1("Hello World", Style = 4 ) = it's return darkolivegreen1 color text with UnderLine          \n
                darkolivegreen1("Hello World", Style = 5 ) = it's return Blinking darkolivegreen1 color text                \n
        """
        if rgb:
            return (202, 255, 112)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 202, 255, 112,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 202, 255, 112)
                


def darkolivegreen2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darkolivegreen2 colored text.\n
        darkolivegreen2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darkolivegreen2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darkolivegreen2("text",bg='darkolivegreen2') then it's apply the darkolivegreen2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darkolivegreen2\n
                    for example : darkolivegreen2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darkolivegreen2("Hello World", Style = 0 ) = it's return darkolivegreen2 color text without any style       \n
                darkolivegreen2("Hello World", Style = 1 ) = it's return darkolivegreen2 color text with bold text          \n
                darkolivegreen2("Hello World", Style = 2 ) = it's return darkolivegreen2 color text with light text         \n
                darkolivegreen2("Hello World", Style = 3 ) = it's return darkolivegreen2 color text with Italicized style   \n
                darkolivegreen2("Hello World", Style = 4 ) = it's return darkolivegreen2 color text with UnderLine          \n
                darkolivegreen2("Hello World", Style = 5 ) = it's return Blinking darkolivegreen2 color text                \n
        """
        if rgb:
            return (188, 238, 104)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 188, 238, 104,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 188, 238, 104)
                


def darkolivegreen3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darkolivegreen3 colored text.\n
        darkolivegreen3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darkolivegreen3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darkolivegreen3("text",bg='darkolivegreen3') then it's apply the darkolivegreen3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darkolivegreen3\n
                    for example : darkolivegreen3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darkolivegreen3("Hello World", Style = 0 ) = it's return darkolivegreen3 color text without any style       \n
                darkolivegreen3("Hello World", Style = 1 ) = it's return darkolivegreen3 color text with bold text          \n
                darkolivegreen3("Hello World", Style = 2 ) = it's return darkolivegreen3 color text with light text         \n
                darkolivegreen3("Hello World", Style = 3 ) = it's return darkolivegreen3 color text with Italicized style   \n
                darkolivegreen3("Hello World", Style = 4 ) = it's return darkolivegreen3 color text with UnderLine          \n
                darkolivegreen3("Hello World", Style = 5 ) = it's return Blinking darkolivegreen3 color text                \n
        """
        if rgb:
            return (162, 205, 90)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 162, 205, 90,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 162, 205, 90)
                


def darkolivegreen4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darkolivegreen4 colored text.\n
        darkolivegreen4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darkolivegreen4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darkolivegreen4("text",bg='darkolivegreen4') then it's apply the darkolivegreen4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darkolivegreen4\n
                    for example : darkolivegreen4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darkolivegreen4("Hello World", Style = 0 ) = it's return darkolivegreen4 color text without any style       \n
                darkolivegreen4("Hello World", Style = 1 ) = it's return darkolivegreen4 color text with bold text          \n
                darkolivegreen4("Hello World", Style = 2 ) = it's return darkolivegreen4 color text with light text         \n
                darkolivegreen4("Hello World", Style = 3 ) = it's return darkolivegreen4 color text with Italicized style   \n
                darkolivegreen4("Hello World", Style = 4 ) = it's return darkolivegreen4 color text with UnderLine          \n
                darkolivegreen4("Hello World", Style = 5 ) = it's return Blinking darkolivegreen4 color text                \n
        """
        if rgb:
            return (110, 139, 61)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 110, 139, 61,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 110, 139, 61)
                


def olive( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the olive colored text.\n
        olive() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use olivebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: olive("text",bg='olive') then it's apply the olive color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of olive\n
                    for example : olive(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                olive("Hello World", Style = 0 ) = it's return olive color text without any style       \n
                olive("Hello World", Style = 1 ) = it's return olive color text with bold text          \n
                olive("Hello World", Style = 2 ) = it's return olive color text with light text         \n
                olive("Hello World", Style = 3 ) = it's return olive color text with Italicized style   \n
                olive("Hello World", Style = 4 ) = it's return olive color text with UnderLine          \n
                olive("Hello World", Style = 5 ) = it's return Blinking olive color text                \n
        """
        if rgb:
            return (128, 128, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 128, 128, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 128, 128, 0)
                


def darkseagreen( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darkseagreen colored text.\n
        darkseagreen() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darkseagreenbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darkseagreen("text",bg='darkseagreen') then it's apply the darkseagreen color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darkseagreen\n
                    for example : darkseagreen(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darkseagreen("Hello World", Style = 0 ) = it's return darkseagreen color text without any style       \n
                darkseagreen("Hello World", Style = 1 ) = it's return darkseagreen color text with bold text          \n
                darkseagreen("Hello World", Style = 2 ) = it's return darkseagreen color text with light text         \n
                darkseagreen("Hello World", Style = 3 ) = it's return darkseagreen color text with Italicized style   \n
                darkseagreen("Hello World", Style = 4 ) = it's return darkseagreen color text with UnderLine          \n
                darkseagreen("Hello World", Style = 5 ) = it's return Blinking darkseagreen color text                \n
        """
        if rgb:
            return (143, 188, 143)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 143, 188, 143,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 143, 188, 143)
                


def darkseagreen1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darkseagreen1 colored text.\n
        darkseagreen1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darkseagreen1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darkseagreen1("text",bg='darkseagreen1') then it's apply the darkseagreen1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darkseagreen1\n
                    for example : darkseagreen1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darkseagreen1("Hello World", Style = 0 ) = it's return darkseagreen1 color text without any style       \n
                darkseagreen1("Hello World", Style = 1 ) = it's return darkseagreen1 color text with bold text          \n
                darkseagreen1("Hello World", Style = 2 ) = it's return darkseagreen1 color text with light text         \n
                darkseagreen1("Hello World", Style = 3 ) = it's return darkseagreen1 color text with Italicized style   \n
                darkseagreen1("Hello World", Style = 4 ) = it's return darkseagreen1 color text with UnderLine          \n
                darkseagreen1("Hello World", Style = 5 ) = it's return Blinking darkseagreen1 color text                \n
        """
        if rgb:
            return (193, 255, 193)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 193, 255, 193,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 193, 255, 193)
                


def darkseagreen2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darkseagreen2 colored text.\n
        darkseagreen2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darkseagreen2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darkseagreen2("text",bg='darkseagreen2') then it's apply the darkseagreen2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darkseagreen2\n
                    for example : darkseagreen2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darkseagreen2("Hello World", Style = 0 ) = it's return darkseagreen2 color text without any style       \n
                darkseagreen2("Hello World", Style = 1 ) = it's return darkseagreen2 color text with bold text          \n
                darkseagreen2("Hello World", Style = 2 ) = it's return darkseagreen2 color text with light text         \n
                darkseagreen2("Hello World", Style = 3 ) = it's return darkseagreen2 color text with Italicized style   \n
                darkseagreen2("Hello World", Style = 4 ) = it's return darkseagreen2 color text with UnderLine          \n
                darkseagreen2("Hello World", Style = 5 ) = it's return Blinking darkseagreen2 color text                \n
        """
        if rgb:
            return (180, 238, 180)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 180, 238, 180,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 180, 238, 180)
                


def darkseagreen3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darkseagreen3 colored text.\n
        darkseagreen3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darkseagreen3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darkseagreen3("text",bg='darkseagreen3') then it's apply the darkseagreen3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darkseagreen3\n
                    for example : darkseagreen3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darkseagreen3("Hello World", Style = 0 ) = it's return darkseagreen3 color text without any style       \n
                darkseagreen3("Hello World", Style = 1 ) = it's return darkseagreen3 color text with bold text          \n
                darkseagreen3("Hello World", Style = 2 ) = it's return darkseagreen3 color text with light text         \n
                darkseagreen3("Hello World", Style = 3 ) = it's return darkseagreen3 color text with Italicized style   \n
                darkseagreen3("Hello World", Style = 4 ) = it's return darkseagreen3 color text with UnderLine          \n
                darkseagreen3("Hello World", Style = 5 ) = it's return Blinking darkseagreen3 color text                \n
        """
        if rgb:
            return (155, 205, 155)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 155, 205, 155,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 155, 205, 155)
                


def darkseagreen4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darkseagreen4 colored text.\n
        darkseagreen4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darkseagreen4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darkseagreen4("text",bg='darkseagreen4') then it's apply the darkseagreen4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darkseagreen4\n
                    for example : darkseagreen4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darkseagreen4("Hello World", Style = 0 ) = it's return darkseagreen4 color text without any style       \n
                darkseagreen4("Hello World", Style = 1 ) = it's return darkseagreen4 color text with bold text          \n
                darkseagreen4("Hello World", Style = 2 ) = it's return darkseagreen4 color text with light text         \n
                darkseagreen4("Hello World", Style = 3 ) = it's return darkseagreen4 color text with Italicized style   \n
                darkseagreen4("Hello World", Style = 4 ) = it's return darkseagreen4 color text with UnderLine          \n
                darkseagreen4("Hello World", Style = 5 ) = it's return Blinking darkseagreen4 color text                \n
        """
        if rgb:
            return (105, 139, 105)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 105, 139, 105,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 105, 139, 105)
                


def forestgreen( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the forestgreen colored text.\n
        forestgreen() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use forestgreenbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: forestgreen("text",bg='forestgreen') then it's apply the forestgreen color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of forestgreen\n
                    for example : forestgreen(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                forestgreen("Hello World", Style = 0 ) = it's return forestgreen color text without any style       \n
                forestgreen("Hello World", Style = 1 ) = it's return forestgreen color text with bold text          \n
                forestgreen("Hello World", Style = 2 ) = it's return forestgreen color text with light text         \n
                forestgreen("Hello World", Style = 3 ) = it's return forestgreen color text with Italicized style   \n
                forestgreen("Hello World", Style = 4 ) = it's return forestgreen color text with UnderLine          \n
                forestgreen("Hello World", Style = 5 ) = it's return Blinking forestgreen color text                \n
        """
        if rgb:
            return (34, 139, 34)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 34, 139, 34,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 34, 139, 34)
                


def greenyellow( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the greenyellow colored text.\n
        greenyellow() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use greenyellowbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: greenyellow("text",bg='greenyellow') then it's apply the greenyellow color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of greenyellow\n
                    for example : greenyellow(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                greenyellow("Hello World", Style = 0 ) = it's return greenyellow color text without any style       \n
                greenyellow("Hello World", Style = 1 ) = it's return greenyellow color text with bold text          \n
                greenyellow("Hello World", Style = 2 ) = it's return greenyellow color text with light text         \n
                greenyellow("Hello World", Style = 3 ) = it's return greenyellow color text with Italicized style   \n
                greenyellow("Hello World", Style = 4 ) = it's return greenyellow color text with UnderLine          \n
                greenyellow("Hello World", Style = 5 ) = it's return Blinking greenyellow color text                \n
        """
        if rgb:
            return (173, 255, 47)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 173, 255, 47,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 173, 255, 47)
                


def lawngreen( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lawngreen colored text.\n
        lawngreen() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lawngreenbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lawngreen("text",bg='lawngreen') then it's apply the lawngreen color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lawngreen\n
                    for example : lawngreen(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lawngreen("Hello World", Style = 0 ) = it's return lawngreen color text without any style       \n
                lawngreen("Hello World", Style = 1 ) = it's return lawngreen color text with bold text          \n
                lawngreen("Hello World", Style = 2 ) = it's return lawngreen color text with light text         \n
                lawngreen("Hello World", Style = 3 ) = it's return lawngreen color text with Italicized style   \n
                lawngreen("Hello World", Style = 4 ) = it's return lawngreen color text with UnderLine          \n
                lawngreen("Hello World", Style = 5 ) = it's return Blinking lawngreen color text                \n
        """
        if rgb:
            return (124, 252, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 124, 252, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 124, 252, 0)
                


def lightseagreen( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightseagreen colored text.\n
        lightseagreen() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightseagreenbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightseagreen("text",bg='lightseagreen') then it's apply the lightseagreen color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightseagreen\n
                    for example : lightseagreen(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightseagreen("Hello World", Style = 0 ) = it's return lightseagreen color text without any style       \n
                lightseagreen("Hello World", Style = 1 ) = it's return lightseagreen color text with bold text          \n
                lightseagreen("Hello World", Style = 2 ) = it's return lightseagreen color text with light text         \n
                lightseagreen("Hello World", Style = 3 ) = it's return lightseagreen color text with Italicized style   \n
                lightseagreen("Hello World", Style = 4 ) = it's return lightseagreen color text with UnderLine          \n
                lightseagreen("Hello World", Style = 5 ) = it's return Blinking lightseagreen color text                \n
        """
        if rgb:
            return (32, 178, 170)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 32, 178, 170,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 32, 178, 170)
                


def limegreen( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the limegreen colored text.\n
        limegreen() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use limegreenbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: limegreen("text",bg='limegreen') then it's apply the limegreen color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of limegreen\n
                    for example : limegreen(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                limegreen("Hello World", Style = 0 ) = it's return limegreen color text without any style       \n
                limegreen("Hello World", Style = 1 ) = it's return limegreen color text with bold text          \n
                limegreen("Hello World", Style = 2 ) = it's return limegreen color text with light text         \n
                limegreen("Hello World", Style = 3 ) = it's return limegreen color text with Italicized style   \n
                limegreen("Hello World", Style = 4 ) = it's return limegreen color text with UnderLine          \n
                limegreen("Hello World", Style = 5 ) = it's return Blinking limegreen color text                \n
        """
        if rgb:
            return (50, 205, 50)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 50, 205, 50,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 50, 205, 50)
                


def mediumseagreen( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the mediumseagreen colored text.\n
        mediumseagreen() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use mediumseagreenbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: mediumseagreen("text",bg='mediumseagreen') then it's apply the mediumseagreen color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of mediumseagreen\n
                    for example : mediumseagreen(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                mediumseagreen("Hello World", Style = 0 ) = it's return mediumseagreen color text without any style       \n
                mediumseagreen("Hello World", Style = 1 ) = it's return mediumseagreen color text with bold text          \n
                mediumseagreen("Hello World", Style = 2 ) = it's return mediumseagreen color text with light text         \n
                mediumseagreen("Hello World", Style = 3 ) = it's return mediumseagreen color text with Italicized style   \n
                mediumseagreen("Hello World", Style = 4 ) = it's return mediumseagreen color text with UnderLine          \n
                mediumseagreen("Hello World", Style = 5 ) = it's return Blinking mediumseagreen color text                \n
        """
        if rgb:
            return (60, 179, 113)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 60, 179, 113,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 60, 179, 113)
                


def mediumspringgreen( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the mediumspringgreen colored text.\n
        mediumspringgreen() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use mediumspringgreenbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: mediumspringgreen("text",bg='mediumspringgreen') then it's apply the mediumspringgreen color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of mediumspringgreen\n
                    for example : mediumspringgreen(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                mediumspringgreen("Hello World", Style = 0 ) = it's return mediumspringgreen color text without any style       \n
                mediumspringgreen("Hello World", Style = 1 ) = it's return mediumspringgreen color text with bold text          \n
                mediumspringgreen("Hello World", Style = 2 ) = it's return mediumspringgreen color text with light text         \n
                mediumspringgreen("Hello World", Style = 3 ) = it's return mediumspringgreen color text with Italicized style   \n
                mediumspringgreen("Hello World", Style = 4 ) = it's return mediumspringgreen color text with UnderLine          \n
                mediumspringgreen("Hello World", Style = 5 ) = it's return Blinking mediumspringgreen color text                \n
        """
        if rgb:
            return (0, 250, 154)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 250, 154,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 250, 154)
                


def mintcream( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the mintcream colored text.\n
        mintcream() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use mintcreambg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: mintcream("text",bg='mintcream') then it's apply the mintcream color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of mintcream\n
                    for example : mintcream(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                mintcream("Hello World", Style = 0 ) = it's return mintcream color text without any style       \n
                mintcream("Hello World", Style = 1 ) = it's return mintcream color text with bold text          \n
                mintcream("Hello World", Style = 2 ) = it's return mintcream color text with light text         \n
                mintcream("Hello World", Style = 3 ) = it's return mintcream color text with Italicized style   \n
                mintcream("Hello World", Style = 4 ) = it's return mintcream color text with UnderLine          \n
                mintcream("Hello World", Style = 5 ) = it's return Blinking mintcream color text                \n
        """
        if rgb:
            return (245, 255, 250)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 245, 255, 250,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 245, 255, 250)
                


def olivedrab( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the olivedrab colored text.\n
        olivedrab() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use olivedrabbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: olivedrab("text",bg='olivedrab') then it's apply the olivedrab color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of olivedrab\n
                    for example : olivedrab(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                olivedrab("Hello World", Style = 0 ) = it's return olivedrab color text without any style       \n
                olivedrab("Hello World", Style = 1 ) = it's return olivedrab color text with bold text          \n
                olivedrab("Hello World", Style = 2 ) = it's return olivedrab color text with light text         \n
                olivedrab("Hello World", Style = 3 ) = it's return olivedrab color text with Italicized style   \n
                olivedrab("Hello World", Style = 4 ) = it's return olivedrab color text with UnderLine          \n
                olivedrab("Hello World", Style = 5 ) = it's return Blinking olivedrab color text                \n
        """
        if rgb:
            return (107, 142, 35)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 107, 142, 35,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 107, 142, 35)
                


def olivedrab1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the olivedrab1 colored text.\n
        olivedrab1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use olivedrab1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: olivedrab1("text",bg='olivedrab1') then it's apply the olivedrab1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of olivedrab1\n
                    for example : olivedrab1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                olivedrab1("Hello World", Style = 0 ) = it's return olivedrab1 color text without any style       \n
                olivedrab1("Hello World", Style = 1 ) = it's return olivedrab1 color text with bold text          \n
                olivedrab1("Hello World", Style = 2 ) = it's return olivedrab1 color text with light text         \n
                olivedrab1("Hello World", Style = 3 ) = it's return olivedrab1 color text with Italicized style   \n
                olivedrab1("Hello World", Style = 4 ) = it's return olivedrab1 color text with UnderLine          \n
                olivedrab1("Hello World", Style = 5 ) = it's return Blinking olivedrab1 color text                \n
        """
        if rgb:
            return (192, 255, 62)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 192, 255, 62,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 192, 255, 62)
                


def olivedrab2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the olivedrab2 colored text.\n
        olivedrab2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use olivedrab2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: olivedrab2("text",bg='olivedrab2') then it's apply the olivedrab2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of olivedrab2\n
                    for example : olivedrab2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                olivedrab2("Hello World", Style = 0 ) = it's return olivedrab2 color text without any style       \n
                olivedrab2("Hello World", Style = 1 ) = it's return olivedrab2 color text with bold text          \n
                olivedrab2("Hello World", Style = 2 ) = it's return olivedrab2 color text with light text         \n
                olivedrab2("Hello World", Style = 3 ) = it's return olivedrab2 color text with Italicized style   \n
                olivedrab2("Hello World", Style = 4 ) = it's return olivedrab2 color text with UnderLine          \n
                olivedrab2("Hello World", Style = 5 ) = it's return Blinking olivedrab2 color text                \n
        """
        if rgb:
            return (179, 238, 58)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 179, 238, 58,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 179, 238, 58)
                


def olivedrab3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the olivedrab3 colored text.\n
        olivedrab3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use olivedrab3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: olivedrab3("text",bg='olivedrab3') then it's apply the olivedrab3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of olivedrab3\n
                    for example : olivedrab3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                olivedrab3("Hello World", Style = 0 ) = it's return olivedrab3 color text without any style       \n
                olivedrab3("Hello World", Style = 1 ) = it's return olivedrab3 color text with bold text          \n
                olivedrab3("Hello World", Style = 2 ) = it's return olivedrab3 color text with light text         \n
                olivedrab3("Hello World", Style = 3 ) = it's return olivedrab3 color text with Italicized style   \n
                olivedrab3("Hello World", Style = 4 ) = it's return olivedrab3 color text with UnderLine          \n
                olivedrab3("Hello World", Style = 5 ) = it's return Blinking olivedrab3 color text                \n
        """
        if rgb:
            return (154, 205, 50)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 154, 205, 50,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 154, 205, 50)
                


def olivedrab4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the olivedrab4 colored text.\n
        olivedrab4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use olivedrab4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: olivedrab4("text",bg='olivedrab4') then it's apply the olivedrab4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of olivedrab4\n
                    for example : olivedrab4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                olivedrab4("Hello World", Style = 0 ) = it's return olivedrab4 color text without any style       \n
                olivedrab4("Hello World", Style = 1 ) = it's return olivedrab4 color text with bold text          \n
                olivedrab4("Hello World", Style = 2 ) = it's return olivedrab4 color text with light text         \n
                olivedrab4("Hello World", Style = 3 ) = it's return olivedrab4 color text with Italicized style   \n
                olivedrab4("Hello World", Style = 4 ) = it's return olivedrab4 color text with UnderLine          \n
                olivedrab4("Hello World", Style = 5 ) = it's return Blinking olivedrab4 color text                \n
        """
        if rgb:
            return (105, 139, 34)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 105, 139, 34,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 105, 139, 34)
                


def palegreen( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the palegreen colored text.\n
        palegreen() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use palegreenbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: palegreen("text",bg='palegreen') then it's apply the palegreen color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of palegreen\n
                    for example : palegreen(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                palegreen("Hello World", Style = 0 ) = it's return palegreen color text without any style       \n
                palegreen("Hello World", Style = 1 ) = it's return palegreen color text with bold text          \n
                palegreen("Hello World", Style = 2 ) = it's return palegreen color text with light text         \n
                palegreen("Hello World", Style = 3 ) = it's return palegreen color text with Italicized style   \n
                palegreen("Hello World", Style = 4 ) = it's return palegreen color text with UnderLine          \n
                palegreen("Hello World", Style = 5 ) = it's return Blinking palegreen color text                \n
        """
        if rgb:
            return (152, 251, 152)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 152, 251, 152,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 152, 251, 152)
                


def palegreen1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the palegreen1 colored text.\n
        palegreen1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use palegreen1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: palegreen1("text",bg='palegreen1') then it's apply the palegreen1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of palegreen1\n
                    for example : palegreen1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                palegreen1("Hello World", Style = 0 ) = it's return palegreen1 color text without any style       \n
                palegreen1("Hello World", Style = 1 ) = it's return palegreen1 color text with bold text          \n
                palegreen1("Hello World", Style = 2 ) = it's return palegreen1 color text with light text         \n
                palegreen1("Hello World", Style = 3 ) = it's return palegreen1 color text with Italicized style   \n
                palegreen1("Hello World", Style = 4 ) = it's return palegreen1 color text with UnderLine          \n
                palegreen1("Hello World", Style = 5 ) = it's return Blinking palegreen1 color text                \n
        """
        if rgb:
            return (154, 255, 154)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 154, 255, 154,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 154, 255, 154)
                


def palegreen2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the palegreen2 colored text.\n
        palegreen2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use palegreen2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: palegreen2("text",bg='palegreen2') then it's apply the palegreen2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of palegreen2\n
                    for example : palegreen2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                palegreen2("Hello World", Style = 0 ) = it's return palegreen2 color text without any style       \n
                palegreen2("Hello World", Style = 1 ) = it's return palegreen2 color text with bold text          \n
                palegreen2("Hello World", Style = 2 ) = it's return palegreen2 color text with light text         \n
                palegreen2("Hello World", Style = 3 ) = it's return palegreen2 color text with Italicized style   \n
                palegreen2("Hello World", Style = 4 ) = it's return palegreen2 color text with UnderLine          \n
                palegreen2("Hello World", Style = 5 ) = it's return Blinking palegreen2 color text                \n
        """
        if rgb:
            return (144, 238, 144)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 144, 238, 144,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 144, 238, 144)
                


def palegreen3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the palegreen3 colored text.\n
        palegreen3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use palegreen3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: palegreen3("text",bg='palegreen3') then it's apply the palegreen3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of palegreen3\n
                    for example : palegreen3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                palegreen3("Hello World", Style = 0 ) = it's return palegreen3 color text without any style       \n
                palegreen3("Hello World", Style = 1 ) = it's return palegreen3 color text with bold text          \n
                palegreen3("Hello World", Style = 2 ) = it's return palegreen3 color text with light text         \n
                palegreen3("Hello World", Style = 3 ) = it's return palegreen3 color text with Italicized style   \n
                palegreen3("Hello World", Style = 4 ) = it's return palegreen3 color text with UnderLine          \n
                palegreen3("Hello World", Style = 5 ) = it's return Blinking palegreen3 color text                \n
        """
        if rgb:
            return (124, 205, 124)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 124, 205, 124,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 124, 205, 124)
                


def palegreen4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the palegreen4 colored text.\n
        palegreen4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use palegreen4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: palegreen4("text",bg='palegreen4') then it's apply the palegreen4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of palegreen4\n
                    for example : palegreen4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                palegreen4("Hello World", Style = 0 ) = it's return palegreen4 color text without any style       \n
                palegreen4("Hello World", Style = 1 ) = it's return palegreen4 color text with bold text          \n
                palegreen4("Hello World", Style = 2 ) = it's return palegreen4 color text with light text         \n
                palegreen4("Hello World", Style = 3 ) = it's return palegreen4 color text with Italicized style   \n
                palegreen4("Hello World", Style = 4 ) = it's return palegreen4 color text with UnderLine          \n
                palegreen4("Hello World", Style = 5 ) = it's return Blinking palegreen4 color text                \n
        """
        if rgb:
            return (84, 139, 84)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 84, 139, 84,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 84, 139, 84)
                


def seagreen_seagreen4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the seagreen_seagreen4 colored text.\n
        seagreen_seagreen4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use seagreen_seagreen4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: seagreen_seagreen4("text",bg='seagreen_seagreen4') then it's apply the seagreen_seagreen4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of seagreen_seagreen4\n
                    for example : seagreen_seagreen4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                seagreen_seagreen4("Hello World", Style = 0 ) = it's return seagreen_seagreen4 color text without any style       \n
                seagreen_seagreen4("Hello World", Style = 1 ) = it's return seagreen_seagreen4 color text with bold text          \n
                seagreen_seagreen4("Hello World", Style = 2 ) = it's return seagreen_seagreen4 color text with light text         \n
                seagreen_seagreen4("Hello World", Style = 3 ) = it's return seagreen_seagreen4 color text with Italicized style   \n
                seagreen_seagreen4("Hello World", Style = 4 ) = it's return seagreen_seagreen4 color text with UnderLine          \n
                seagreen_seagreen4("Hello World", Style = 5 ) = it's return Blinking seagreen_seagreen4 color text                \n
        """
        if rgb:
            return (46, 139, 87)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 46, 139, 87,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 46, 139, 87)
                


def seagreen1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the seagreen1 colored text.\n
        seagreen1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use seagreen1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: seagreen1("text",bg='seagreen1') then it's apply the seagreen1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of seagreen1\n
                    for example : seagreen1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                seagreen1("Hello World", Style = 0 ) = it's return seagreen1 color text without any style       \n
                seagreen1("Hello World", Style = 1 ) = it's return seagreen1 color text with bold text          \n
                seagreen1("Hello World", Style = 2 ) = it's return seagreen1 color text with light text         \n
                seagreen1("Hello World", Style = 3 ) = it's return seagreen1 color text with Italicized style   \n
                seagreen1("Hello World", Style = 4 ) = it's return seagreen1 color text with UnderLine          \n
                seagreen1("Hello World", Style = 5 ) = it's return Blinking seagreen1 color text                \n
        """
        if rgb:
            return (84, 255, 159)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 84, 255, 159,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 84, 255, 159)
                


def seagreen2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the seagreen2 colored text.\n
        seagreen2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use seagreen2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: seagreen2("text",bg='seagreen2') then it's apply the seagreen2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of seagreen2\n
                    for example : seagreen2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                seagreen2("Hello World", Style = 0 ) = it's return seagreen2 color text without any style       \n
                seagreen2("Hello World", Style = 1 ) = it's return seagreen2 color text with bold text          \n
                seagreen2("Hello World", Style = 2 ) = it's return seagreen2 color text with light text         \n
                seagreen2("Hello World", Style = 3 ) = it's return seagreen2 color text with Italicized style   \n
                seagreen2("Hello World", Style = 4 ) = it's return seagreen2 color text with UnderLine          \n
                seagreen2("Hello World", Style = 5 ) = it's return Blinking seagreen2 color text                \n
        """
        if rgb:
            return (78, 238, 148)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 78, 238, 148,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 78, 238, 148)
                


def seagreen3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the seagreen3 colored text.\n
        seagreen3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use seagreen3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: seagreen3("text",bg='seagreen3') then it's apply the seagreen3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of seagreen3\n
                    for example : seagreen3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                seagreen3("Hello World", Style = 0 ) = it's return seagreen3 color text without any style       \n
                seagreen3("Hello World", Style = 1 ) = it's return seagreen3 color text with bold text          \n
                seagreen3("Hello World", Style = 2 ) = it's return seagreen3 color text with light text         \n
                seagreen3("Hello World", Style = 3 ) = it's return seagreen3 color text with Italicized style   \n
                seagreen3("Hello World", Style = 4 ) = it's return seagreen3 color text with UnderLine          \n
                seagreen3("Hello World", Style = 5 ) = it's return Blinking seagreen3 color text                \n
        """
        if rgb:
            return (67, 205, 128)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 67, 205, 128,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 67, 205, 128)
                


def springgreen( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the springgreen colored text.\n
        springgreen() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use springgreenbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: springgreen("text",bg='springgreen') then it's apply the springgreen color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of springgreen\n
                    for example : springgreen(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                springgreen("Hello World", Style = 0 ) = it's return springgreen color text without any style       \n
                springgreen("Hello World", Style = 1 ) = it's return springgreen color text with bold text          \n
                springgreen("Hello World", Style = 2 ) = it's return springgreen color text with light text         \n
                springgreen("Hello World", Style = 3 ) = it's return springgreen color text with Italicized style   \n
                springgreen("Hello World", Style = 4 ) = it's return springgreen color text with UnderLine          \n
                springgreen("Hello World", Style = 5 ) = it's return Blinking springgreen color text                \n
        """
        if rgb:
            return (0, 255, 127)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 255, 127,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 255, 127)
                


def springgreen1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the springgreen1 colored text.\n
        springgreen1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use springgreen1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: springgreen1("text",bg='springgreen1') then it's apply the springgreen1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of springgreen1\n
                    for example : springgreen1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                springgreen1("Hello World", Style = 0 ) = it's return springgreen1 color text without any style       \n
                springgreen1("Hello World", Style = 1 ) = it's return springgreen1 color text with bold text          \n
                springgreen1("Hello World", Style = 2 ) = it's return springgreen1 color text with light text         \n
                springgreen1("Hello World", Style = 3 ) = it's return springgreen1 color text with Italicized style   \n
                springgreen1("Hello World", Style = 4 ) = it's return springgreen1 color text with UnderLine          \n
                springgreen1("Hello World", Style = 5 ) = it's return Blinking springgreen1 color text                \n
        """
        if rgb:
            return (0, 255, 127)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 255, 127,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 255, 127)
                


def springgreen2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the springgreen2 colored text.\n
        springgreen2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use springgreen2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: springgreen2("text",bg='springgreen2') then it's apply the springgreen2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of springgreen2\n
                    for example : springgreen2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                springgreen2("Hello World", Style = 0 ) = it's return springgreen2 color text without any style       \n
                springgreen2("Hello World", Style = 1 ) = it's return springgreen2 color text with bold text          \n
                springgreen2("Hello World", Style = 2 ) = it's return springgreen2 color text with light text         \n
                springgreen2("Hello World", Style = 3 ) = it's return springgreen2 color text with Italicized style   \n
                springgreen2("Hello World", Style = 4 ) = it's return springgreen2 color text with UnderLine          \n
                springgreen2("Hello World", Style = 5 ) = it's return Blinking springgreen2 color text                \n
        """
        if rgb:
            return (0, 238, 118)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 238, 118,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 238, 118)
                


def springgreen3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the springgreen3 colored text.\n
        springgreen3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use springgreen3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: springgreen3("text",bg='springgreen3') then it's apply the springgreen3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of springgreen3\n
                    for example : springgreen3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                springgreen3("Hello World", Style = 0 ) = it's return springgreen3 color text without any style       \n
                springgreen3("Hello World", Style = 1 ) = it's return springgreen3 color text with bold text          \n
                springgreen3("Hello World", Style = 2 ) = it's return springgreen3 color text with light text         \n
                springgreen3("Hello World", Style = 3 ) = it's return springgreen3 color text with Italicized style   \n
                springgreen3("Hello World", Style = 4 ) = it's return springgreen3 color text with UnderLine          \n
                springgreen3("Hello World", Style = 5 ) = it's return Blinking springgreen3 color text                \n
        """
        if rgb:
            return (0, 205, 102)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 205, 102,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 205, 102)
                


def springgreen4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the springgreen4 colored text.\n
        springgreen4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use springgreen4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: springgreen4("text",bg='springgreen4') then it's apply the springgreen4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of springgreen4\n
                    for example : springgreen4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                springgreen4("Hello World", Style = 0 ) = it's return springgreen4 color text without any style       \n
                springgreen4("Hello World", Style = 1 ) = it's return springgreen4 color text with bold text          \n
                springgreen4("Hello World", Style = 2 ) = it's return springgreen4 color text with light text         \n
                springgreen4("Hello World", Style = 3 ) = it's return springgreen4 color text with Italicized style   \n
                springgreen4("Hello World", Style = 4 ) = it's return springgreen4 color text with UnderLine          \n
                springgreen4("Hello World", Style = 5 ) = it's return Blinking springgreen4 color text                \n
        """
        if rgb:
            return (0, 139, 69)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 139, 69,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 139, 69)
                


def yellowgreen( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the yellowgreen colored text.\n
        yellowgreen() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use yellowgreenbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: yellowgreen("text",bg='yellowgreen') then it's apply the yellowgreen color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of yellowgreen\n
                    for example : yellowgreen(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                yellowgreen("Hello World", Style = 0 ) = it's return yellowgreen color text without any style       \n
                yellowgreen("Hello World", Style = 1 ) = it's return yellowgreen color text with bold text          \n
                yellowgreen("Hello World", Style = 2 ) = it's return yellowgreen color text with light text         \n
                yellowgreen("Hello World", Style = 3 ) = it's return yellowgreen color text with Italicized style   \n
                yellowgreen("Hello World", Style = 4 ) = it's return yellowgreen color text with UnderLine          \n
                yellowgreen("Hello World", Style = 5 ) = it's return Blinking yellowgreen color text                \n
        """
        if rgb:
            return (154, 205, 50)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 154, 205, 50,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 154, 205, 50)
                


def chartreuse( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the chartreuse colored text.\n
        chartreuse() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use chartreusebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: chartreuse("text",bg='chartreuse') then it's apply the chartreuse color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of chartreuse\n
                    for example : chartreuse(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                chartreuse("Hello World", Style = 0 ) = it's return chartreuse color text without any style       \n
                chartreuse("Hello World", Style = 1 ) = it's return chartreuse color text with bold text          \n
                chartreuse("Hello World", Style = 2 ) = it's return chartreuse color text with light text         \n
                chartreuse("Hello World", Style = 3 ) = it's return chartreuse color text with Italicized style   \n
                chartreuse("Hello World", Style = 4 ) = it's return chartreuse color text with UnderLine          \n
                chartreuse("Hello World", Style = 5 ) = it's return Blinking chartreuse color text                \n
        """
        if rgb:
            return (127, 255, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 127, 255, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 127, 255, 0)
                


def chartreuse1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the chartreuse1 colored text.\n
        chartreuse1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use chartreuse1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: chartreuse1("text",bg='chartreuse1') then it's apply the chartreuse1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of chartreuse1\n
                    for example : chartreuse1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                chartreuse1("Hello World", Style = 0 ) = it's return chartreuse1 color text without any style       \n
                chartreuse1("Hello World", Style = 1 ) = it's return chartreuse1 color text with bold text          \n
                chartreuse1("Hello World", Style = 2 ) = it's return chartreuse1 color text with light text         \n
                chartreuse1("Hello World", Style = 3 ) = it's return chartreuse1 color text with Italicized style   \n
                chartreuse1("Hello World", Style = 4 ) = it's return chartreuse1 color text with UnderLine          \n
                chartreuse1("Hello World", Style = 5 ) = it's return Blinking chartreuse1 color text                \n
        """
        if rgb:
            return (127, 255, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 127, 255, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 127, 255, 0)
                


def chartreuse2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the chartreuse2 colored text.\n
        chartreuse2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use chartreuse2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: chartreuse2("text",bg='chartreuse2') then it's apply the chartreuse2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of chartreuse2\n
                    for example : chartreuse2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                chartreuse2("Hello World", Style = 0 ) = it's return chartreuse2 color text without any style       \n
                chartreuse2("Hello World", Style = 1 ) = it's return chartreuse2 color text with bold text          \n
                chartreuse2("Hello World", Style = 2 ) = it's return chartreuse2 color text with light text         \n
                chartreuse2("Hello World", Style = 3 ) = it's return chartreuse2 color text with Italicized style   \n
                chartreuse2("Hello World", Style = 4 ) = it's return chartreuse2 color text with UnderLine          \n
                chartreuse2("Hello World", Style = 5 ) = it's return Blinking chartreuse2 color text                \n
        """
        if rgb:
            return (118, 238, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 118, 238, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 118, 238, 0)
                


def chartreuse3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the chartreuse3 colored text.\n
        chartreuse3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use chartreuse3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: chartreuse3("text",bg='chartreuse3') then it's apply the chartreuse3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of chartreuse3\n
                    for example : chartreuse3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                chartreuse3("Hello World", Style = 0 ) = it's return chartreuse3 color text without any style       \n
                chartreuse3("Hello World", Style = 1 ) = it's return chartreuse3 color text with bold text          \n
                chartreuse3("Hello World", Style = 2 ) = it's return chartreuse3 color text with light text         \n
                chartreuse3("Hello World", Style = 3 ) = it's return chartreuse3 color text with Italicized style   \n
                chartreuse3("Hello World", Style = 4 ) = it's return chartreuse3 color text with UnderLine          \n
                chartreuse3("Hello World", Style = 5 ) = it's return Blinking chartreuse3 color text                \n
        """
        if rgb:
            return (102, 205, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 102, 205, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 102, 205, 0)
                


def chartreuse4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the chartreuse4 colored text.\n
        chartreuse4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use chartreuse4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: chartreuse4("text",bg='chartreuse4') then it's apply the chartreuse4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of chartreuse4\n
                    for example : chartreuse4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                chartreuse4("Hello World", Style = 0 ) = it's return chartreuse4 color text without any style       \n
                chartreuse4("Hello World", Style = 1 ) = it's return chartreuse4 color text with bold text          \n
                chartreuse4("Hello World", Style = 2 ) = it's return chartreuse4 color text with light text         \n
                chartreuse4("Hello World", Style = 3 ) = it's return chartreuse4 color text with Italicized style   \n
                chartreuse4("Hello World", Style = 4 ) = it's return chartreuse4 color text with UnderLine          \n
                chartreuse4("Hello World", Style = 5 ) = it's return Blinking chartreuse4 color text                \n
        """
        if rgb:
            return (69, 139, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 69, 139, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 69, 139, 0)
                


def green( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the green colored text.\n
        green() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use greenbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: green("text",bg='green') then it's apply the green color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of green\n
                    for example : green(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                green("Hello World", Style = 0 ) = it's return green color text without any style       \n
                green("Hello World", Style = 1 ) = it's return green color text with bold text          \n
                green("Hello World", Style = 2 ) = it's return green color text with light text         \n
                green("Hello World", Style = 3 ) = it's return green color text with Italicized style   \n
                green("Hello World", Style = 4 ) = it's return green color text with UnderLine          \n
                green("Hello World", Style = 5 ) = it's return Blinking green color text                \n
        """
        if rgb:
            return (0, 128, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 128, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 128, 0)
                


def green( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the green colored text.\n
        green() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use greenbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: green("text",bg='green') then it's apply the green color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of green\n
                    for example : green(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                green("Hello World", Style = 0 ) = it's return green color text without any style       \n
                green("Hello World", Style = 1 ) = it's return green color text with bold text          \n
                green("Hello World", Style = 2 ) = it's return green color text with light text         \n
                green("Hello World", Style = 3 ) = it's return green color text with Italicized style   \n
                green("Hello World", Style = 4 ) = it's return green color text with UnderLine          \n
                green("Hello World", Style = 5 ) = it's return Blinking green color text                \n
        """
        if rgb:
            return (0, 128, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 128, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 128, 0)
                


def lime( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lime colored text.\n
        lime() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use limebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lime("text",bg='lime') then it's apply the lime color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lime\n
                    for example : lime(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lime("Hello World", Style = 0 ) = it's return lime color text without any style       \n
                lime("Hello World", Style = 1 ) = it's return lime color text with bold text          \n
                lime("Hello World", Style = 2 ) = it's return lime color text with light text         \n
                lime("Hello World", Style = 3 ) = it's return lime color text with Italicized style   \n
                lime("Hello World", Style = 4 ) = it's return lime color text with UnderLine          \n
                lime("Hello World", Style = 5 ) = it's return Blinking lime color text                \n
        """
        if rgb:
            return (0, 255, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 255, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 255, 0)
                


def green1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the green1 colored text.\n
        green1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use green1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: green1("text",bg='green1') then it's apply the green1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of green1\n
                    for example : green1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                green1("Hello World", Style = 0 ) = it's return green1 color text without any style       \n
                green1("Hello World", Style = 1 ) = it's return green1 color text with bold text          \n
                green1("Hello World", Style = 2 ) = it's return green1 color text with light text         \n
                green1("Hello World", Style = 3 ) = it's return green1 color text with Italicized style   \n
                green1("Hello World", Style = 4 ) = it's return green1 color text with UnderLine          \n
                green1("Hello World", Style = 5 ) = it's return Blinking green1 color text                \n
        """
        if rgb:
            return (0, 255, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 255, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 255, 0)
                


def green2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the green2 colored text.\n
        green2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use green2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: green2("text",bg='green2') then it's apply the green2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of green2\n
                    for example : green2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                green2("Hello World", Style = 0 ) = it's return green2 color text without any style       \n
                green2("Hello World", Style = 1 ) = it's return green2 color text with bold text          \n
                green2("Hello World", Style = 2 ) = it's return green2 color text with light text         \n
                green2("Hello World", Style = 3 ) = it's return green2 color text with Italicized style   \n
                green2("Hello World", Style = 4 ) = it's return green2 color text with UnderLine          \n
                green2("Hello World", Style = 5 ) = it's return Blinking green2 color text                \n
        """
        if rgb:
            return (0, 238, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 238, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 238, 0)
                


def green3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the green3 colored text.\n
        green3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use green3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: green3("text",bg='green3') then it's apply the green3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of green3\n
                    for example : green3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                green3("Hello World", Style = 0 ) = it's return green3 color text without any style       \n
                green3("Hello World", Style = 1 ) = it's return green3 color text with bold text          \n
                green3("Hello World", Style = 2 ) = it's return green3 color text with light text         \n
                green3("Hello World", Style = 3 ) = it's return green3 color text with Italicized style   \n
                green3("Hello World", Style = 4 ) = it's return green3 color text with UnderLine          \n
                green3("Hello World", Style = 5 ) = it's return Blinking green3 color text                \n
        """
        if rgb:
            return (0, 205, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 205, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 205, 0)
                


def green4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the green4 colored text.\n
        green4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use green4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: green4("text",bg='green4') then it's apply the green4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of green4\n
                    for example : green4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                green4("Hello World", Style = 0 ) = it's return green4 color text without any style       \n
                green4("Hello World", Style = 1 ) = it's return green4 color text with bold text          \n
                green4("Hello World", Style = 2 ) = it's return green4 color text with light text         \n
                green4("Hello World", Style = 3 ) = it's return green4 color text with Italicized style   \n
                green4("Hello World", Style = 4 ) = it's return green4 color text with UnderLine          \n
                green4("Hello World", Style = 5 ) = it's return Blinking green4 color text                \n
        """
        if rgb:
            return (0, 139, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 139, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 139, 0)
                


def khaki( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the khaki colored text.\n
        khaki() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use khakibg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: khaki("text",bg='khaki') then it's apply the khaki color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of khaki\n
                    for example : khaki(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                khaki("Hello World", Style = 0 ) = it's return khaki color text without any style       \n
                khaki("Hello World", Style = 1 ) = it's return khaki color text with bold text          \n
                khaki("Hello World", Style = 2 ) = it's return khaki color text with light text         \n
                khaki("Hello World", Style = 3 ) = it's return khaki color text with Italicized style   \n
                khaki("Hello World", Style = 4 ) = it's return khaki color text with UnderLine          \n
                khaki("Hello World", Style = 5 ) = it's return Blinking khaki color text                \n
        """
        if rgb:
            return (240, 230, 140)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 240, 230, 140,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 240, 230, 140)
                


def khaki1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the khaki1 colored text.\n
        khaki1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use khaki1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: khaki1("text",bg='khaki1') then it's apply the khaki1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of khaki1\n
                    for example : khaki1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                khaki1("Hello World", Style = 0 ) = it's return khaki1 color text without any style       \n
                khaki1("Hello World", Style = 1 ) = it's return khaki1 color text with bold text          \n
                khaki1("Hello World", Style = 2 ) = it's return khaki1 color text with light text         \n
                khaki1("Hello World", Style = 3 ) = it's return khaki1 color text with Italicized style   \n
                khaki1("Hello World", Style = 4 ) = it's return khaki1 color text with UnderLine          \n
                khaki1("Hello World", Style = 5 ) = it's return Blinking khaki1 color text                \n
        """
        if rgb:
            return (255, 246, 143)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 246, 143,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 246, 143)
                


def khaki2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the khaki2 colored text.\n
        khaki2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use khaki2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: khaki2("text",bg='khaki2') then it's apply the khaki2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of khaki2\n
                    for example : khaki2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                khaki2("Hello World", Style = 0 ) = it's return khaki2 color text without any style       \n
                khaki2("Hello World", Style = 1 ) = it's return khaki2 color text with bold text          \n
                khaki2("Hello World", Style = 2 ) = it's return khaki2 color text with light text         \n
                khaki2("Hello World", Style = 3 ) = it's return khaki2 color text with Italicized style   \n
                khaki2("Hello World", Style = 4 ) = it's return khaki2 color text with UnderLine          \n
                khaki2("Hello World", Style = 5 ) = it's return Blinking khaki2 color text                \n
        """
        if rgb:
            return (238, 230, 133)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 230, 133,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 230, 133)
                


def khaki3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the khaki3 colored text.\n
        khaki3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use khaki3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: khaki3("text",bg='khaki3') then it's apply the khaki3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of khaki3\n
                    for example : khaki3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                khaki3("Hello World", Style = 0 ) = it's return khaki3 color text without any style       \n
                khaki3("Hello World", Style = 1 ) = it's return khaki3 color text with bold text          \n
                khaki3("Hello World", Style = 2 ) = it's return khaki3 color text with light text         \n
                khaki3("Hello World", Style = 3 ) = it's return khaki3 color text with Italicized style   \n
                khaki3("Hello World", Style = 4 ) = it's return khaki3 color text with UnderLine          \n
                khaki3("Hello World", Style = 5 ) = it's return Blinking khaki3 color text                \n
        """
        if rgb:
            return (205, 198, 115)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 198, 115,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 198, 115)
                


def khaki4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the khaki4 colored text.\n
        khaki4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use khaki4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: khaki4("text",bg='khaki4') then it's apply the khaki4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of khaki4\n
                    for example : khaki4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                khaki4("Hello World", Style = 0 ) = it's return khaki4 color text without any style       \n
                khaki4("Hello World", Style = 1 ) = it's return khaki4 color text with bold text          \n
                khaki4("Hello World", Style = 2 ) = it's return khaki4 color text with light text         \n
                khaki4("Hello World", Style = 3 ) = it's return khaki4 color text with Italicized style   \n
                khaki4("Hello World", Style = 4 ) = it's return khaki4 color text with UnderLine          \n
                khaki4("Hello World", Style = 5 ) = it's return Blinking khaki4 color text                \n
        """
        if rgb:
            return (139, 134, 78)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 134, 78,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 134, 78)
                


def dark_olive_green( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the dark_olive_green colored text.\n
        dark_olive_green() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use dark_olive_greenbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: dark_olive_green("text",bg='dark_olive_green') then it's apply the dark_olive_green color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of dark_olive_green\n
                    for example : dark_olive_green(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                dark_olive_green("Hello World", Style = 0 ) = it's return dark_olive_green color text without any style       \n
                dark_olive_green("Hello World", Style = 1 ) = it's return dark_olive_green color text with bold text          \n
                dark_olive_green("Hello World", Style = 2 ) = it's return dark_olive_green color text with light text         \n
                dark_olive_green("Hello World", Style = 3 ) = it's return dark_olive_green color text with Italicized style   \n
                dark_olive_green("Hello World", Style = 4 ) = it's return dark_olive_green color text with UnderLine          \n
                dark_olive_green("Hello World", Style = 5 ) = it's return Blinking dark_olive_green color text                \n
        """
        if rgb:
            return (79, 79, 47)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 79, 79, 47,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 79, 79, 47)
                


def medium_aquamarine( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the medium_aquamarine colored text.\n
        medium_aquamarine() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use medium_aquamarinebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: medium_aquamarine("text",bg='medium_aquamarine') then it's apply the medium_aquamarine color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of medium_aquamarine\n
                    for example : medium_aquamarine(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                medium_aquamarine("Hello World", Style = 0 ) = it's return medium_aquamarine color text without any style       \n
                medium_aquamarine("Hello World", Style = 1 ) = it's return medium_aquamarine color text with bold text          \n
                medium_aquamarine("Hello World", Style = 2 ) = it's return medium_aquamarine color text with light text         \n
                medium_aquamarine("Hello World", Style = 3 ) = it's return medium_aquamarine color text with Italicized style   \n
                medium_aquamarine("Hello World", Style = 4 ) = it's return medium_aquamarine color text with UnderLine          \n
                medium_aquamarine("Hello World", Style = 5 ) = it's return Blinking medium_aquamarine color text                \n
        """
        if rgb:
            return (35, 142, 35)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 35, 142, 35,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 35, 142, 35)
                


def medium_forest_green( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the medium_forest_green colored text.\n
        medium_forest_green() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use medium_forest_greenbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: medium_forest_green("text",bg='medium_forest_green') then it's apply the medium_forest_green color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of medium_forest_green\n
                    for example : medium_forest_green(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                medium_forest_green("Hello World", Style = 0 ) = it's return medium_forest_green color text without any style       \n
                medium_forest_green("Hello World", Style = 1 ) = it's return medium_forest_green color text with bold text          \n
                medium_forest_green("Hello World", Style = 2 ) = it's return medium_forest_green color text with light text         \n
                medium_forest_green("Hello World", Style = 3 ) = it's return medium_forest_green color text with Italicized style   \n
                medium_forest_green("Hello World", Style = 4 ) = it's return medium_forest_green color text with UnderLine          \n
                medium_forest_green("Hello World", Style = 5 ) = it's return Blinking medium_forest_green color text                \n
        """
        if rgb:
            return (219, 219, 112)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 219, 219, 112,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 219, 219, 112)
                


def medium_sea_green( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the medium_sea_green colored text.\n
        medium_sea_green() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use medium_sea_greenbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: medium_sea_green("text",bg='medium_sea_green') then it's apply the medium_sea_green color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of medium_sea_green\n
                    for example : medium_sea_green(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                medium_sea_green("Hello World", Style = 0 ) = it's return medium_sea_green color text without any style       \n
                medium_sea_green("Hello World", Style = 1 ) = it's return medium_sea_green color text with bold text          \n
                medium_sea_green("Hello World", Style = 2 ) = it's return medium_sea_green color text with light text         \n
                medium_sea_green("Hello World", Style = 3 ) = it's return medium_sea_green color text with Italicized style   \n
                medium_sea_green("Hello World", Style = 4 ) = it's return medium_sea_green color text with UnderLine          \n
                medium_sea_green("Hello World", Style = 5 ) = it's return Blinking medium_sea_green color text                \n
        """
        if rgb:
            return (66, 111, 66)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 66, 111, 66,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 66, 111, 66)
                


def medium_spring_green( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the medium_spring_green colored text.\n
        medium_spring_green() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use medium_spring_greenbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: medium_spring_green("text",bg='medium_spring_green') then it's apply the medium_spring_green color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of medium_spring_green\n
                    for example : medium_spring_green(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                medium_spring_green("Hello World", Style = 0 ) = it's return medium_spring_green color text without any style       \n
                medium_spring_green("Hello World", Style = 1 ) = it's return medium_spring_green color text with bold text          \n
                medium_spring_green("Hello World", Style = 2 ) = it's return medium_spring_green color text with light text         \n
                medium_spring_green("Hello World", Style = 3 ) = it's return medium_spring_green color text with Italicized style   \n
                medium_spring_green("Hello World", Style = 4 ) = it's return medium_spring_green color text with UnderLine          \n
                medium_spring_green("Hello World", Style = 5 ) = it's return Blinking medium_spring_green color text                \n
        """
        if rgb:
            return (127, 255, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 127, 255, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 127, 255, 0)
                


def pale_green( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the pale_green colored text.\n
        pale_green() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use pale_greenbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: pale_green("text",bg='pale_green') then it's apply the pale_green color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of pale_green\n
                    for example : pale_green(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                pale_green("Hello World", Style = 0 ) = it's return pale_green color text without any style       \n
                pale_green("Hello World", Style = 1 ) = it's return pale_green color text with bold text          \n
                pale_green("Hello World", Style = 2 ) = it's return pale_green color text with light text         \n
                pale_green("Hello World", Style = 3 ) = it's return pale_green color text with Italicized style   \n
                pale_green("Hello World", Style = 4 ) = it's return pale_green color text with UnderLine          \n
                pale_green("Hello World", Style = 5 ) = it's return Blinking pale_green color text                \n
        """
        if rgb:
            return (143, 188, 143)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 143, 188, 143,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 143, 188, 143)
                


def sea_green( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the sea_green colored text.\n
        sea_green() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use sea_greenbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: sea_green("text",bg='sea_green') then it's apply the sea_green color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of sea_green\n
                    for example : sea_green(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                sea_green("Hello World", Style = 0 ) = it's return sea_green color text without any style       \n
                sea_green("Hello World", Style = 1 ) = it's return sea_green color text with bold text          \n
                sea_green("Hello World", Style = 2 ) = it's return sea_green color text with light text         \n
                sea_green("Hello World", Style = 3 ) = it's return sea_green color text with Italicized style   \n
                sea_green("Hello World", Style = 4 ) = it's return sea_green color text with UnderLine          \n
                sea_green("Hello World", Style = 5 ) = it's return Blinking sea_green color text                \n
        """
        if rgb:
            return (35, 142, 104)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 35, 142, 104,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 35, 142, 104)
                


def spring_green( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the spring_green colored text.\n
        spring_green() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use spring_greenbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: spring_green("text",bg='spring_green') then it's apply the spring_green color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of spring_green\n
                    for example : spring_green(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                spring_green("Hello World", Style = 0 ) = it's return spring_green color text without any style       \n
                spring_green("Hello World", Style = 1 ) = it's return spring_green color text with bold text          \n
                spring_green("Hello World", Style = 2 ) = it's return spring_green color text with light text         \n
                spring_green("Hello World", Style = 3 ) = it's return spring_green color text with Italicized style   \n
                spring_green("Hello World", Style = 4 ) = it's return spring_green color text with UnderLine          \n
                spring_green("Hello World", Style = 5 ) = it's return Blinking spring_green color text                \n
        """
        if rgb:
            return (0, 255, 127)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 0, 255, 127,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 0, 255, 127)
                


def free_speech_green( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the free_speech_green colored text.\n
        free_speech_green() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use free_speech_greenbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: free_speech_green("text",bg='free_speech_green') then it's apply the free_speech_green color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of free_speech_green\n
                    for example : free_speech_green(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                free_speech_green("Hello World", Style = 0 ) = it's return free_speech_green color text without any style       \n
                free_speech_green("Hello World", Style = 1 ) = it's return free_speech_green color text with bold text          \n
                free_speech_green("Hello World", Style = 2 ) = it's return free_speech_green color text with light text         \n
                free_speech_green("Hello World", Style = 3 ) = it's return free_speech_green color text with Italicized style   \n
                free_speech_green("Hello World", Style = 4 ) = it's return free_speech_green color text with UnderLine          \n
                free_speech_green("Hello World", Style = 5 ) = it's return Blinking free_speech_green color text                \n
        """
        if rgb:
            return (9, 249, 17)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 9, 249, 17,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 9, 249, 17)
                


def aquamarine( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the aquamarine colored text.\n
        aquamarine() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use aquamarinebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: aquamarine("text",bg='aquamarine') then it's apply the aquamarine color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of aquamarine\n
                    for example : aquamarine(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                aquamarine("Hello World", Style = 0 ) = it's return aquamarine color text without any style       \n
                aquamarine("Hello World", Style = 1 ) = it's return aquamarine color text with bold text          \n
                aquamarine("Hello World", Style = 2 ) = it's return aquamarine color text with light text         \n
                aquamarine("Hello World", Style = 3 ) = it's return aquamarine color text with Italicized style   \n
                aquamarine("Hello World", Style = 4 ) = it's return aquamarine color text with UnderLine          \n
                aquamarine("Hello World", Style = 5 ) = it's return Blinking aquamarine color text                \n
        """
        if rgb:
            return (2, 157, 116)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 2, 157, 116,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 2, 157, 116)
                


def darkorange( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darkorange colored text.\n
        darkorange() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darkorangebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darkorange("text",bg='darkorange') then it's apply the darkorange color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darkorange\n
                    for example : darkorange(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darkorange("Hello World", Style = 0 ) = it's return darkorange color text without any style       \n
                darkorange("Hello World", Style = 1 ) = it's return darkorange color text with bold text          \n
                darkorange("Hello World", Style = 2 ) = it's return darkorange color text with light text         \n
                darkorange("Hello World", Style = 3 ) = it's return darkorange color text with Italicized style   \n
                darkorange("Hello World", Style = 4 ) = it's return darkorange color text with UnderLine          \n
                darkorange("Hello World", Style = 5 ) = it's return Blinking darkorange color text                \n
        """
        if rgb:
            return (255, 140, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 140, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 140, 0)
                


def darkorange1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darkorange1 colored text.\n
        darkorange1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darkorange1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darkorange1("text",bg='darkorange1') then it's apply the darkorange1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darkorange1\n
                    for example : darkorange1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darkorange1("Hello World", Style = 0 ) = it's return darkorange1 color text without any style       \n
                darkorange1("Hello World", Style = 1 ) = it's return darkorange1 color text with bold text          \n
                darkorange1("Hello World", Style = 2 ) = it's return darkorange1 color text with light text         \n
                darkorange1("Hello World", Style = 3 ) = it's return darkorange1 color text with Italicized style   \n
                darkorange1("Hello World", Style = 4 ) = it's return darkorange1 color text with UnderLine          \n
                darkorange1("Hello World", Style = 5 ) = it's return Blinking darkorange1 color text                \n
        """
        if rgb:
            return (255, 127, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 127, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 127, 0)
                


def darkorange2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darkorange2 colored text.\n
        darkorange2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darkorange2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darkorange2("text",bg='darkorange2') then it's apply the darkorange2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darkorange2\n
                    for example : darkorange2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darkorange2("Hello World", Style = 0 ) = it's return darkorange2 color text without any style       \n
                darkorange2("Hello World", Style = 1 ) = it's return darkorange2 color text with bold text          \n
                darkorange2("Hello World", Style = 2 ) = it's return darkorange2 color text with light text         \n
                darkorange2("Hello World", Style = 3 ) = it's return darkorange2 color text with Italicized style   \n
                darkorange2("Hello World", Style = 4 ) = it's return darkorange2 color text with UnderLine          \n
                darkorange2("Hello World", Style = 5 ) = it's return Blinking darkorange2 color text                \n
        """
        if rgb:
            return (238, 118, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 118, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 118, 0)
                


def darkorange3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darkorange3 colored text.\n
        darkorange3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darkorange3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darkorange3("text",bg='darkorange3') then it's apply the darkorange3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darkorange3\n
                    for example : darkorange3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darkorange3("Hello World", Style = 0 ) = it's return darkorange3 color text without any style       \n
                darkorange3("Hello World", Style = 1 ) = it's return darkorange3 color text with bold text          \n
                darkorange3("Hello World", Style = 2 ) = it's return darkorange3 color text with light text         \n
                darkorange3("Hello World", Style = 3 ) = it's return darkorange3 color text with Italicized style   \n
                darkorange3("Hello World", Style = 4 ) = it's return darkorange3 color text with UnderLine          \n
                darkorange3("Hello World", Style = 5 ) = it's return Blinking darkorange3 color text                \n
        """
        if rgb:
            return (205, 102, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 102, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 102, 0)
                


def darkorange4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darkorange4 colored text.\n
        darkorange4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darkorange4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darkorange4("text",bg='darkorange4') then it's apply the darkorange4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darkorange4\n
                    for example : darkorange4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darkorange4("Hello World", Style = 0 ) = it's return darkorange4 color text without any style       \n
                darkorange4("Hello World", Style = 1 ) = it's return darkorange4 color text with bold text          \n
                darkorange4("Hello World", Style = 2 ) = it's return darkorange4 color text with light text         \n
                darkorange4("Hello World", Style = 3 ) = it's return darkorange4 color text with Italicized style   \n
                darkorange4("Hello World", Style = 4 ) = it's return darkorange4 color text with UnderLine          \n
                darkorange4("Hello World", Style = 5 ) = it's return Blinking darkorange4 color text                \n
        """
        if rgb:
            return (139, 69, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 69, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 69, 0)
                


def darksalmon( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darksalmon colored text.\n
        darksalmon() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darksalmonbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darksalmon("text",bg='darksalmon') then it's apply the darksalmon color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darksalmon\n
                    for example : darksalmon(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darksalmon("Hello World", Style = 0 ) = it's return darksalmon color text without any style       \n
                darksalmon("Hello World", Style = 1 ) = it's return darksalmon color text with bold text          \n
                darksalmon("Hello World", Style = 2 ) = it's return darksalmon color text with light text         \n
                darksalmon("Hello World", Style = 3 ) = it's return darksalmon color text with Italicized style   \n
                darksalmon("Hello World", Style = 4 ) = it's return darksalmon color text with UnderLine          \n
                darksalmon("Hello World", Style = 5 ) = it's return Blinking darksalmon color text                \n
        """
        if rgb:
            return (233, 150, 122)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 233, 150, 122,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 233, 150, 122)
                


def lightcoral( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightcoral colored text.\n
        lightcoral() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightcoralbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightcoral("text",bg='lightcoral') then it's apply the lightcoral color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightcoral\n
                    for example : lightcoral(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightcoral("Hello World", Style = 0 ) = it's return lightcoral color text without any style       \n
                lightcoral("Hello World", Style = 1 ) = it's return lightcoral color text with bold text          \n
                lightcoral("Hello World", Style = 2 ) = it's return lightcoral color text with light text         \n
                lightcoral("Hello World", Style = 3 ) = it's return lightcoral color text with Italicized style   \n
                lightcoral("Hello World", Style = 4 ) = it's return lightcoral color text with UnderLine          \n
                lightcoral("Hello World", Style = 5 ) = it's return Blinking lightcoral color text                \n
        """
        if rgb:
            return (240, 128, 128)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 240, 128, 128,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 240, 128, 128)
                


def lightsalmon( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightsalmon colored text.\n
        lightsalmon() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightsalmonbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightsalmon("text",bg='lightsalmon') then it's apply the lightsalmon color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightsalmon\n
                    for example : lightsalmon(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightsalmon("Hello World", Style = 0 ) = it's return lightsalmon color text without any style       \n
                lightsalmon("Hello World", Style = 1 ) = it's return lightsalmon color text with bold text          \n
                lightsalmon("Hello World", Style = 2 ) = it's return lightsalmon color text with light text         \n
                lightsalmon("Hello World", Style = 3 ) = it's return lightsalmon color text with Italicized style   \n
                lightsalmon("Hello World", Style = 4 ) = it's return lightsalmon color text with UnderLine          \n
                lightsalmon("Hello World", Style = 5 ) = it's return Blinking lightsalmon color text                \n
        """
        if rgb:
            return (255, 160, 122)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 160, 122,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 160, 122)
                


def lightsalmon1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightsalmon1 colored text.\n
        lightsalmon1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightsalmon1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightsalmon1("text",bg='lightsalmon1') then it's apply the lightsalmon1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightsalmon1\n
                    for example : lightsalmon1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightsalmon1("Hello World", Style = 0 ) = it's return lightsalmon1 color text without any style       \n
                lightsalmon1("Hello World", Style = 1 ) = it's return lightsalmon1 color text with bold text          \n
                lightsalmon1("Hello World", Style = 2 ) = it's return lightsalmon1 color text with light text         \n
                lightsalmon1("Hello World", Style = 3 ) = it's return lightsalmon1 color text with Italicized style   \n
                lightsalmon1("Hello World", Style = 4 ) = it's return lightsalmon1 color text with UnderLine          \n
                lightsalmon1("Hello World", Style = 5 ) = it's return Blinking lightsalmon1 color text                \n
        """
        if rgb:
            return (255, 160, 122)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 160, 122,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 160, 122)
                


def lightsalmon2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightsalmon2 colored text.\n
        lightsalmon2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightsalmon2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightsalmon2("text",bg='lightsalmon2') then it's apply the lightsalmon2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightsalmon2\n
                    for example : lightsalmon2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightsalmon2("Hello World", Style = 0 ) = it's return lightsalmon2 color text without any style       \n
                lightsalmon2("Hello World", Style = 1 ) = it's return lightsalmon2 color text with bold text          \n
                lightsalmon2("Hello World", Style = 2 ) = it's return lightsalmon2 color text with light text         \n
                lightsalmon2("Hello World", Style = 3 ) = it's return lightsalmon2 color text with Italicized style   \n
                lightsalmon2("Hello World", Style = 4 ) = it's return lightsalmon2 color text with UnderLine          \n
                lightsalmon2("Hello World", Style = 5 ) = it's return Blinking lightsalmon2 color text                \n
        """
        if rgb:
            return (238, 149, 114)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 149, 114,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 149, 114)
                


def lightsalmon3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightsalmon3 colored text.\n
        lightsalmon3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightsalmon3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightsalmon3("text",bg='lightsalmon3') then it's apply the lightsalmon3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightsalmon3\n
                    for example : lightsalmon3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightsalmon3("Hello World", Style = 0 ) = it's return lightsalmon3 color text without any style       \n
                lightsalmon3("Hello World", Style = 1 ) = it's return lightsalmon3 color text with bold text          \n
                lightsalmon3("Hello World", Style = 2 ) = it's return lightsalmon3 color text with light text         \n
                lightsalmon3("Hello World", Style = 3 ) = it's return lightsalmon3 color text with Italicized style   \n
                lightsalmon3("Hello World", Style = 4 ) = it's return lightsalmon3 color text with UnderLine          \n
                lightsalmon3("Hello World", Style = 5 ) = it's return Blinking lightsalmon3 color text                \n
        """
        if rgb:
            return (205, 129, 98)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 129, 98,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 129, 98)
                


def lightsalmon4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightsalmon4 colored text.\n
        lightsalmon4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightsalmon4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightsalmon4("text",bg='lightsalmon4') then it's apply the lightsalmon4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightsalmon4\n
                    for example : lightsalmon4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightsalmon4("Hello World", Style = 0 ) = it's return lightsalmon4 color text without any style       \n
                lightsalmon4("Hello World", Style = 1 ) = it's return lightsalmon4 color text with bold text          \n
                lightsalmon4("Hello World", Style = 2 ) = it's return lightsalmon4 color text with light text         \n
                lightsalmon4("Hello World", Style = 3 ) = it's return lightsalmon4 color text with Italicized style   \n
                lightsalmon4("Hello World", Style = 4 ) = it's return lightsalmon4 color text with UnderLine          \n
                lightsalmon4("Hello World", Style = 5 ) = it's return Blinking lightsalmon4 color text                \n
        """
        if rgb:
            return (139, 87, 66)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 87, 66,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 87, 66)
                


def peachpuff( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the peachpuff colored text.\n
        peachpuff() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use peachpuffbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: peachpuff("text",bg='peachpuff') then it's apply the peachpuff color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of peachpuff\n
                    for example : peachpuff(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                peachpuff("Hello World", Style = 0 ) = it's return peachpuff color text without any style       \n
                peachpuff("Hello World", Style = 1 ) = it's return peachpuff color text with bold text          \n
                peachpuff("Hello World", Style = 2 ) = it's return peachpuff color text with light text         \n
                peachpuff("Hello World", Style = 3 ) = it's return peachpuff color text with Italicized style   \n
                peachpuff("Hello World", Style = 4 ) = it's return peachpuff color text with UnderLine          \n
                peachpuff("Hello World", Style = 5 ) = it's return Blinking peachpuff color text                \n
        """
        if rgb:
            return (255, 218, 185)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 218, 185,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 218, 185)
                


def peachpuff1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the peachpuff1 colored text.\n
        peachpuff1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use peachpuff1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: peachpuff1("text",bg='peachpuff1') then it's apply the peachpuff1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of peachpuff1\n
                    for example : peachpuff1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                peachpuff1("Hello World", Style = 0 ) = it's return peachpuff1 color text without any style       \n
                peachpuff1("Hello World", Style = 1 ) = it's return peachpuff1 color text with bold text          \n
                peachpuff1("Hello World", Style = 2 ) = it's return peachpuff1 color text with light text         \n
                peachpuff1("Hello World", Style = 3 ) = it's return peachpuff1 color text with Italicized style   \n
                peachpuff1("Hello World", Style = 4 ) = it's return peachpuff1 color text with UnderLine          \n
                peachpuff1("Hello World", Style = 5 ) = it's return Blinking peachpuff1 color text                \n
        """
        if rgb:
            return (255, 218, 185)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 218, 185,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 218, 185)
                


def peachpuff2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the peachpuff2 colored text.\n
        peachpuff2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use peachpuff2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: peachpuff2("text",bg='peachpuff2') then it's apply the peachpuff2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of peachpuff2\n
                    for example : peachpuff2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                peachpuff2("Hello World", Style = 0 ) = it's return peachpuff2 color text without any style       \n
                peachpuff2("Hello World", Style = 1 ) = it's return peachpuff2 color text with bold text          \n
                peachpuff2("Hello World", Style = 2 ) = it's return peachpuff2 color text with light text         \n
                peachpuff2("Hello World", Style = 3 ) = it's return peachpuff2 color text with Italicized style   \n
                peachpuff2("Hello World", Style = 4 ) = it's return peachpuff2 color text with UnderLine          \n
                peachpuff2("Hello World", Style = 5 ) = it's return Blinking peachpuff2 color text                \n
        """
        if rgb:
            return (238, 203, 173)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 203, 173,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 203, 173)
                


def peachpuff3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the peachpuff3 colored text.\n
        peachpuff3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use peachpuff3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: peachpuff3("text",bg='peachpuff3') then it's apply the peachpuff3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of peachpuff3\n
                    for example : peachpuff3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                peachpuff3("Hello World", Style = 0 ) = it's return peachpuff3 color text without any style       \n
                peachpuff3("Hello World", Style = 1 ) = it's return peachpuff3 color text with bold text          \n
                peachpuff3("Hello World", Style = 2 ) = it's return peachpuff3 color text with light text         \n
                peachpuff3("Hello World", Style = 3 ) = it's return peachpuff3 color text with Italicized style   \n
                peachpuff3("Hello World", Style = 4 ) = it's return peachpuff3 color text with UnderLine          \n
                peachpuff3("Hello World", Style = 5 ) = it's return Blinking peachpuff3 color text                \n
        """
        if rgb:
            return (205, 175, 149)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 175, 149,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 175, 149)
                


def peachpuff4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the peachpuff4 colored text.\n
        peachpuff4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use peachpuff4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: peachpuff4("text",bg='peachpuff4') then it's apply the peachpuff4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of peachpuff4\n
                    for example : peachpuff4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                peachpuff4("Hello World", Style = 0 ) = it's return peachpuff4 color text without any style       \n
                peachpuff4("Hello World", Style = 1 ) = it's return peachpuff4 color text with bold text          \n
                peachpuff4("Hello World", Style = 2 ) = it's return peachpuff4 color text with light text         \n
                peachpuff4("Hello World", Style = 3 ) = it's return peachpuff4 color text with Italicized style   \n
                peachpuff4("Hello World", Style = 4 ) = it's return peachpuff4 color text with UnderLine          \n
                peachpuff4("Hello World", Style = 5 ) = it's return Blinking peachpuff4 color text                \n
        """
        if rgb:
            return (139, 119, 101)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 119, 101,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 119, 101)
                


def bisque( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the bisque colored text.\n
        bisque() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use bisquebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: bisque("text",bg='bisque') then it's apply the bisque color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of bisque\n
                    for example : bisque(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                bisque("Hello World", Style = 0 ) = it's return bisque color text without any style       \n
                bisque("Hello World", Style = 1 ) = it's return bisque color text with bold text          \n
                bisque("Hello World", Style = 2 ) = it's return bisque color text with light text         \n
                bisque("Hello World", Style = 3 ) = it's return bisque color text with Italicized style   \n
                bisque("Hello World", Style = 4 ) = it's return bisque color text with UnderLine          \n
                bisque("Hello World", Style = 5 ) = it's return Blinking bisque color text                \n
        """
        if rgb:
            return (255, 228, 196)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 228, 196,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 228, 196)
                


def bisque1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the bisque1 colored text.\n
        bisque1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use bisque1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: bisque1("text",bg='bisque1') then it's apply the bisque1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of bisque1\n
                    for example : bisque1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                bisque1("Hello World", Style = 0 ) = it's return bisque1 color text without any style       \n
                bisque1("Hello World", Style = 1 ) = it's return bisque1 color text with bold text          \n
                bisque1("Hello World", Style = 2 ) = it's return bisque1 color text with light text         \n
                bisque1("Hello World", Style = 3 ) = it's return bisque1 color text with Italicized style   \n
                bisque1("Hello World", Style = 4 ) = it's return bisque1 color text with UnderLine          \n
                bisque1("Hello World", Style = 5 ) = it's return Blinking bisque1 color text                \n
        """
        if rgb:
            return (255, 228, 196)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 228, 196,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 228, 196)
                


def bisque2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the bisque2 colored text.\n
        bisque2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use bisque2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: bisque2("text",bg='bisque2') then it's apply the bisque2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of bisque2\n
                    for example : bisque2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                bisque2("Hello World", Style = 0 ) = it's return bisque2 color text without any style       \n
                bisque2("Hello World", Style = 1 ) = it's return bisque2 color text with bold text          \n
                bisque2("Hello World", Style = 2 ) = it's return bisque2 color text with light text         \n
                bisque2("Hello World", Style = 3 ) = it's return bisque2 color text with Italicized style   \n
                bisque2("Hello World", Style = 4 ) = it's return bisque2 color text with UnderLine          \n
                bisque2("Hello World", Style = 5 ) = it's return Blinking bisque2 color text                \n
        """
        if rgb:
            return (238, 213, 183)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 213, 183,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 213, 183)
                


def bisque3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the bisque3 colored text.\n
        bisque3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use bisque3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: bisque3("text",bg='bisque3') then it's apply the bisque3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of bisque3\n
                    for example : bisque3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                bisque3("Hello World", Style = 0 ) = it's return bisque3 color text without any style       \n
                bisque3("Hello World", Style = 1 ) = it's return bisque3 color text with bold text          \n
                bisque3("Hello World", Style = 2 ) = it's return bisque3 color text with light text         \n
                bisque3("Hello World", Style = 3 ) = it's return bisque3 color text with Italicized style   \n
                bisque3("Hello World", Style = 4 ) = it's return bisque3 color text with UnderLine          \n
                bisque3("Hello World", Style = 5 ) = it's return Blinking bisque3 color text                \n
        """
        if rgb:
            return (205, 183, 158)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 183, 158,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 183, 158)
                


def bisque4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the bisque4 colored text.\n
        bisque4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use bisque4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: bisque4("text",bg='bisque4') then it's apply the bisque4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of bisque4\n
                    for example : bisque4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                bisque4("Hello World", Style = 0 ) = it's return bisque4 color text without any style       \n
                bisque4("Hello World", Style = 1 ) = it's return bisque4 color text with bold text          \n
                bisque4("Hello World", Style = 2 ) = it's return bisque4 color text with light text         \n
                bisque4("Hello World", Style = 3 ) = it's return bisque4 color text with Italicized style   \n
                bisque4("Hello World", Style = 4 ) = it's return bisque4 color text with UnderLine          \n
                bisque4("Hello World", Style = 5 ) = it's return Blinking bisque4 color text                \n
        """
        if rgb:
            return (139, 125, 107)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 125, 107,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 125, 107)
                


def coral( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the coral colored text.\n
        coral() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use coralbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: coral("text",bg='coral') then it's apply the coral color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of coral\n
                    for example : coral(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                coral("Hello World", Style = 0 ) = it's return coral color text without any style       \n
                coral("Hello World", Style = 1 ) = it's return coral color text with bold text          \n
                coral("Hello World", Style = 2 ) = it's return coral color text with light text         \n
                coral("Hello World", Style = 3 ) = it's return coral color text with Italicized style   \n
                coral("Hello World", Style = 4 ) = it's return coral color text with UnderLine          \n
                coral("Hello World", Style = 5 ) = it's return Blinking coral color text                \n
        """
        if rgb:
            return (255, 127, 80)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 127, 80,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 127, 80)
                


def coral( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the coral colored text.\n
        coral() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use coralbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: coral("text",bg='coral') then it's apply the coral color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of coral\n
                    for example : coral(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                coral("Hello World", Style = 0 ) = it's return coral color text without any style       \n
                coral("Hello World", Style = 1 ) = it's return coral color text with bold text          \n
                coral("Hello World", Style = 2 ) = it's return coral color text with light text         \n
                coral("Hello World", Style = 3 ) = it's return coral color text with Italicized style   \n
                coral("Hello World", Style = 4 ) = it's return coral color text with UnderLine          \n
                coral("Hello World", Style = 5 ) = it's return Blinking coral color text                \n
        """
        if rgb:
            return (255, 127, 80)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 127, 80,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 127, 80)
                


def coral1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the coral1 colored text.\n
        coral1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use coral1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: coral1("text",bg='coral1') then it's apply the coral1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of coral1\n
                    for example : coral1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                coral1("Hello World", Style = 0 ) = it's return coral1 color text without any style       \n
                coral1("Hello World", Style = 1 ) = it's return coral1 color text with bold text          \n
                coral1("Hello World", Style = 2 ) = it's return coral1 color text with light text         \n
                coral1("Hello World", Style = 3 ) = it's return coral1 color text with Italicized style   \n
                coral1("Hello World", Style = 4 ) = it's return coral1 color text with UnderLine          \n
                coral1("Hello World", Style = 5 ) = it's return Blinking coral1 color text                \n
        """
        if rgb:
            return (255, 114, 86)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 114, 86,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 114, 86)
                


def coral2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the coral2 colored text.\n
        coral2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use coral2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: coral2("text",bg='coral2') then it's apply the coral2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of coral2\n
                    for example : coral2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                coral2("Hello World", Style = 0 ) = it's return coral2 color text without any style       \n
                coral2("Hello World", Style = 1 ) = it's return coral2 color text with bold text          \n
                coral2("Hello World", Style = 2 ) = it's return coral2 color text with light text         \n
                coral2("Hello World", Style = 3 ) = it's return coral2 color text with Italicized style   \n
                coral2("Hello World", Style = 4 ) = it's return coral2 color text with UnderLine          \n
                coral2("Hello World", Style = 5 ) = it's return Blinking coral2 color text                \n
        """
        if rgb:
            return (238, 106, 80)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 106, 80,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 106, 80)
                


def coral3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the coral3 colored text.\n
        coral3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use coral3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: coral3("text",bg='coral3') then it's apply the coral3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of coral3\n
                    for example : coral3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                coral3("Hello World", Style = 0 ) = it's return coral3 color text without any style       \n
                coral3("Hello World", Style = 1 ) = it's return coral3 color text with bold text          \n
                coral3("Hello World", Style = 2 ) = it's return coral3 color text with light text         \n
                coral3("Hello World", Style = 3 ) = it's return coral3 color text with Italicized style   \n
                coral3("Hello World", Style = 4 ) = it's return coral3 color text with UnderLine          \n
                coral3("Hello World", Style = 5 ) = it's return Blinking coral3 color text                \n
        """
        if rgb:
            return (205, 91, 69)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 91, 69,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 91, 69)
                


def coral4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the coral4 colored text.\n
        coral4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use coral4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: coral4("text",bg='coral4') then it's apply the coral4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of coral4\n
                    for example : coral4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                coral4("Hello World", Style = 0 ) = it's return coral4 color text without any style       \n
                coral4("Hello World", Style = 1 ) = it's return coral4 color text with bold text          \n
                coral4("Hello World", Style = 2 ) = it's return coral4 color text with light text         \n
                coral4("Hello World", Style = 3 ) = it's return coral4 color text with Italicized style   \n
                coral4("Hello World", Style = 4 ) = it's return coral4 color text with UnderLine          \n
                coral4("Hello World", Style = 5 ) = it's return Blinking coral4 color text                \n
        """
        if rgb:
            return (139, 62, 47)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 62, 47,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 62, 47)
                


def honeydew( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the honeydew colored text.\n
        honeydew() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use honeydewbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: honeydew("text",bg='honeydew') then it's apply the honeydew color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of honeydew\n
                    for example : honeydew(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                honeydew("Hello World", Style = 0 ) = it's return honeydew color text without any style       \n
                honeydew("Hello World", Style = 1 ) = it's return honeydew color text with bold text          \n
                honeydew("Hello World", Style = 2 ) = it's return honeydew color text with light text         \n
                honeydew("Hello World", Style = 3 ) = it's return honeydew color text with Italicized style   \n
                honeydew("Hello World", Style = 4 ) = it's return honeydew color text with UnderLine          \n
                honeydew("Hello World", Style = 5 ) = it's return Blinking honeydew color text                \n
        """
        if rgb:
            return (240, 255, 240)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 240, 255, 240,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 240, 255, 240)
                


def honeydew1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the honeydew1 colored text.\n
        honeydew1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use honeydew1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: honeydew1("text",bg='honeydew1') then it's apply the honeydew1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of honeydew1\n
                    for example : honeydew1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                honeydew1("Hello World", Style = 0 ) = it's return honeydew1 color text without any style       \n
                honeydew1("Hello World", Style = 1 ) = it's return honeydew1 color text with bold text          \n
                honeydew1("Hello World", Style = 2 ) = it's return honeydew1 color text with light text         \n
                honeydew1("Hello World", Style = 3 ) = it's return honeydew1 color text with Italicized style   \n
                honeydew1("Hello World", Style = 4 ) = it's return honeydew1 color text with UnderLine          \n
                honeydew1("Hello World", Style = 5 ) = it's return Blinking honeydew1 color text                \n
        """
        if rgb:
            return (240, 255, 240)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 240, 255, 240,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 240, 255, 240)
                


def honeydew2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the honeydew2 colored text.\n
        honeydew2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use honeydew2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: honeydew2("text",bg='honeydew2') then it's apply the honeydew2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of honeydew2\n
                    for example : honeydew2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                honeydew2("Hello World", Style = 0 ) = it's return honeydew2 color text without any style       \n
                honeydew2("Hello World", Style = 1 ) = it's return honeydew2 color text with bold text          \n
                honeydew2("Hello World", Style = 2 ) = it's return honeydew2 color text with light text         \n
                honeydew2("Hello World", Style = 3 ) = it's return honeydew2 color text with Italicized style   \n
                honeydew2("Hello World", Style = 4 ) = it's return honeydew2 color text with UnderLine          \n
                honeydew2("Hello World", Style = 5 ) = it's return Blinking honeydew2 color text                \n
        """
        if rgb:
            return (224, 238, 224)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 224, 238, 224,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 224, 238, 224)
                


def honeydew3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the honeydew3 colored text.\n
        honeydew3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use honeydew3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: honeydew3("text",bg='honeydew3') then it's apply the honeydew3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of honeydew3\n
                    for example : honeydew3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                honeydew3("Hello World", Style = 0 ) = it's return honeydew3 color text without any style       \n
                honeydew3("Hello World", Style = 1 ) = it's return honeydew3 color text with bold text          \n
                honeydew3("Hello World", Style = 2 ) = it's return honeydew3 color text with light text         \n
                honeydew3("Hello World", Style = 3 ) = it's return honeydew3 color text with Italicized style   \n
                honeydew3("Hello World", Style = 4 ) = it's return honeydew3 color text with UnderLine          \n
                honeydew3("Hello World", Style = 5 ) = it's return Blinking honeydew3 color text                \n
        """
        if rgb:
            return (193, 205, 193)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 193, 205, 193,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 193, 205, 193)
                


def honeydew4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the honeydew4 colored text.\n
        honeydew4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use honeydew4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: honeydew4("text",bg='honeydew4') then it's apply the honeydew4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of honeydew4\n
                    for example : honeydew4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                honeydew4("Hello World", Style = 0 ) = it's return honeydew4 color text without any style       \n
                honeydew4("Hello World", Style = 1 ) = it's return honeydew4 color text with bold text          \n
                honeydew4("Hello World", Style = 2 ) = it's return honeydew4 color text with light text         \n
                honeydew4("Hello World", Style = 3 ) = it's return honeydew4 color text with Italicized style   \n
                honeydew4("Hello World", Style = 4 ) = it's return honeydew4 color text with UnderLine          \n
                honeydew4("Hello World", Style = 5 ) = it's return Blinking honeydew4 color text                \n
        """
        if rgb:
            return (131, 139, 131)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 131, 139, 131,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 131, 139, 131)
                


def orange( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the orange colored text.\n
        orange() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use orangebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: orange("text",bg='orange') then it's apply the orange color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of orange\n
                    for example : orange(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                orange("Hello World", Style = 0 ) = it's return orange color text without any style       \n
                orange("Hello World", Style = 1 ) = it's return orange color text with bold text          \n
                orange("Hello World", Style = 2 ) = it's return orange color text with light text         \n
                orange("Hello World", Style = 3 ) = it's return orange color text with Italicized style   \n
                orange("Hello World", Style = 4 ) = it's return orange color text with UnderLine          \n
                orange("Hello World", Style = 5 ) = it's return Blinking orange color text                \n
        """
        if rgb:
            return (255, 165, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 165, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 165, 0)
                


def orange1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the orange1 colored text.\n
        orange1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use orange1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: orange1("text",bg='orange1') then it's apply the orange1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of orange1\n
                    for example : orange1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                orange1("Hello World", Style = 0 ) = it's return orange1 color text without any style       \n
                orange1("Hello World", Style = 1 ) = it's return orange1 color text with bold text          \n
                orange1("Hello World", Style = 2 ) = it's return orange1 color text with light text         \n
                orange1("Hello World", Style = 3 ) = it's return orange1 color text with Italicized style   \n
                orange1("Hello World", Style = 4 ) = it's return orange1 color text with UnderLine          \n
                orange1("Hello World", Style = 5 ) = it's return Blinking orange1 color text                \n
        """
        if rgb:
            return (255, 165, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 165, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 165, 0)
                


def orange2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the orange2 colored text.\n
        orange2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use orange2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: orange2("text",bg='orange2') then it's apply the orange2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of orange2\n
                    for example : orange2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                orange2("Hello World", Style = 0 ) = it's return orange2 color text without any style       \n
                orange2("Hello World", Style = 1 ) = it's return orange2 color text with bold text          \n
                orange2("Hello World", Style = 2 ) = it's return orange2 color text with light text         \n
                orange2("Hello World", Style = 3 ) = it's return orange2 color text with Italicized style   \n
                orange2("Hello World", Style = 4 ) = it's return orange2 color text with UnderLine          \n
                orange2("Hello World", Style = 5 ) = it's return Blinking orange2 color text                \n
        """
        if rgb:
            return (238, 154, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 154, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 154, 0)
                


def orange3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the orange3 colored text.\n
        orange3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use orange3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: orange3("text",bg='orange3') then it's apply the orange3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of orange3\n
                    for example : orange3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                orange3("Hello World", Style = 0 ) = it's return orange3 color text without any style       \n
                orange3("Hello World", Style = 1 ) = it's return orange3 color text with bold text          \n
                orange3("Hello World", Style = 2 ) = it's return orange3 color text with light text         \n
                orange3("Hello World", Style = 3 ) = it's return orange3 color text with Italicized style   \n
                orange3("Hello World", Style = 4 ) = it's return orange3 color text with UnderLine          \n
                orange3("Hello World", Style = 5 ) = it's return Blinking orange3 color text                \n
        """
        if rgb:
            return (205, 133, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 133, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 133, 0)
                


def orange4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the orange4 colored text.\n
        orange4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use orange4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: orange4("text",bg='orange4') then it's apply the orange4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of orange4\n
                    for example : orange4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                orange4("Hello World", Style = 0 ) = it's return orange4 color text without any style       \n
                orange4("Hello World", Style = 1 ) = it's return orange4 color text with bold text          \n
                orange4("Hello World", Style = 2 ) = it's return orange4 color text with light text         \n
                orange4("Hello World", Style = 3 ) = it's return orange4 color text with Italicized style   \n
                orange4("Hello World", Style = 4 ) = it's return orange4 color text with UnderLine          \n
                orange4("Hello World", Style = 5 ) = it's return Blinking orange4 color text                \n
        """
        if rgb:
            return (139, 90, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 90, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 90, 0)
                


def salmon( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the salmon colored text.\n
        salmon() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use salmonbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: salmon("text",bg='salmon') then it's apply the salmon color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of salmon\n
                    for example : salmon(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                salmon("Hello World", Style = 0 ) = it's return salmon color text without any style       \n
                salmon("Hello World", Style = 1 ) = it's return salmon color text with bold text          \n
                salmon("Hello World", Style = 2 ) = it's return salmon color text with light text         \n
                salmon("Hello World", Style = 3 ) = it's return salmon color text with Italicized style   \n
                salmon("Hello World", Style = 4 ) = it's return salmon color text with UnderLine          \n
                salmon("Hello World", Style = 5 ) = it's return Blinking salmon color text                \n
        """
        if rgb:
            return (250, 128, 114)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 250, 128, 114,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 250, 128, 114)
                


def salmon1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the salmon1 colored text.\n
        salmon1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use salmon1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: salmon1("text",bg='salmon1') then it's apply the salmon1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of salmon1\n
                    for example : salmon1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                salmon1("Hello World", Style = 0 ) = it's return salmon1 color text without any style       \n
                salmon1("Hello World", Style = 1 ) = it's return salmon1 color text with bold text          \n
                salmon1("Hello World", Style = 2 ) = it's return salmon1 color text with light text         \n
                salmon1("Hello World", Style = 3 ) = it's return salmon1 color text with Italicized style   \n
                salmon1("Hello World", Style = 4 ) = it's return salmon1 color text with UnderLine          \n
                salmon1("Hello World", Style = 5 ) = it's return Blinking salmon1 color text                \n
        """
        if rgb:
            return (255, 140, 105)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 140, 105,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 140, 105)
                


def salmon2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the salmon2 colored text.\n
        salmon2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use salmon2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: salmon2("text",bg='salmon2') then it's apply the salmon2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of salmon2\n
                    for example : salmon2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                salmon2("Hello World", Style = 0 ) = it's return salmon2 color text without any style       \n
                salmon2("Hello World", Style = 1 ) = it's return salmon2 color text with bold text          \n
                salmon2("Hello World", Style = 2 ) = it's return salmon2 color text with light text         \n
                salmon2("Hello World", Style = 3 ) = it's return salmon2 color text with Italicized style   \n
                salmon2("Hello World", Style = 4 ) = it's return salmon2 color text with UnderLine          \n
                salmon2("Hello World", Style = 5 ) = it's return Blinking salmon2 color text                \n
        """
        if rgb:
            return (238, 130, 98)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 130, 98,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 130, 98)
                


def salmon3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the salmon3 colored text.\n
        salmon3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use salmon3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: salmon3("text",bg='salmon3') then it's apply the salmon3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of salmon3\n
                    for example : salmon3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                salmon3("Hello World", Style = 0 ) = it's return salmon3 color text without any style       \n
                salmon3("Hello World", Style = 1 ) = it's return salmon3 color text with bold text          \n
                salmon3("Hello World", Style = 2 ) = it's return salmon3 color text with light text         \n
                salmon3("Hello World", Style = 3 ) = it's return salmon3 color text with Italicized style   \n
                salmon3("Hello World", Style = 4 ) = it's return salmon3 color text with UnderLine          \n
                salmon3("Hello World", Style = 5 ) = it's return Blinking salmon3 color text                \n
        """
        if rgb:
            return (205, 112, 84)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 112, 84,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 112, 84)
                


def salmon4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the salmon4 colored text.\n
        salmon4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use salmon4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: salmon4("text",bg='salmon4') then it's apply the salmon4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of salmon4\n
                    for example : salmon4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                salmon4("Hello World", Style = 0 ) = it's return salmon4 color text without any style       \n
                salmon4("Hello World", Style = 1 ) = it's return salmon4 color text with bold text          \n
                salmon4("Hello World", Style = 2 ) = it's return salmon4 color text with light text         \n
                salmon4("Hello World", Style = 3 ) = it's return salmon4 color text with Italicized style   \n
                salmon4("Hello World", Style = 4 ) = it's return salmon4 color text with UnderLine          \n
                salmon4("Hello World", Style = 5 ) = it's return Blinking salmon4 color text                \n
        """
        if rgb:
            return (139, 76, 57)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 76, 57,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 76, 57)
                


def sienna( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the sienna colored text.\n
        sienna() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use siennabg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: sienna("text",bg='sienna') then it's apply the sienna color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of sienna\n
                    for example : sienna(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                sienna("Hello World", Style = 0 ) = it's return sienna color text without any style       \n
                sienna("Hello World", Style = 1 ) = it's return sienna color text with bold text          \n
                sienna("Hello World", Style = 2 ) = it's return sienna color text with light text         \n
                sienna("Hello World", Style = 3 ) = it's return sienna color text with Italicized style   \n
                sienna("Hello World", Style = 4 ) = it's return sienna color text with UnderLine          \n
                sienna("Hello World", Style = 5 ) = it's return Blinking sienna color text                \n
        """
        if rgb:
            return (160, 82, 45)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 160, 82, 45,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 160, 82, 45)
                


def sienna1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the sienna1 colored text.\n
        sienna1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use sienna1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: sienna1("text",bg='sienna1') then it's apply the sienna1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of sienna1\n
                    for example : sienna1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                sienna1("Hello World", Style = 0 ) = it's return sienna1 color text without any style       \n
                sienna1("Hello World", Style = 1 ) = it's return sienna1 color text with bold text          \n
                sienna1("Hello World", Style = 2 ) = it's return sienna1 color text with light text         \n
                sienna1("Hello World", Style = 3 ) = it's return sienna1 color text with Italicized style   \n
                sienna1("Hello World", Style = 4 ) = it's return sienna1 color text with UnderLine          \n
                sienna1("Hello World", Style = 5 ) = it's return Blinking sienna1 color text                \n
        """
        if rgb:
            return (255, 130, 71)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 130, 71,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 130, 71)
                


def sienna2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the sienna2 colored text.\n
        sienna2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use sienna2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: sienna2("text",bg='sienna2') then it's apply the sienna2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of sienna2\n
                    for example : sienna2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                sienna2("Hello World", Style = 0 ) = it's return sienna2 color text without any style       \n
                sienna2("Hello World", Style = 1 ) = it's return sienna2 color text with bold text          \n
                sienna2("Hello World", Style = 2 ) = it's return sienna2 color text with light text         \n
                sienna2("Hello World", Style = 3 ) = it's return sienna2 color text with Italicized style   \n
                sienna2("Hello World", Style = 4 ) = it's return sienna2 color text with UnderLine          \n
                sienna2("Hello World", Style = 5 ) = it's return Blinking sienna2 color text                \n
        """
        if rgb:
            return (238, 121, 66)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 121, 66,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 121, 66)
                


def sienna3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the sienna3 colored text.\n
        sienna3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use sienna3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: sienna3("text",bg='sienna3') then it's apply the sienna3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of sienna3\n
                    for example : sienna3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                sienna3("Hello World", Style = 0 ) = it's return sienna3 color text without any style       \n
                sienna3("Hello World", Style = 1 ) = it's return sienna3 color text with bold text          \n
                sienna3("Hello World", Style = 2 ) = it's return sienna3 color text with light text         \n
                sienna3("Hello World", Style = 3 ) = it's return sienna3 color text with Italicized style   \n
                sienna3("Hello World", Style = 4 ) = it's return sienna3 color text with UnderLine          \n
                sienna3("Hello World", Style = 5 ) = it's return Blinking sienna3 color text                \n
        """
        if rgb:
            return (205, 104, 57)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 104, 57,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 104, 57)
                


def sienna4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the sienna4 colored text.\n
        sienna4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use sienna4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: sienna4("text",bg='sienna4') then it's apply the sienna4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of sienna4\n
                    for example : sienna4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                sienna4("Hello World", Style = 0 ) = it's return sienna4 color text without any style       \n
                sienna4("Hello World", Style = 1 ) = it's return sienna4 color text with bold text          \n
                sienna4("Hello World", Style = 2 ) = it's return sienna4 color text with light text         \n
                sienna4("Hello World", Style = 3 ) = it's return sienna4 color text with Italicized style   \n
                sienna4("Hello World", Style = 4 ) = it's return sienna4 color text with UnderLine          \n
                sienna4("Hello World", Style = 5 ) = it's return Blinking sienna4 color text                \n
        """
        if rgb:
            return (139, 71, 38)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 71, 38,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 71, 38)
                


def mandarian_orange( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the mandarian_orange colored text.\n
        mandarian_orange() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use mandarian_orangebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: mandarian_orange("text",bg='mandarian_orange') then it's apply the mandarian_orange color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of mandarian_orange\n
                    for example : mandarian_orange(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                mandarian_orange("Hello World", Style = 0 ) = it's return mandarian_orange color text without any style       \n
                mandarian_orange("Hello World", Style = 1 ) = it's return mandarian_orange color text with bold text          \n
                mandarian_orange("Hello World", Style = 2 ) = it's return mandarian_orange color text with light text         \n
                mandarian_orange("Hello World", Style = 3 ) = it's return mandarian_orange color text with Italicized style   \n
                mandarian_orange("Hello World", Style = 4 ) = it's return mandarian_orange color text with UnderLine          \n
                mandarian_orange("Hello World", Style = 5 ) = it's return Blinking mandarian_orange color text                \n
        """
        if rgb:
            return (142, 35, 35)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 142, 35, 35,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 142, 35, 35)
                


def orange( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the orange colored text.\n
        orange() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use orangebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: orange("text",bg='orange') then it's apply the orange color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of orange\n
                    for example : orange(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                orange("Hello World", Style = 0 ) = it's return orange color text without any style       \n
                orange("Hello World", Style = 1 ) = it's return orange color text with bold text          \n
                orange("Hello World", Style = 2 ) = it's return orange color text with light text         \n
                orange("Hello World", Style = 3 ) = it's return orange color text with Italicized style   \n
                orange("Hello World", Style = 4 ) = it's return orange color text with UnderLine          \n
                orange("Hello World", Style = 5 ) = it's return Blinking orange color text                \n
        """
        if rgb:
            return (255, 127, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 127, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 127, 0)
                


def orange_red( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the orange_red colored text.\n
        orange_red() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use orange_redbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: orange_red("text",bg='orange_red') then it's apply the orange_red color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of orange_red\n
                    for example : orange_red(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                orange_red("Hello World", Style = 0 ) = it's return orange_red color text without any style       \n
                orange_red("Hello World", Style = 1 ) = it's return orange_red color text with bold text          \n
                orange_red("Hello World", Style = 2 ) = it's return orange_red color text with light text         \n
                orange_red("Hello World", Style = 3 ) = it's return orange_red color text with Italicized style   \n
                orange_red("Hello World", Style = 4 ) = it's return orange_red color text with UnderLine          \n
                orange_red("Hello World", Style = 5 ) = it's return Blinking orange_red color text                \n
        """
        if rgb:
            return (255, 36, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 36, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 36, 0)
                


def deeppink( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the deeppink colored text.\n
        deeppink() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use deeppinkbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: deeppink("text",bg='deeppink') then it's apply the deeppink color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of deeppink\n
                    for example : deeppink(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                deeppink("Hello World", Style = 0 ) = it's return deeppink color text without any style       \n
                deeppink("Hello World", Style = 1 ) = it's return deeppink color text with bold text          \n
                deeppink("Hello World", Style = 2 ) = it's return deeppink color text with light text         \n
                deeppink("Hello World", Style = 3 ) = it's return deeppink color text with Italicized style   \n
                deeppink("Hello World", Style = 4 ) = it's return deeppink color text with UnderLine          \n
                deeppink("Hello World", Style = 5 ) = it's return Blinking deeppink color text                \n
        """
        if rgb:
            return (255, 20, 147)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 20, 147,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 20, 147)
                


def deeppink1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the deeppink1 colored text.\n
        deeppink1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use deeppink1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: deeppink1("text",bg='deeppink1') then it's apply the deeppink1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of deeppink1\n
                    for example : deeppink1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                deeppink1("Hello World", Style = 0 ) = it's return deeppink1 color text without any style       \n
                deeppink1("Hello World", Style = 1 ) = it's return deeppink1 color text with bold text          \n
                deeppink1("Hello World", Style = 2 ) = it's return deeppink1 color text with light text         \n
                deeppink1("Hello World", Style = 3 ) = it's return deeppink1 color text with Italicized style   \n
                deeppink1("Hello World", Style = 4 ) = it's return deeppink1 color text with UnderLine          \n
                deeppink1("Hello World", Style = 5 ) = it's return Blinking deeppink1 color text                \n
        """
        if rgb:
            return (255, 20, 147)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 20, 147,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 20, 147)
                


def deeppink2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the deeppink2 colored text.\n
        deeppink2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use deeppink2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: deeppink2("text",bg='deeppink2') then it's apply the deeppink2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of deeppink2\n
                    for example : deeppink2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                deeppink2("Hello World", Style = 0 ) = it's return deeppink2 color text without any style       \n
                deeppink2("Hello World", Style = 1 ) = it's return deeppink2 color text with bold text          \n
                deeppink2("Hello World", Style = 2 ) = it's return deeppink2 color text with light text         \n
                deeppink2("Hello World", Style = 3 ) = it's return deeppink2 color text with Italicized style   \n
                deeppink2("Hello World", Style = 4 ) = it's return deeppink2 color text with UnderLine          \n
                deeppink2("Hello World", Style = 5 ) = it's return Blinking deeppink2 color text                \n
        """
        if rgb:
            return (238, 18, 137)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 18, 137,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 18, 137)
                


def deeppink3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the deeppink3 colored text.\n
        deeppink3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use deeppink3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: deeppink3("text",bg='deeppink3') then it's apply the deeppink3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of deeppink3\n
                    for example : deeppink3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                deeppink3("Hello World", Style = 0 ) = it's return deeppink3 color text without any style       \n
                deeppink3("Hello World", Style = 1 ) = it's return deeppink3 color text with bold text          \n
                deeppink3("Hello World", Style = 2 ) = it's return deeppink3 color text with light text         \n
                deeppink3("Hello World", Style = 3 ) = it's return deeppink3 color text with Italicized style   \n
                deeppink3("Hello World", Style = 4 ) = it's return deeppink3 color text with UnderLine          \n
                deeppink3("Hello World", Style = 5 ) = it's return Blinking deeppink3 color text                \n
        """
        if rgb:
            return (205, 16, 118)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 16, 118,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 16, 118)
                


def deeppink4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the deeppink4 colored text.\n
        deeppink4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use deeppink4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: deeppink4("text",bg='deeppink4') then it's apply the deeppink4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of deeppink4\n
                    for example : deeppink4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                deeppink4("Hello World", Style = 0 ) = it's return deeppink4 color text without any style       \n
                deeppink4("Hello World", Style = 1 ) = it's return deeppink4 color text with bold text          \n
                deeppink4("Hello World", Style = 2 ) = it's return deeppink4 color text with light text         \n
                deeppink4("Hello World", Style = 3 ) = it's return deeppink4 color text with Italicized style   \n
                deeppink4("Hello World", Style = 4 ) = it's return deeppink4 color text with UnderLine          \n
                deeppink4("Hello World", Style = 5 ) = it's return Blinking deeppink4 color text                \n
        """
        if rgb:
            return (139, 10, 80)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 10, 80,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 10, 80)
                


def hotpink( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the hotpink colored text.\n
        hotpink() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use hotpinkbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: hotpink("text",bg='hotpink') then it's apply the hotpink color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of hotpink\n
                    for example : hotpink(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                hotpink("Hello World", Style = 0 ) = it's return hotpink color text without any style       \n
                hotpink("Hello World", Style = 1 ) = it's return hotpink color text with bold text          \n
                hotpink("Hello World", Style = 2 ) = it's return hotpink color text with light text         \n
                hotpink("Hello World", Style = 3 ) = it's return hotpink color text with Italicized style   \n
                hotpink("Hello World", Style = 4 ) = it's return hotpink color text with UnderLine          \n
                hotpink("Hello World", Style = 5 ) = it's return Blinking hotpink color text                \n
        """
        if rgb:
            return (255, 105, 180)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 105, 180,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 105, 180)
                


def hotpink1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the hotpink1 colored text.\n
        hotpink1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use hotpink1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: hotpink1("text",bg='hotpink1') then it's apply the hotpink1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of hotpink1\n
                    for example : hotpink1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                hotpink1("Hello World", Style = 0 ) = it's return hotpink1 color text without any style       \n
                hotpink1("Hello World", Style = 1 ) = it's return hotpink1 color text with bold text          \n
                hotpink1("Hello World", Style = 2 ) = it's return hotpink1 color text with light text         \n
                hotpink1("Hello World", Style = 3 ) = it's return hotpink1 color text with Italicized style   \n
                hotpink1("Hello World", Style = 4 ) = it's return hotpink1 color text with UnderLine          \n
                hotpink1("Hello World", Style = 5 ) = it's return Blinking hotpink1 color text                \n
        """
        if rgb:
            return (255, 110, 180)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 110, 180,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 110, 180)
                


def hotpink2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the hotpink2 colored text.\n
        hotpink2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use hotpink2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: hotpink2("text",bg='hotpink2') then it's apply the hotpink2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of hotpink2\n
                    for example : hotpink2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                hotpink2("Hello World", Style = 0 ) = it's return hotpink2 color text without any style       \n
                hotpink2("Hello World", Style = 1 ) = it's return hotpink2 color text with bold text          \n
                hotpink2("Hello World", Style = 2 ) = it's return hotpink2 color text with light text         \n
                hotpink2("Hello World", Style = 3 ) = it's return hotpink2 color text with Italicized style   \n
                hotpink2("Hello World", Style = 4 ) = it's return hotpink2 color text with UnderLine          \n
                hotpink2("Hello World", Style = 5 ) = it's return Blinking hotpink2 color text                \n
        """
        if rgb:
            return (238, 106, 167)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 106, 167,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 106, 167)
                


def hotpink3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the hotpink3 colored text.\n
        hotpink3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use hotpink3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: hotpink3("text",bg='hotpink3') then it's apply the hotpink3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of hotpink3\n
                    for example : hotpink3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                hotpink3("Hello World", Style = 0 ) = it's return hotpink3 color text without any style       \n
                hotpink3("Hello World", Style = 1 ) = it's return hotpink3 color text with bold text          \n
                hotpink3("Hello World", Style = 2 ) = it's return hotpink3 color text with light text         \n
                hotpink3("Hello World", Style = 3 ) = it's return hotpink3 color text with Italicized style   \n
                hotpink3("Hello World", Style = 4 ) = it's return hotpink3 color text with UnderLine          \n
                hotpink3("Hello World", Style = 5 ) = it's return Blinking hotpink3 color text                \n
        """
        if rgb:
            return (205, 96, 144)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 96, 144,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 96, 144)
                


def hotpink4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the hotpink4 colored text.\n
        hotpink4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use hotpink4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: hotpink4("text",bg='hotpink4') then it's apply the hotpink4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of hotpink4\n
                    for example : hotpink4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                hotpink4("Hello World", Style = 0 ) = it's return hotpink4 color text without any style       \n
                hotpink4("Hello World", Style = 1 ) = it's return hotpink4 color text with bold text          \n
                hotpink4("Hello World", Style = 2 ) = it's return hotpink4 color text with light text         \n
                hotpink4("Hello World", Style = 3 ) = it's return hotpink4 color text with Italicized style   \n
                hotpink4("Hello World", Style = 4 ) = it's return hotpink4 color text with UnderLine          \n
                hotpink4("Hello World", Style = 5 ) = it's return Blinking hotpink4 color text                \n
        """
        if rgb:
            return (139, 58, 98)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 58, 98,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 58, 98)
                


def indianred( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the indianred colored text.\n
        indianred() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use indianredbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: indianred("text",bg='indianred') then it's apply the indianred color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of indianred\n
                    for example : indianred(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                indianred("Hello World", Style = 0 ) = it's return indianred color text without any style       \n
                indianred("Hello World", Style = 1 ) = it's return indianred color text with bold text          \n
                indianred("Hello World", Style = 2 ) = it's return indianred color text with light text         \n
                indianred("Hello World", Style = 3 ) = it's return indianred color text with Italicized style   \n
                indianred("Hello World", Style = 4 ) = it's return indianred color text with UnderLine          \n
                indianred("Hello World", Style = 5 ) = it's return Blinking indianred color text                \n
        """
        if rgb:
            return (205, 92, 92)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 92, 92,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 92, 92)
                


def indianred1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the indianred1 colored text.\n
        indianred1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use indianred1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: indianred1("text",bg='indianred1') then it's apply the indianred1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of indianred1\n
                    for example : indianred1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                indianred1("Hello World", Style = 0 ) = it's return indianred1 color text without any style       \n
                indianred1("Hello World", Style = 1 ) = it's return indianred1 color text with bold text          \n
                indianred1("Hello World", Style = 2 ) = it's return indianred1 color text with light text         \n
                indianred1("Hello World", Style = 3 ) = it's return indianred1 color text with Italicized style   \n
                indianred1("Hello World", Style = 4 ) = it's return indianred1 color text with UnderLine          \n
                indianred1("Hello World", Style = 5 ) = it's return Blinking indianred1 color text                \n
        """
        if rgb:
            return (255, 106, 106)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 106, 106,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 106, 106)
                


def indianred2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the indianred2 colored text.\n
        indianred2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use indianred2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: indianred2("text",bg='indianred2') then it's apply the indianred2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of indianred2\n
                    for example : indianred2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                indianred2("Hello World", Style = 0 ) = it's return indianred2 color text without any style       \n
                indianred2("Hello World", Style = 1 ) = it's return indianred2 color text with bold text          \n
                indianred2("Hello World", Style = 2 ) = it's return indianred2 color text with light text         \n
                indianred2("Hello World", Style = 3 ) = it's return indianred2 color text with Italicized style   \n
                indianred2("Hello World", Style = 4 ) = it's return indianred2 color text with UnderLine          \n
                indianred2("Hello World", Style = 5 ) = it's return Blinking indianred2 color text                \n
        """
        if rgb:
            return (238, 99, 99)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 99, 99,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 99, 99)
                


def indianred3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the indianred3 colored text.\n
        indianred3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use indianred3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: indianred3("text",bg='indianred3') then it's apply the indianred3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of indianred3\n
                    for example : indianred3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                indianred3("Hello World", Style = 0 ) = it's return indianred3 color text without any style       \n
                indianred3("Hello World", Style = 1 ) = it's return indianred3 color text with bold text          \n
                indianred3("Hello World", Style = 2 ) = it's return indianred3 color text with light text         \n
                indianred3("Hello World", Style = 3 ) = it's return indianred3 color text with Italicized style   \n
                indianred3("Hello World", Style = 4 ) = it's return indianred3 color text with UnderLine          \n
                indianred3("Hello World", Style = 5 ) = it's return Blinking indianred3 color text                \n
        """
        if rgb:
            return (205, 85, 85)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 85, 85,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 85, 85)
                


def indianred4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the indianred4 colored text.\n
        indianred4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use indianred4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: indianred4("text",bg='indianred4') then it's apply the indianred4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of indianred4\n
                    for example : indianred4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                indianred4("Hello World", Style = 0 ) = it's return indianred4 color text without any style       \n
                indianred4("Hello World", Style = 1 ) = it's return indianred4 color text with bold text          \n
                indianred4("Hello World", Style = 2 ) = it's return indianred4 color text with light text         \n
                indianred4("Hello World", Style = 3 ) = it's return indianred4 color text with Italicized style   \n
                indianred4("Hello World", Style = 4 ) = it's return indianred4 color text with UnderLine          \n
                indianred4("Hello World", Style = 5 ) = it's return Blinking indianred4 color text                \n
        """
        if rgb:
            return (139, 58, 58)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 58, 58,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 58, 58)
                


def lightpink( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightpink colored text.\n
        lightpink() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightpinkbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightpink("text",bg='lightpink') then it's apply the lightpink color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightpink\n
                    for example : lightpink(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightpink("Hello World", Style = 0 ) = it's return lightpink color text without any style       \n
                lightpink("Hello World", Style = 1 ) = it's return lightpink color text with bold text          \n
                lightpink("Hello World", Style = 2 ) = it's return lightpink color text with light text         \n
                lightpink("Hello World", Style = 3 ) = it's return lightpink color text with Italicized style   \n
                lightpink("Hello World", Style = 4 ) = it's return lightpink color text with UnderLine          \n
                lightpink("Hello World", Style = 5 ) = it's return Blinking lightpink color text                \n
        """
        if rgb:
            return (255, 182, 193)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 182, 193,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 182, 193)
                


def lightpink1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightpink1 colored text.\n
        lightpink1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightpink1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightpink1("text",bg='lightpink1') then it's apply the lightpink1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightpink1\n
                    for example : lightpink1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightpink1("Hello World", Style = 0 ) = it's return lightpink1 color text without any style       \n
                lightpink1("Hello World", Style = 1 ) = it's return lightpink1 color text with bold text          \n
                lightpink1("Hello World", Style = 2 ) = it's return lightpink1 color text with light text         \n
                lightpink1("Hello World", Style = 3 ) = it's return lightpink1 color text with Italicized style   \n
                lightpink1("Hello World", Style = 4 ) = it's return lightpink1 color text with UnderLine          \n
                lightpink1("Hello World", Style = 5 ) = it's return Blinking lightpink1 color text                \n
        """
        if rgb:
            return (255, 174, 185)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 174, 185,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 174, 185)
                


def lightpink2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightpink2 colored text.\n
        lightpink2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightpink2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightpink2("text",bg='lightpink2') then it's apply the lightpink2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightpink2\n
                    for example : lightpink2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightpink2("Hello World", Style = 0 ) = it's return lightpink2 color text without any style       \n
                lightpink2("Hello World", Style = 1 ) = it's return lightpink2 color text with bold text          \n
                lightpink2("Hello World", Style = 2 ) = it's return lightpink2 color text with light text         \n
                lightpink2("Hello World", Style = 3 ) = it's return lightpink2 color text with Italicized style   \n
                lightpink2("Hello World", Style = 4 ) = it's return lightpink2 color text with UnderLine          \n
                lightpink2("Hello World", Style = 5 ) = it's return Blinking lightpink2 color text                \n
        """
        if rgb:
            return (238, 162, 173)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 162, 173,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 162, 173)
                


def lightpink3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightpink3 colored text.\n
        lightpink3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightpink3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightpink3("text",bg='lightpink3') then it's apply the lightpink3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightpink3\n
                    for example : lightpink3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightpink3("Hello World", Style = 0 ) = it's return lightpink3 color text without any style       \n
                lightpink3("Hello World", Style = 1 ) = it's return lightpink3 color text with bold text          \n
                lightpink3("Hello World", Style = 2 ) = it's return lightpink3 color text with light text         \n
                lightpink3("Hello World", Style = 3 ) = it's return lightpink3 color text with Italicized style   \n
                lightpink3("Hello World", Style = 4 ) = it's return lightpink3 color text with UnderLine          \n
                lightpink3("Hello World", Style = 5 ) = it's return Blinking lightpink3 color text                \n
        """
        if rgb:
            return (205, 140, 149)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 140, 149,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 140, 149)
                


def lightpink4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightpink4 colored text.\n
        lightpink4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightpink4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightpink4("text",bg='lightpink4') then it's apply the lightpink4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightpink4\n
                    for example : lightpink4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightpink4("Hello World", Style = 0 ) = it's return lightpink4 color text without any style       \n
                lightpink4("Hello World", Style = 1 ) = it's return lightpink4 color text with bold text          \n
                lightpink4("Hello World", Style = 2 ) = it's return lightpink4 color text with light text         \n
                lightpink4("Hello World", Style = 3 ) = it's return lightpink4 color text with Italicized style   \n
                lightpink4("Hello World", Style = 4 ) = it's return lightpink4 color text with UnderLine          \n
                lightpink4("Hello World", Style = 5 ) = it's return Blinking lightpink4 color text                \n
        """
        if rgb:
            return (139, 95, 101)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 95, 101,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 95, 101)
                


def mediumvioletred( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the mediumvioletred colored text.\n
        mediumvioletred() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use mediumvioletredbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: mediumvioletred("text",bg='mediumvioletred') then it's apply the mediumvioletred color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of mediumvioletred\n
                    for example : mediumvioletred(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                mediumvioletred("Hello World", Style = 0 ) = it's return mediumvioletred color text without any style       \n
                mediumvioletred("Hello World", Style = 1 ) = it's return mediumvioletred color text with bold text          \n
                mediumvioletred("Hello World", Style = 2 ) = it's return mediumvioletred color text with light text         \n
                mediumvioletred("Hello World", Style = 3 ) = it's return mediumvioletred color text with Italicized style   \n
                mediumvioletred("Hello World", Style = 4 ) = it's return mediumvioletred color text with UnderLine          \n
                mediumvioletred("Hello World", Style = 5 ) = it's return Blinking mediumvioletred color text                \n
        """
        if rgb:
            return (199, 21, 133)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 199, 21, 133,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 199, 21, 133)
                


def mistyrose( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the mistyrose colored text.\n
        mistyrose() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use mistyrosebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: mistyrose("text",bg='mistyrose') then it's apply the mistyrose color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of mistyrose\n
                    for example : mistyrose(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                mistyrose("Hello World", Style = 0 ) = it's return mistyrose color text without any style       \n
                mistyrose("Hello World", Style = 1 ) = it's return mistyrose color text with bold text          \n
                mistyrose("Hello World", Style = 2 ) = it's return mistyrose color text with light text         \n
                mistyrose("Hello World", Style = 3 ) = it's return mistyrose color text with Italicized style   \n
                mistyrose("Hello World", Style = 4 ) = it's return mistyrose color text with UnderLine          \n
                mistyrose("Hello World", Style = 5 ) = it's return Blinking mistyrose color text                \n
        """
        if rgb:
            return (255, 228, 225)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 228, 225,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 228, 225)
                


def mistyrose1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the mistyrose1 colored text.\n
        mistyrose1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use mistyrose1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: mistyrose1("text",bg='mistyrose1') then it's apply the mistyrose1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of mistyrose1\n
                    for example : mistyrose1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                mistyrose1("Hello World", Style = 0 ) = it's return mistyrose1 color text without any style       \n
                mistyrose1("Hello World", Style = 1 ) = it's return mistyrose1 color text with bold text          \n
                mistyrose1("Hello World", Style = 2 ) = it's return mistyrose1 color text with light text         \n
                mistyrose1("Hello World", Style = 3 ) = it's return mistyrose1 color text with Italicized style   \n
                mistyrose1("Hello World", Style = 4 ) = it's return mistyrose1 color text with UnderLine          \n
                mistyrose1("Hello World", Style = 5 ) = it's return Blinking mistyrose1 color text                \n
        """
        if rgb:
            return (255, 228, 225)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 228, 225,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 228, 225)
                


def mistyrose2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the mistyrose2 colored text.\n
        mistyrose2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use mistyrose2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: mistyrose2("text",bg='mistyrose2') then it's apply the mistyrose2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of mistyrose2\n
                    for example : mistyrose2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                mistyrose2("Hello World", Style = 0 ) = it's return mistyrose2 color text without any style       \n
                mistyrose2("Hello World", Style = 1 ) = it's return mistyrose2 color text with bold text          \n
                mistyrose2("Hello World", Style = 2 ) = it's return mistyrose2 color text with light text         \n
                mistyrose2("Hello World", Style = 3 ) = it's return mistyrose2 color text with Italicized style   \n
                mistyrose2("Hello World", Style = 4 ) = it's return mistyrose2 color text with UnderLine          \n
                mistyrose2("Hello World", Style = 5 ) = it's return Blinking mistyrose2 color text                \n
        """
        if rgb:
            return (238, 213, 210)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 213, 210,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 213, 210)
                


def mistyrose3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the mistyrose3 colored text.\n
        mistyrose3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use mistyrose3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: mistyrose3("text",bg='mistyrose3') then it's apply the mistyrose3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of mistyrose3\n
                    for example : mistyrose3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                mistyrose3("Hello World", Style = 0 ) = it's return mistyrose3 color text without any style       \n
                mistyrose3("Hello World", Style = 1 ) = it's return mistyrose3 color text with bold text          \n
                mistyrose3("Hello World", Style = 2 ) = it's return mistyrose3 color text with light text         \n
                mistyrose3("Hello World", Style = 3 ) = it's return mistyrose3 color text with Italicized style   \n
                mistyrose3("Hello World", Style = 4 ) = it's return mistyrose3 color text with UnderLine          \n
                mistyrose3("Hello World", Style = 5 ) = it's return Blinking mistyrose3 color text                \n
        """
        if rgb:
            return (205, 183, 181)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 183, 181,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 183, 181)
                


def mistyrose4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the mistyrose4 colored text.\n
        mistyrose4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use mistyrose4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: mistyrose4("text",bg='mistyrose4') then it's apply the mistyrose4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of mistyrose4\n
                    for example : mistyrose4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                mistyrose4("Hello World", Style = 0 ) = it's return mistyrose4 color text without any style       \n
                mistyrose4("Hello World", Style = 1 ) = it's return mistyrose4 color text with bold text          \n
                mistyrose4("Hello World", Style = 2 ) = it's return mistyrose4 color text with light text         \n
                mistyrose4("Hello World", Style = 3 ) = it's return mistyrose4 color text with Italicized style   \n
                mistyrose4("Hello World", Style = 4 ) = it's return mistyrose4 color text with UnderLine          \n
                mistyrose4("Hello World", Style = 5 ) = it's return Blinking mistyrose4 color text                \n
        """
        if rgb:
            return (139, 125, 123)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 125, 123,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 125, 123)
                


def orangered( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the orangered colored text.\n
        orangered() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use orangeredbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: orangered("text",bg='orangered') then it's apply the orangered color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of orangered\n
                    for example : orangered(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                orangered("Hello World", Style = 0 ) = it's return orangered color text without any style       \n
                orangered("Hello World", Style = 1 ) = it's return orangered color text with bold text          \n
                orangered("Hello World", Style = 2 ) = it's return orangered color text with light text         \n
                orangered("Hello World", Style = 3 ) = it's return orangered color text with Italicized style   \n
                orangered("Hello World", Style = 4 ) = it's return orangered color text with UnderLine          \n
                orangered("Hello World", Style = 5 ) = it's return Blinking orangered color text                \n
        """
        if rgb:
            return (255, 69, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 69, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 69, 0)
                


def orangered1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the orangered1 colored text.\n
        orangered1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use orangered1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: orangered1("text",bg='orangered1') then it's apply the orangered1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of orangered1\n
                    for example : orangered1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                orangered1("Hello World", Style = 0 ) = it's return orangered1 color text without any style       \n
                orangered1("Hello World", Style = 1 ) = it's return orangered1 color text with bold text          \n
                orangered1("Hello World", Style = 2 ) = it's return orangered1 color text with light text         \n
                orangered1("Hello World", Style = 3 ) = it's return orangered1 color text with Italicized style   \n
                orangered1("Hello World", Style = 4 ) = it's return orangered1 color text with UnderLine          \n
                orangered1("Hello World", Style = 5 ) = it's return Blinking orangered1 color text                \n
        """
        if rgb:
            return (255, 69, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 69, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 69, 0)
                


def orangered2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the orangered2 colored text.\n
        orangered2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use orangered2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: orangered2("text",bg='orangered2') then it's apply the orangered2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of orangered2\n
                    for example : orangered2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                orangered2("Hello World", Style = 0 ) = it's return orangered2 color text without any style       \n
                orangered2("Hello World", Style = 1 ) = it's return orangered2 color text with bold text          \n
                orangered2("Hello World", Style = 2 ) = it's return orangered2 color text with light text         \n
                orangered2("Hello World", Style = 3 ) = it's return orangered2 color text with Italicized style   \n
                orangered2("Hello World", Style = 4 ) = it's return orangered2 color text with UnderLine          \n
                orangered2("Hello World", Style = 5 ) = it's return Blinking orangered2 color text                \n
        """
        if rgb:
            return (238, 64, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 64, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 64, 0)
                


def orangered3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the orangered3 colored text.\n
        orangered3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use orangered3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: orangered3("text",bg='orangered3') then it's apply the orangered3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of orangered3\n
                    for example : orangered3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                orangered3("Hello World", Style = 0 ) = it's return orangered3 color text without any style       \n
                orangered3("Hello World", Style = 1 ) = it's return orangered3 color text with bold text          \n
                orangered3("Hello World", Style = 2 ) = it's return orangered3 color text with light text         \n
                orangered3("Hello World", Style = 3 ) = it's return orangered3 color text with Italicized style   \n
                orangered3("Hello World", Style = 4 ) = it's return orangered3 color text with UnderLine          \n
                orangered3("Hello World", Style = 5 ) = it's return Blinking orangered3 color text                \n
        """
        if rgb:
            return (205, 55, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 55, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 55, 0)
                


def orangered4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the orangered4 colored text.\n
        orangered4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use orangered4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: orangered4("text",bg='orangered4') then it's apply the orangered4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of orangered4\n
                    for example : orangered4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                orangered4("Hello World", Style = 0 ) = it's return orangered4 color text without any style       \n
                orangered4("Hello World", Style = 1 ) = it's return orangered4 color text with bold text          \n
                orangered4("Hello World", Style = 2 ) = it's return orangered4 color text with light text         \n
                orangered4("Hello World", Style = 3 ) = it's return orangered4 color text with Italicized style   \n
                orangered4("Hello World", Style = 4 ) = it's return orangered4 color text with UnderLine          \n
                orangered4("Hello World", Style = 5 ) = it's return Blinking orangered4 color text                \n
        """
        if rgb:
            return (139, 37, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 37, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 37, 0)
                


def palevioletred( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the palevioletred colored text.\n
        palevioletred() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use palevioletredbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: palevioletred("text",bg='palevioletred') then it's apply the palevioletred color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of palevioletred\n
                    for example : palevioletred(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                palevioletred("Hello World", Style = 0 ) = it's return palevioletred color text without any style       \n
                palevioletred("Hello World", Style = 1 ) = it's return palevioletred color text with bold text          \n
                palevioletred("Hello World", Style = 2 ) = it's return palevioletred color text with light text         \n
                palevioletred("Hello World", Style = 3 ) = it's return palevioletred color text with Italicized style   \n
                palevioletred("Hello World", Style = 4 ) = it's return palevioletred color text with UnderLine          \n
                palevioletred("Hello World", Style = 5 ) = it's return Blinking palevioletred color text                \n
        """
        if rgb:
            return (219, 112, 147)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 219, 112, 147,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 219, 112, 147)
                


def palevioletred1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the palevioletred1 colored text.\n
        palevioletred1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use palevioletred1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: palevioletred1("text",bg='palevioletred1') then it's apply the palevioletred1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of palevioletred1\n
                    for example : palevioletred1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                palevioletred1("Hello World", Style = 0 ) = it's return palevioletred1 color text without any style       \n
                palevioletred1("Hello World", Style = 1 ) = it's return palevioletred1 color text with bold text          \n
                palevioletred1("Hello World", Style = 2 ) = it's return palevioletred1 color text with light text         \n
                palevioletred1("Hello World", Style = 3 ) = it's return palevioletred1 color text with Italicized style   \n
                palevioletred1("Hello World", Style = 4 ) = it's return palevioletred1 color text with UnderLine          \n
                palevioletred1("Hello World", Style = 5 ) = it's return Blinking palevioletred1 color text                \n
        """
        if rgb:
            return (255, 130, 171)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 130, 171,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 130, 171)
                


def palevioletred2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the palevioletred2 colored text.\n
        palevioletred2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use palevioletred2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: palevioletred2("text",bg='palevioletred2') then it's apply the palevioletred2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of palevioletred2\n
                    for example : palevioletred2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                palevioletred2("Hello World", Style = 0 ) = it's return palevioletred2 color text without any style       \n
                palevioletred2("Hello World", Style = 1 ) = it's return palevioletred2 color text with bold text          \n
                palevioletred2("Hello World", Style = 2 ) = it's return palevioletred2 color text with light text         \n
                palevioletred2("Hello World", Style = 3 ) = it's return palevioletred2 color text with Italicized style   \n
                palevioletred2("Hello World", Style = 4 ) = it's return palevioletred2 color text with UnderLine          \n
                palevioletred2("Hello World", Style = 5 ) = it's return Blinking palevioletred2 color text                \n
        """
        if rgb:
            return (238, 121, 159)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 121, 159,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 121, 159)
                


def palevioletred3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the palevioletred3 colored text.\n
        palevioletred3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use palevioletred3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: palevioletred3("text",bg='palevioletred3') then it's apply the palevioletred3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of palevioletred3\n
                    for example : palevioletred3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                palevioletred3("Hello World", Style = 0 ) = it's return palevioletred3 color text without any style       \n
                palevioletred3("Hello World", Style = 1 ) = it's return palevioletred3 color text with bold text          \n
                palevioletred3("Hello World", Style = 2 ) = it's return palevioletred3 color text with light text         \n
                palevioletred3("Hello World", Style = 3 ) = it's return palevioletred3 color text with Italicized style   \n
                palevioletred3("Hello World", Style = 4 ) = it's return palevioletred3 color text with UnderLine          \n
                palevioletred3("Hello World", Style = 5 ) = it's return Blinking palevioletred3 color text                \n
        """
        if rgb:
            return (205, 104, 137)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 104, 137,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 104, 137)
                


def palevioletred4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the palevioletred4 colored text.\n
        palevioletred4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use palevioletred4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: palevioletred4("text",bg='palevioletred4') then it's apply the palevioletred4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of palevioletred4\n
                    for example : palevioletred4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                palevioletred4("Hello World", Style = 0 ) = it's return palevioletred4 color text without any style       \n
                palevioletred4("Hello World", Style = 1 ) = it's return palevioletred4 color text with bold text          \n
                palevioletred4("Hello World", Style = 2 ) = it's return palevioletred4 color text with light text         \n
                palevioletred4("Hello World", Style = 3 ) = it's return palevioletred4 color text with Italicized style   \n
                palevioletred4("Hello World", Style = 4 ) = it's return palevioletred4 color text with UnderLine          \n
                palevioletred4("Hello World", Style = 5 ) = it's return Blinking palevioletred4 color text                \n
        """
        if rgb:
            return (139, 71, 93)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 71, 93,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 71, 93)
                


def violetred( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the violetred colored text.\n
        violetred() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use violetredbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: violetred("text",bg='violetred') then it's apply the violetred color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of violetred\n
                    for example : violetred(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                violetred("Hello World", Style = 0 ) = it's return violetred color text without any style       \n
                violetred("Hello World", Style = 1 ) = it's return violetred color text with bold text          \n
                violetred("Hello World", Style = 2 ) = it's return violetred color text with light text         \n
                violetred("Hello World", Style = 3 ) = it's return violetred color text with Italicized style   \n
                violetred("Hello World", Style = 4 ) = it's return violetred color text with UnderLine          \n
                violetred("Hello World", Style = 5 ) = it's return Blinking violetred color text                \n
        """
        if rgb:
            return (208, 32, 144)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 208, 32, 144,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 208, 32, 144)
                


def violetred1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the violetred1 colored text.\n
        violetred1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use violetred1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: violetred1("text",bg='violetred1') then it's apply the violetred1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of violetred1\n
                    for example : violetred1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                violetred1("Hello World", Style = 0 ) = it's return violetred1 color text without any style       \n
                violetred1("Hello World", Style = 1 ) = it's return violetred1 color text with bold text          \n
                violetred1("Hello World", Style = 2 ) = it's return violetred1 color text with light text         \n
                violetred1("Hello World", Style = 3 ) = it's return violetred1 color text with Italicized style   \n
                violetred1("Hello World", Style = 4 ) = it's return violetred1 color text with UnderLine          \n
                violetred1("Hello World", Style = 5 ) = it's return Blinking violetred1 color text                \n
        """
        if rgb:
            return (255, 62, 150)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 62, 150,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 62, 150)
                


def violetred2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the violetred2 colored text.\n
        violetred2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use violetred2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: violetred2("text",bg='violetred2') then it's apply the violetred2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of violetred2\n
                    for example : violetred2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                violetred2("Hello World", Style = 0 ) = it's return violetred2 color text without any style       \n
                violetred2("Hello World", Style = 1 ) = it's return violetred2 color text with bold text          \n
                violetred2("Hello World", Style = 2 ) = it's return violetred2 color text with light text         \n
                violetred2("Hello World", Style = 3 ) = it's return violetred2 color text with Italicized style   \n
                violetred2("Hello World", Style = 4 ) = it's return violetred2 color text with UnderLine          \n
                violetred2("Hello World", Style = 5 ) = it's return Blinking violetred2 color text                \n
        """
        if rgb:
            return (238, 58, 140)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 58, 140,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 58, 140)
                


def violetred3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the violetred3 colored text.\n
        violetred3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use violetred3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: violetred3("text",bg='violetred3') then it's apply the violetred3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of violetred3\n
                    for example : violetred3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                violetred3("Hello World", Style = 0 ) = it's return violetred3 color text without any style       \n
                violetred3("Hello World", Style = 1 ) = it's return violetred3 color text with bold text          \n
                violetred3("Hello World", Style = 2 ) = it's return violetred3 color text with light text         \n
                violetred3("Hello World", Style = 3 ) = it's return violetred3 color text with Italicized style   \n
                violetred3("Hello World", Style = 4 ) = it's return violetred3 color text with UnderLine          \n
                violetred3("Hello World", Style = 5 ) = it's return Blinking violetred3 color text                \n
        """
        if rgb:
            return (205, 50, 120)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 50, 120,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 50, 120)
                


def violetred4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the violetred4 colored text.\n
        violetred4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use violetred4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: violetred4("text",bg='violetred4') then it's apply the violetred4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of violetred4\n
                    for example : violetred4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                violetred4("Hello World", Style = 0 ) = it's return violetred4 color text without any style       \n
                violetred4("Hello World", Style = 1 ) = it's return violetred4 color text with bold text          \n
                violetred4("Hello World", Style = 2 ) = it's return violetred4 color text with light text         \n
                violetred4("Hello World", Style = 3 ) = it's return violetred4 color text with Italicized style   \n
                violetred4("Hello World", Style = 4 ) = it's return violetred4 color text with UnderLine          \n
                violetred4("Hello World", Style = 5 ) = it's return Blinking violetred4 color text                \n
        """
        if rgb:
            return (139, 34, 82)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 34, 82,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 34, 82)
                


def firebrick( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the firebrick colored text.\n
        firebrick() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use firebrickbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: firebrick("text",bg='firebrick') then it's apply the firebrick color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of firebrick\n
                    for example : firebrick(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                firebrick("Hello World", Style = 0 ) = it's return firebrick color text without any style       \n
                firebrick("Hello World", Style = 1 ) = it's return firebrick color text with bold text          \n
                firebrick("Hello World", Style = 2 ) = it's return firebrick color text with light text         \n
                firebrick("Hello World", Style = 3 ) = it's return firebrick color text with Italicized style   \n
                firebrick("Hello World", Style = 4 ) = it's return firebrick color text with UnderLine          \n
                firebrick("Hello World", Style = 5 ) = it's return Blinking firebrick color text                \n
        """
        if rgb:
            return (178, 34, 34)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 178, 34, 34,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 178, 34, 34)
                


def firebrick1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the firebrick1 colored text.\n
        firebrick1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use firebrick1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: firebrick1("text",bg='firebrick1') then it's apply the firebrick1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of firebrick1\n
                    for example : firebrick1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                firebrick1("Hello World", Style = 0 ) = it's return firebrick1 color text without any style       \n
                firebrick1("Hello World", Style = 1 ) = it's return firebrick1 color text with bold text          \n
                firebrick1("Hello World", Style = 2 ) = it's return firebrick1 color text with light text         \n
                firebrick1("Hello World", Style = 3 ) = it's return firebrick1 color text with Italicized style   \n
                firebrick1("Hello World", Style = 4 ) = it's return firebrick1 color text with UnderLine          \n
                firebrick1("Hello World", Style = 5 ) = it's return Blinking firebrick1 color text                \n
        """
        if rgb:
            return (255, 48, 48)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 48, 48,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 48, 48)
                


def firebrick2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the firebrick2 colored text.\n
        firebrick2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use firebrick2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: firebrick2("text",bg='firebrick2') then it's apply the firebrick2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of firebrick2\n
                    for example : firebrick2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                firebrick2("Hello World", Style = 0 ) = it's return firebrick2 color text without any style       \n
                firebrick2("Hello World", Style = 1 ) = it's return firebrick2 color text with bold text          \n
                firebrick2("Hello World", Style = 2 ) = it's return firebrick2 color text with light text         \n
                firebrick2("Hello World", Style = 3 ) = it's return firebrick2 color text with Italicized style   \n
                firebrick2("Hello World", Style = 4 ) = it's return firebrick2 color text with UnderLine          \n
                firebrick2("Hello World", Style = 5 ) = it's return Blinking firebrick2 color text                \n
        """
        if rgb:
            return (238, 44, 44)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 44, 44,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 44, 44)
                


def firebrick3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the firebrick3 colored text.\n
        firebrick3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use firebrick3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: firebrick3("text",bg='firebrick3') then it's apply the firebrick3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of firebrick3\n
                    for example : firebrick3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                firebrick3("Hello World", Style = 0 ) = it's return firebrick3 color text without any style       \n
                firebrick3("Hello World", Style = 1 ) = it's return firebrick3 color text with bold text          \n
                firebrick3("Hello World", Style = 2 ) = it's return firebrick3 color text with light text         \n
                firebrick3("Hello World", Style = 3 ) = it's return firebrick3 color text with Italicized style   \n
                firebrick3("Hello World", Style = 4 ) = it's return firebrick3 color text with UnderLine          \n
                firebrick3("Hello World", Style = 5 ) = it's return Blinking firebrick3 color text                \n
        """
        if rgb:
            return (205, 38, 38)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 38, 38,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 38, 38)
                


def firebrick4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the firebrick4 colored text.\n
        firebrick4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use firebrick4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: firebrick4("text",bg='firebrick4') then it's apply the firebrick4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of firebrick4\n
                    for example : firebrick4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                firebrick4("Hello World", Style = 0 ) = it's return firebrick4 color text without any style       \n
                firebrick4("Hello World", Style = 1 ) = it's return firebrick4 color text with bold text          \n
                firebrick4("Hello World", Style = 2 ) = it's return firebrick4 color text with light text         \n
                firebrick4("Hello World", Style = 3 ) = it's return firebrick4 color text with Italicized style   \n
                firebrick4("Hello World", Style = 4 ) = it's return firebrick4 color text with UnderLine          \n
                firebrick4("Hello World", Style = 5 ) = it's return Blinking firebrick4 color text                \n
        """
        if rgb:
            return (139, 26, 26)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 26, 26,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 26, 26)
                


def pink( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the pink colored text.\n
        pink() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use pinkbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: pink("text",bg='pink') then it's apply the pink color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of pink\n
                    for example : pink(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                pink("Hello World", Style = 0 ) = it's return pink color text without any style       \n
                pink("Hello World", Style = 1 ) = it's return pink color text with bold text          \n
                pink("Hello World", Style = 2 ) = it's return pink color text with light text         \n
                pink("Hello World", Style = 3 ) = it's return pink color text with Italicized style   \n
                pink("Hello World", Style = 4 ) = it's return pink color text with UnderLine          \n
                pink("Hello World", Style = 5 ) = it's return Blinking pink color text                \n
        """
        if rgb:
            return (255, 192, 203)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 192, 203,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 192, 203)
                


def pink1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the pink1 colored text.\n
        pink1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use pink1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: pink1("text",bg='pink1') then it's apply the pink1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of pink1\n
                    for example : pink1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                pink1("Hello World", Style = 0 ) = it's return pink1 color text without any style       \n
                pink1("Hello World", Style = 1 ) = it's return pink1 color text with bold text          \n
                pink1("Hello World", Style = 2 ) = it's return pink1 color text with light text         \n
                pink1("Hello World", Style = 3 ) = it's return pink1 color text with Italicized style   \n
                pink1("Hello World", Style = 4 ) = it's return pink1 color text with UnderLine          \n
                pink1("Hello World", Style = 5 ) = it's return Blinking pink1 color text                \n
        """
        if rgb:
            return (255, 181, 197)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 181, 197,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 181, 197)
                


def pink2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the pink2 colored text.\n
        pink2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use pink2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: pink2("text",bg='pink2') then it's apply the pink2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of pink2\n
                    for example : pink2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                pink2("Hello World", Style = 0 ) = it's return pink2 color text without any style       \n
                pink2("Hello World", Style = 1 ) = it's return pink2 color text with bold text          \n
                pink2("Hello World", Style = 2 ) = it's return pink2 color text with light text         \n
                pink2("Hello World", Style = 3 ) = it's return pink2 color text with Italicized style   \n
                pink2("Hello World", Style = 4 ) = it's return pink2 color text with UnderLine          \n
                pink2("Hello World", Style = 5 ) = it's return Blinking pink2 color text                \n
        """
        if rgb:
            return (238, 169, 184)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 169, 184,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 169, 184)
                


def pink3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the pink3 colored text.\n
        pink3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use pink3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: pink3("text",bg='pink3') then it's apply the pink3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of pink3\n
                    for example : pink3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                pink3("Hello World", Style = 0 ) = it's return pink3 color text without any style       \n
                pink3("Hello World", Style = 1 ) = it's return pink3 color text with bold text          \n
                pink3("Hello World", Style = 2 ) = it's return pink3 color text with light text         \n
                pink3("Hello World", Style = 3 ) = it's return pink3 color text with Italicized style   \n
                pink3("Hello World", Style = 4 ) = it's return pink3 color text with UnderLine          \n
                pink3("Hello World", Style = 5 ) = it's return Blinking pink3 color text                \n
        """
        if rgb:
            return (205, 145, 158)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 145, 158,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 145, 158)
                


def pink4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the pink4 colored text.\n
        pink4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use pink4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: pink4("text",bg='pink4') then it's apply the pink4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of pink4\n
                    for example : pink4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                pink4("Hello World", Style = 0 ) = it's return pink4 color text without any style       \n
                pink4("Hello World", Style = 1 ) = it's return pink4 color text with bold text          \n
                pink4("Hello World", Style = 2 ) = it's return pink4 color text with light text         \n
                pink4("Hello World", Style = 3 ) = it's return pink4 color text with Italicized style   \n
                pink4("Hello World", Style = 4 ) = it's return pink4 color text with UnderLine          \n
                pink4("Hello World", Style = 5 ) = it's return Blinking pink4 color text                \n
        """
        if rgb:
            return (139, 99, 108)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 99, 108,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 99, 108)
                


def flesh( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the flesh colored text.\n
        flesh() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use fleshbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: flesh("text",bg='flesh') then it's apply the flesh color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of flesh\n
                    for example : flesh(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                flesh("Hello World", Style = 0 ) = it's return flesh color text without any style       \n
                flesh("Hello World", Style = 1 ) = it's return flesh color text with bold text          \n
                flesh("Hello World", Style = 2 ) = it's return flesh color text with light text         \n
                flesh("Hello World", Style = 3 ) = it's return flesh color text with Italicized style   \n
                flesh("Hello World", Style = 4 ) = it's return flesh color text with UnderLine          \n
                flesh("Hello World", Style = 5 ) = it's return Blinking flesh color text                \n
        """
        if rgb:
            return (245, 204, 176)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 245, 204, 176,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 245, 204, 176)
                


def feldspar( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the feldspar colored text.\n
        feldspar() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use feldsparbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: feldspar("text",bg='feldspar') then it's apply the feldspar color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of feldspar\n
                    for example : feldspar(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                feldspar("Hello World", Style = 0 ) = it's return feldspar color text without any style       \n
                feldspar("Hello World", Style = 1 ) = it's return feldspar color text with bold text          \n
                feldspar("Hello World", Style = 2 ) = it's return feldspar color text with light text         \n
                feldspar("Hello World", Style = 3 ) = it's return feldspar color text with Italicized style   \n
                feldspar("Hello World", Style = 4 ) = it's return feldspar color text with UnderLine          \n
                feldspar("Hello World", Style = 5 ) = it's return Blinking feldspar color text                \n
        """
        if rgb:
            return (209, 146, 117)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 209, 146, 117,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 209, 146, 117)
                


def red( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the red colored text.\n
        red() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use redbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: red("text",bg='red') then it's apply the red color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of red\n
                    for example : red(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                red("Hello World", Style = 0 ) = it's return red color text without any style       \n
                red("Hello World", Style = 1 ) = it's return red color text with bold text          \n
                red("Hello World", Style = 2 ) = it's return red color text with light text         \n
                red("Hello World", Style = 3 ) = it's return red color text with Italicized style   \n
                red("Hello World", Style = 4 ) = it's return red color text with UnderLine          \n
                red("Hello World", Style = 5 ) = it's return Blinking red color text                \n
        """
        if rgb:
            return (255, 0, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 0, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 0, 0)
                


def red1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the red1 colored text.\n
        red1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use red1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: red1("text",bg='red1') then it's apply the red1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of red1\n
                    for example : red1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                red1("Hello World", Style = 0 ) = it's return red1 color text without any style       \n
                red1("Hello World", Style = 1 ) = it's return red1 color text with bold text          \n
                red1("Hello World", Style = 2 ) = it's return red1 color text with light text         \n
                red1("Hello World", Style = 3 ) = it's return red1 color text with Italicized style   \n
                red1("Hello World", Style = 4 ) = it's return red1 color text with UnderLine          \n
                red1("Hello World", Style = 5 ) = it's return Blinking red1 color text                \n
        """
        if rgb:
            return (255, 0, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 0, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 0, 0)
                


def red2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the red2 colored text.\n
        red2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use red2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: red2("text",bg='red2') then it's apply the red2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of red2\n
                    for example : red2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                red2("Hello World", Style = 0 ) = it's return red2 color text without any style       \n
                red2("Hello World", Style = 1 ) = it's return red2 color text with bold text          \n
                red2("Hello World", Style = 2 ) = it's return red2 color text with light text         \n
                red2("Hello World", Style = 3 ) = it's return red2 color text with Italicized style   \n
                red2("Hello World", Style = 4 ) = it's return red2 color text with UnderLine          \n
                red2("Hello World", Style = 5 ) = it's return Blinking red2 color text                \n
        """
        if rgb:
            return (238, 0, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 0, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 0, 0)
                


def red3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the red3 colored text.\n
        red3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use red3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: red3("text",bg='red3') then it's apply the red3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of red3\n
                    for example : red3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                red3("Hello World", Style = 0 ) = it's return red3 color text without any style       \n
                red3("Hello World", Style = 1 ) = it's return red3 color text with bold text          \n
                red3("Hello World", Style = 2 ) = it's return red3 color text with light text         \n
                red3("Hello World", Style = 3 ) = it's return red3 color text with Italicized style   \n
                red3("Hello World", Style = 4 ) = it's return red3 color text with UnderLine          \n
                red3("Hello World", Style = 5 ) = it's return Blinking red3 color text                \n
        """
        if rgb:
            return (205, 0, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 0, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 0, 0)
                


def red4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the red4 colored text.\n
        red4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use red4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: red4("text",bg='red4') then it's apply the red4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of red4\n
                    for example : red4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                red4("Hello World", Style = 0 ) = it's return red4 color text without any style       \n
                red4("Hello World", Style = 1 ) = it's return red4 color text with bold text          \n
                red4("Hello World", Style = 2 ) = it's return red4 color text with light text         \n
                red4("Hello World", Style = 3 ) = it's return red4 color text with Italicized style   \n
                red4("Hello World", Style = 4 ) = it's return red4 color text with UnderLine          \n
                red4("Hello World", Style = 5 ) = it's return Blinking red4 color text                \n
        """
        if rgb:
            return (139, 0, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 0, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 0, 0)
                


def tomato( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the tomato colored text.\n
        tomato() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use tomatobg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: tomato("text",bg='tomato') then it's apply the tomato color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of tomato\n
                    for example : tomato(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                tomato("Hello World", Style = 0 ) = it's return tomato color text without any style       \n
                tomato("Hello World", Style = 1 ) = it's return tomato color text with bold text          \n
                tomato("Hello World", Style = 2 ) = it's return tomato color text with light text         \n
                tomato("Hello World", Style = 3 ) = it's return tomato color text with Italicized style   \n
                tomato("Hello World", Style = 4 ) = it's return tomato color text with UnderLine          \n
                tomato("Hello World", Style = 5 ) = it's return Blinking tomato color text                \n
        """
        if rgb:
            return (255, 99, 71)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 99, 71,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 99, 71)
                


def tomato1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the tomato1 colored text.\n
        tomato1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use tomato1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: tomato1("text",bg='tomato1') then it's apply the tomato1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of tomato1\n
                    for example : tomato1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                tomato1("Hello World", Style = 0 ) = it's return tomato1 color text without any style       \n
                tomato1("Hello World", Style = 1 ) = it's return tomato1 color text with bold text          \n
                tomato1("Hello World", Style = 2 ) = it's return tomato1 color text with light text         \n
                tomato1("Hello World", Style = 3 ) = it's return tomato1 color text with Italicized style   \n
                tomato1("Hello World", Style = 4 ) = it's return tomato1 color text with UnderLine          \n
                tomato1("Hello World", Style = 5 ) = it's return Blinking tomato1 color text                \n
        """
        if rgb:
            return (255, 99, 71)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 99, 71,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 99, 71)
                


def tomato2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the tomato2 colored text.\n
        tomato2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use tomato2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: tomato2("text",bg='tomato2') then it's apply the tomato2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of tomato2\n
                    for example : tomato2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                tomato2("Hello World", Style = 0 ) = it's return tomato2 color text without any style       \n
                tomato2("Hello World", Style = 1 ) = it's return tomato2 color text with bold text          \n
                tomato2("Hello World", Style = 2 ) = it's return tomato2 color text with light text         \n
                tomato2("Hello World", Style = 3 ) = it's return tomato2 color text with Italicized style   \n
                tomato2("Hello World", Style = 4 ) = it's return tomato2 color text with UnderLine          \n
                tomato2("Hello World", Style = 5 ) = it's return Blinking tomato2 color text                \n
        """
        if rgb:
            return (238, 92, 66)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 92, 66,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 92, 66)
                


def tomato3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the tomato3 colored text.\n
        tomato3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use tomato3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: tomato3("text",bg='tomato3') then it's apply the tomato3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of tomato3\n
                    for example : tomato3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                tomato3("Hello World", Style = 0 ) = it's return tomato3 color text without any style       \n
                tomato3("Hello World", Style = 1 ) = it's return tomato3 color text with bold text          \n
                tomato3("Hello World", Style = 2 ) = it's return tomato3 color text with light text         \n
                tomato3("Hello World", Style = 3 ) = it's return tomato3 color text with Italicized style   \n
                tomato3("Hello World", Style = 4 ) = it's return tomato3 color text with UnderLine          \n
                tomato3("Hello World", Style = 5 ) = it's return Blinking tomato3 color text                \n
        """
        if rgb:
            return (205, 79, 57)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 79, 57,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 79, 57)
                


def tomato4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the tomato4 colored text.\n
        tomato4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use tomato4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: tomato4("text",bg='tomato4') then it's apply the tomato4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of tomato4\n
                    for example : tomato4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                tomato4("Hello World", Style = 0 ) = it's return tomato4 color text without any style       \n
                tomato4("Hello World", Style = 1 ) = it's return tomato4 color text with bold text          \n
                tomato4("Hello World", Style = 2 ) = it's return tomato4 color text with light text         \n
                tomato4("Hello World", Style = 3 ) = it's return tomato4 color text with Italicized style   \n
                tomato4("Hello World", Style = 4 ) = it's return tomato4 color text with UnderLine          \n
                tomato4("Hello World", Style = 5 ) = it's return Blinking tomato4 color text                \n
        """
        if rgb:
            return (139, 54, 38)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 54, 38,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 54, 38)
                


def dusty_rose( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the dusty_rose colored text.\n
        dusty_rose() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use dusty_rosebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: dusty_rose("text",bg='dusty_rose') then it's apply the dusty_rose color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of dusty_rose\n
                    for example : dusty_rose(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                dusty_rose("Hello World", Style = 0 ) = it's return dusty_rose color text without any style       \n
                dusty_rose("Hello World", Style = 1 ) = it's return dusty_rose color text with bold text          \n
                dusty_rose("Hello World", Style = 2 ) = it's return dusty_rose color text with light text         \n
                dusty_rose("Hello World", Style = 3 ) = it's return dusty_rose color text with Italicized style   \n
                dusty_rose("Hello World", Style = 4 ) = it's return dusty_rose color text with UnderLine          \n
                dusty_rose("Hello World", Style = 5 ) = it's return Blinking dusty_rose color text                \n
        """
        if rgb:
            return (133, 99, 99)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 133, 99, 99,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 133, 99, 99)
                


def firebrick( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the firebrick colored text.\n
        firebrick() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use firebrickbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: firebrick("text",bg='firebrick') then it's apply the firebrick color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of firebrick\n
                    for example : firebrick(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                firebrick("Hello World", Style = 0 ) = it's return firebrick color text without any style       \n
                firebrick("Hello World", Style = 1 ) = it's return firebrick color text with bold text          \n
                firebrick("Hello World", Style = 2 ) = it's return firebrick color text with light text         \n
                firebrick("Hello World", Style = 3 ) = it's return firebrick color text with Italicized style   \n
                firebrick("Hello World", Style = 4 ) = it's return firebrick color text with UnderLine          \n
                firebrick("Hello World", Style = 5 ) = it's return Blinking firebrick color text                \n
        """
        if rgb:
            return (142, 35, 35)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 142, 35, 35,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 142, 35, 35)
                


def indian_red( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the indian_red colored text.\n
        indian_red() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use indian_redbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: indian_red("text",bg='indian_red') then it's apply the indian_red color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of indian_red\n
                    for example : indian_red(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                indian_red("Hello World", Style = 0 ) = it's return indian_red color text without any style       \n
                indian_red("Hello World", Style = 1 ) = it's return indian_red color text with bold text          \n
                indian_red("Hello World", Style = 2 ) = it's return indian_red color text with light text         \n
                indian_red("Hello World", Style = 3 ) = it's return indian_red color text with Italicized style   \n
                indian_red("Hello World", Style = 4 ) = it's return indian_red color text with UnderLine          \n
                indian_red("Hello World", Style = 5 ) = it's return Blinking indian_red color text                \n
        """
        if rgb:
            return (245, 204, 176)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 245, 204, 176,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 245, 204, 176)
                


def pink( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the pink colored text.\n
        pink() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use pinkbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: pink("text",bg='pink') then it's apply the pink color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of pink\n
                    for example : pink(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                pink("Hello World", Style = 0 ) = it's return pink color text without any style       \n
                pink("Hello World", Style = 1 ) = it's return pink color text with bold text          \n
                pink("Hello World", Style = 2 ) = it's return pink color text with light text         \n
                pink("Hello World", Style = 3 ) = it's return pink color text with Italicized style   \n
                pink("Hello World", Style = 4 ) = it's return pink color text with UnderLine          \n
                pink("Hello World", Style = 5 ) = it's return Blinking pink color text                \n
        """
        if rgb:
            return (188, 143, 143)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 188, 143, 143,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 188, 143, 143)
                


def salmon( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the salmon colored text.\n
        salmon() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use salmonbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: salmon("text",bg='salmon') then it's apply the salmon color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of salmon\n
                    for example : salmon(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                salmon("Hello World", Style = 0 ) = it's return salmon color text without any style       \n
                salmon("Hello World", Style = 1 ) = it's return salmon color text with bold text          \n
                salmon("Hello World", Style = 2 ) = it's return salmon color text with light text         \n
                salmon("Hello World", Style = 3 ) = it's return salmon color text with Italicized style   \n
                salmon("Hello World", Style = 4 ) = it's return salmon color text with UnderLine          \n
                salmon("Hello World", Style = 5 ) = it's return Blinking salmon color text                \n
        """
        if rgb:
            return (111, 66, 66)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 111, 66, 66,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 111, 66, 66)
                


def scarlet( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the scarlet colored text.\n
        scarlet() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use scarletbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: scarlet("text",bg='scarlet') then it's apply the scarlet color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of scarlet\n
                    for example : scarlet(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                scarlet("Hello World", Style = 0 ) = it's return scarlet color text without any style       \n
                scarlet("Hello World", Style = 1 ) = it's return scarlet color text with bold text          \n
                scarlet("Hello World", Style = 2 ) = it's return scarlet color text with light text         \n
                scarlet("Hello World", Style = 3 ) = it's return scarlet color text with Italicized style   \n
                scarlet("Hello World", Style = 4 ) = it's return scarlet color text with UnderLine          \n
                scarlet("Hello World", Style = 5 ) = it's return Blinking scarlet color text                \n
        """
        if rgb:
            return (140, 23, 23)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 140, 23, 23,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 140, 23, 23)
                


def spicy_pink( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the spicy_pink colored text.\n
        spicy_pink() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use spicy_pinkbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: spicy_pink("text",bg='spicy_pink') then it's apply the spicy_pink color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of spicy_pink\n
                    for example : spicy_pink(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                spicy_pink("Hello World", Style = 0 ) = it's return spicy_pink color text without any style       \n
                spicy_pink("Hello World", Style = 1 ) = it's return spicy_pink color text with bold text          \n
                spicy_pink("Hello World", Style = 2 ) = it's return spicy_pink color text with light text         \n
                spicy_pink("Hello World", Style = 3 ) = it's return spicy_pink color text with Italicized style   \n
                spicy_pink("Hello World", Style = 4 ) = it's return spicy_pink color text with UnderLine          \n
                spicy_pink("Hello World", Style = 5 ) = it's return Blinking spicy_pink color text                \n
        """
        if rgb:
            return (255, 28, 174)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 28, 174,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 28, 174)
                


def free_speech_magenta( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the free_speech_magenta colored text.\n
        free_speech_magenta() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use free_speech_magentabg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: free_speech_magenta("text",bg='free_speech_magenta') then it's apply the free_speech_magenta color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of free_speech_magenta\n
                    for example : free_speech_magenta(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                free_speech_magenta("Hello World", Style = 0 ) = it's return free_speech_magenta color text without any style       \n
                free_speech_magenta("Hello World", Style = 1 ) = it's return free_speech_magenta color text with bold text          \n
                free_speech_magenta("Hello World", Style = 2 ) = it's return free_speech_magenta color text with light text         \n
                free_speech_magenta("Hello World", Style = 3 ) = it's return free_speech_magenta color text with Italicized style   \n
                free_speech_magenta("Hello World", Style = 4 ) = it's return free_speech_magenta color text with UnderLine          \n
                free_speech_magenta("Hello World", Style = 5 ) = it's return Blinking free_speech_magenta color text                \n
        """
        if rgb:
            return (227, 91, 216)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 227, 91, 216,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 227, 91, 216)
                


def free_speech_red( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the free_speech_red colored text.\n
        free_speech_red() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use free_speech_redbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: free_speech_red("text",bg='free_speech_red') then it's apply the free_speech_red color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of free_speech_red\n
                    for example : free_speech_red(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                free_speech_red("Hello World", Style = 0 ) = it's return free_speech_red color text without any style       \n
                free_speech_red("Hello World", Style = 1 ) = it's return free_speech_red color text with bold text          \n
                free_speech_red("Hello World", Style = 2 ) = it's return free_speech_red color text with light text         \n
                free_speech_red("Hello World", Style = 3 ) = it's return free_speech_red color text with Italicized style   \n
                free_speech_red("Hello World", Style = 4 ) = it's return free_speech_red color text with UnderLine          \n
                free_speech_red("Hello World", Style = 5 ) = it's return Blinking free_speech_red color text                \n
        """
        if rgb:
            return (192, 0, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 192, 0, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 192, 0, 0)
                


def darkorchid( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darkorchid colored text.\n
        darkorchid() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darkorchidbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darkorchid("text",bg='darkorchid') then it's apply the darkorchid color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darkorchid\n
                    for example : darkorchid(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darkorchid("Hello World", Style = 0 ) = it's return darkorchid color text without any style       \n
                darkorchid("Hello World", Style = 1 ) = it's return darkorchid color text with bold text          \n
                darkorchid("Hello World", Style = 2 ) = it's return darkorchid color text with light text         \n
                darkorchid("Hello World", Style = 3 ) = it's return darkorchid color text with Italicized style   \n
                darkorchid("Hello World", Style = 4 ) = it's return darkorchid color text with UnderLine          \n
                darkorchid("Hello World", Style = 5 ) = it's return Blinking darkorchid color text                \n
        """
        if rgb:
            return (153, 50, 204)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 153, 50, 204,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 153, 50, 204)
                


def darkorchid1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darkorchid1 colored text.\n
        darkorchid1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darkorchid1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darkorchid1("text",bg='darkorchid1') then it's apply the darkorchid1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darkorchid1\n
                    for example : darkorchid1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darkorchid1("Hello World", Style = 0 ) = it's return darkorchid1 color text without any style       \n
                darkorchid1("Hello World", Style = 1 ) = it's return darkorchid1 color text with bold text          \n
                darkorchid1("Hello World", Style = 2 ) = it's return darkorchid1 color text with light text         \n
                darkorchid1("Hello World", Style = 3 ) = it's return darkorchid1 color text with Italicized style   \n
                darkorchid1("Hello World", Style = 4 ) = it's return darkorchid1 color text with UnderLine          \n
                darkorchid1("Hello World", Style = 5 ) = it's return Blinking darkorchid1 color text                \n
        """
        if rgb:
            return (191, 62, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 191, 62, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 191, 62, 255)
                


def darkorchid2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darkorchid2 colored text.\n
        darkorchid2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darkorchid2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darkorchid2("text",bg='darkorchid2') then it's apply the darkorchid2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darkorchid2\n
                    for example : darkorchid2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darkorchid2("Hello World", Style = 0 ) = it's return darkorchid2 color text without any style       \n
                darkorchid2("Hello World", Style = 1 ) = it's return darkorchid2 color text with bold text          \n
                darkorchid2("Hello World", Style = 2 ) = it's return darkorchid2 color text with light text         \n
                darkorchid2("Hello World", Style = 3 ) = it's return darkorchid2 color text with Italicized style   \n
                darkorchid2("Hello World", Style = 4 ) = it's return darkorchid2 color text with UnderLine          \n
                darkorchid2("Hello World", Style = 5 ) = it's return Blinking darkorchid2 color text                \n
        """
        if rgb:
            return (178, 58, 238)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 178, 58, 238,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 178, 58, 238)
                


def darkorchid3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darkorchid3 colored text.\n
        darkorchid3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darkorchid3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darkorchid3("text",bg='darkorchid3') then it's apply the darkorchid3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darkorchid3\n
                    for example : darkorchid3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darkorchid3("Hello World", Style = 0 ) = it's return darkorchid3 color text without any style       \n
                darkorchid3("Hello World", Style = 1 ) = it's return darkorchid3 color text with bold text          \n
                darkorchid3("Hello World", Style = 2 ) = it's return darkorchid3 color text with light text         \n
                darkorchid3("Hello World", Style = 3 ) = it's return darkorchid3 color text with Italicized style   \n
                darkorchid3("Hello World", Style = 4 ) = it's return darkorchid3 color text with UnderLine          \n
                darkorchid3("Hello World", Style = 5 ) = it's return Blinking darkorchid3 color text                \n
        """
        if rgb:
            return (154, 50, 205)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 154, 50, 205,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 154, 50, 205)
                


def darkorchid4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darkorchid4 colored text.\n
        darkorchid4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darkorchid4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darkorchid4("text",bg='darkorchid4') then it's apply the darkorchid4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darkorchid4\n
                    for example : darkorchid4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darkorchid4("Hello World", Style = 0 ) = it's return darkorchid4 color text without any style       \n
                darkorchid4("Hello World", Style = 1 ) = it's return darkorchid4 color text with bold text          \n
                darkorchid4("Hello World", Style = 2 ) = it's return darkorchid4 color text with light text         \n
                darkorchid4("Hello World", Style = 3 ) = it's return darkorchid4 color text with Italicized style   \n
                darkorchid4("Hello World", Style = 4 ) = it's return darkorchid4 color text with UnderLine          \n
                darkorchid4("Hello World", Style = 5 ) = it's return Blinking darkorchid4 color text                \n
        """
        if rgb:
            return (104, 34, 139)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 104, 34, 139,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 104, 34, 139)
                


def darkviolet( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darkviolet colored text.\n
        darkviolet() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darkvioletbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darkviolet("text",bg='darkviolet') then it's apply the darkviolet color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darkviolet\n
                    for example : darkviolet(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darkviolet("Hello World", Style = 0 ) = it's return darkviolet color text without any style       \n
                darkviolet("Hello World", Style = 1 ) = it's return darkviolet color text with bold text          \n
                darkviolet("Hello World", Style = 2 ) = it's return darkviolet color text with light text         \n
                darkviolet("Hello World", Style = 3 ) = it's return darkviolet color text with Italicized style   \n
                darkviolet("Hello World", Style = 4 ) = it's return darkviolet color text with UnderLine          \n
                darkviolet("Hello World", Style = 5 ) = it's return Blinking darkviolet color text                \n
        """
        if rgb:
            return (148, 0, 211)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 148, 0, 211,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 148, 0, 211)
                


def lavenderblush( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lavenderblush colored text.\n
        lavenderblush() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lavenderblushbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lavenderblush("text",bg='lavenderblush') then it's apply the lavenderblush color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lavenderblush\n
                    for example : lavenderblush(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lavenderblush("Hello World", Style = 0 ) = it's return lavenderblush color text without any style       \n
                lavenderblush("Hello World", Style = 1 ) = it's return lavenderblush color text with bold text          \n
                lavenderblush("Hello World", Style = 2 ) = it's return lavenderblush color text with light text         \n
                lavenderblush("Hello World", Style = 3 ) = it's return lavenderblush color text with Italicized style   \n
                lavenderblush("Hello World", Style = 4 ) = it's return lavenderblush color text with UnderLine          \n
                lavenderblush("Hello World", Style = 5 ) = it's return Blinking lavenderblush color text                \n
        """
        if rgb:
            return (255, 240, 245)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 240, 245,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 240, 245)
                


def lavenderblush1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lavenderblush1 colored text.\n
        lavenderblush1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lavenderblush1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lavenderblush1("text",bg='lavenderblush1') then it's apply the lavenderblush1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lavenderblush1\n
                    for example : lavenderblush1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lavenderblush1("Hello World", Style = 0 ) = it's return lavenderblush1 color text without any style       \n
                lavenderblush1("Hello World", Style = 1 ) = it's return lavenderblush1 color text with bold text          \n
                lavenderblush1("Hello World", Style = 2 ) = it's return lavenderblush1 color text with light text         \n
                lavenderblush1("Hello World", Style = 3 ) = it's return lavenderblush1 color text with Italicized style   \n
                lavenderblush1("Hello World", Style = 4 ) = it's return lavenderblush1 color text with UnderLine          \n
                lavenderblush1("Hello World", Style = 5 ) = it's return Blinking lavenderblush1 color text                \n
        """
        if rgb:
            return (255, 240, 245)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 240, 245,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 240, 245)
                


def lavenderblush2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lavenderblush2 colored text.\n
        lavenderblush2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lavenderblush2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lavenderblush2("text",bg='lavenderblush2') then it's apply the lavenderblush2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lavenderblush2\n
                    for example : lavenderblush2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lavenderblush2("Hello World", Style = 0 ) = it's return lavenderblush2 color text without any style       \n
                lavenderblush2("Hello World", Style = 1 ) = it's return lavenderblush2 color text with bold text          \n
                lavenderblush2("Hello World", Style = 2 ) = it's return lavenderblush2 color text with light text         \n
                lavenderblush2("Hello World", Style = 3 ) = it's return lavenderblush2 color text with Italicized style   \n
                lavenderblush2("Hello World", Style = 4 ) = it's return lavenderblush2 color text with UnderLine          \n
                lavenderblush2("Hello World", Style = 5 ) = it's return Blinking lavenderblush2 color text                \n
        """
        if rgb:
            return (238, 224, 229)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 224, 229,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 224, 229)
                


def lavenderblush3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lavenderblush3 colored text.\n
        lavenderblush3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lavenderblush3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lavenderblush3("text",bg='lavenderblush3') then it's apply the lavenderblush3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lavenderblush3\n
                    for example : lavenderblush3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lavenderblush3("Hello World", Style = 0 ) = it's return lavenderblush3 color text without any style       \n
                lavenderblush3("Hello World", Style = 1 ) = it's return lavenderblush3 color text with bold text          \n
                lavenderblush3("Hello World", Style = 2 ) = it's return lavenderblush3 color text with light text         \n
                lavenderblush3("Hello World", Style = 3 ) = it's return lavenderblush3 color text with Italicized style   \n
                lavenderblush3("Hello World", Style = 4 ) = it's return lavenderblush3 color text with UnderLine          \n
                lavenderblush3("Hello World", Style = 5 ) = it's return Blinking lavenderblush3 color text                \n
        """
        if rgb:
            return (205, 193, 197)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 193, 197,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 193, 197)
                


def lavenderblush4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lavenderblush4 colored text.\n
        lavenderblush4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lavenderblush4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lavenderblush4("text",bg='lavenderblush4') then it's apply the lavenderblush4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lavenderblush4\n
                    for example : lavenderblush4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lavenderblush4("Hello World", Style = 0 ) = it's return lavenderblush4 color text without any style       \n
                lavenderblush4("Hello World", Style = 1 ) = it's return lavenderblush4 color text with bold text          \n
                lavenderblush4("Hello World", Style = 2 ) = it's return lavenderblush4 color text with light text         \n
                lavenderblush4("Hello World", Style = 3 ) = it's return lavenderblush4 color text with Italicized style   \n
                lavenderblush4("Hello World", Style = 4 ) = it's return lavenderblush4 color text with UnderLine          \n
                lavenderblush4("Hello World", Style = 5 ) = it's return Blinking lavenderblush4 color text                \n
        """
        if rgb:
            return (139, 131, 134)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 131, 134,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 131, 134)
                


def mediumorchid( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the mediumorchid colored text.\n
        mediumorchid() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use mediumorchidbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: mediumorchid("text",bg='mediumorchid') then it's apply the mediumorchid color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of mediumorchid\n
                    for example : mediumorchid(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                mediumorchid("Hello World", Style = 0 ) = it's return mediumorchid color text without any style       \n
                mediumorchid("Hello World", Style = 1 ) = it's return mediumorchid color text with bold text          \n
                mediumorchid("Hello World", Style = 2 ) = it's return mediumorchid color text with light text         \n
                mediumorchid("Hello World", Style = 3 ) = it's return mediumorchid color text with Italicized style   \n
                mediumorchid("Hello World", Style = 4 ) = it's return mediumorchid color text with UnderLine          \n
                mediumorchid("Hello World", Style = 5 ) = it's return Blinking mediumorchid color text                \n
        """
        if rgb:
            return (186, 85, 211)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 186, 85, 211,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 186, 85, 211)
                


def mediumorchid1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the mediumorchid1 colored text.\n
        mediumorchid1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use mediumorchid1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: mediumorchid1("text",bg='mediumorchid1') then it's apply the mediumorchid1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of mediumorchid1\n
                    for example : mediumorchid1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                mediumorchid1("Hello World", Style = 0 ) = it's return mediumorchid1 color text without any style       \n
                mediumorchid1("Hello World", Style = 1 ) = it's return mediumorchid1 color text with bold text          \n
                mediumorchid1("Hello World", Style = 2 ) = it's return mediumorchid1 color text with light text         \n
                mediumorchid1("Hello World", Style = 3 ) = it's return mediumorchid1 color text with Italicized style   \n
                mediumorchid1("Hello World", Style = 4 ) = it's return mediumorchid1 color text with UnderLine          \n
                mediumorchid1("Hello World", Style = 5 ) = it's return Blinking mediumorchid1 color text                \n
        """
        if rgb:
            return (224, 102, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 224, 102, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 224, 102, 255)
                


def mediumorchid2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the mediumorchid2 colored text.\n
        mediumorchid2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use mediumorchid2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: mediumorchid2("text",bg='mediumorchid2') then it's apply the mediumorchid2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of mediumorchid2\n
                    for example : mediumorchid2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                mediumorchid2("Hello World", Style = 0 ) = it's return mediumorchid2 color text without any style       \n
                mediumorchid2("Hello World", Style = 1 ) = it's return mediumorchid2 color text with bold text          \n
                mediumorchid2("Hello World", Style = 2 ) = it's return mediumorchid2 color text with light text         \n
                mediumorchid2("Hello World", Style = 3 ) = it's return mediumorchid2 color text with Italicized style   \n
                mediumorchid2("Hello World", Style = 4 ) = it's return mediumorchid2 color text with UnderLine          \n
                mediumorchid2("Hello World", Style = 5 ) = it's return Blinking mediumorchid2 color text                \n
        """
        if rgb:
            return (209, 95, 238)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 209, 95, 238,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 209, 95, 238)
                


def mediumorchid3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the mediumorchid3 colored text.\n
        mediumorchid3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use mediumorchid3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: mediumorchid3("text",bg='mediumorchid3') then it's apply the mediumorchid3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of mediumorchid3\n
                    for example : mediumorchid3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                mediumorchid3("Hello World", Style = 0 ) = it's return mediumorchid3 color text without any style       \n
                mediumorchid3("Hello World", Style = 1 ) = it's return mediumorchid3 color text with bold text          \n
                mediumorchid3("Hello World", Style = 2 ) = it's return mediumorchid3 color text with light text         \n
                mediumorchid3("Hello World", Style = 3 ) = it's return mediumorchid3 color text with Italicized style   \n
                mediumorchid3("Hello World", Style = 4 ) = it's return mediumorchid3 color text with UnderLine          \n
                mediumorchid3("Hello World", Style = 5 ) = it's return Blinking mediumorchid3 color text                \n
        """
        if rgb:
            return (180, 82, 205)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 180, 82, 205,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 180, 82, 205)
                


def mediumorchid4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the mediumorchid4 colored text.\n
        mediumorchid4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use mediumorchid4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: mediumorchid4("text",bg='mediumorchid4') then it's apply the mediumorchid4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of mediumorchid4\n
                    for example : mediumorchid4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                mediumorchid4("Hello World", Style = 0 ) = it's return mediumorchid4 color text without any style       \n
                mediumorchid4("Hello World", Style = 1 ) = it's return mediumorchid4 color text with bold text          \n
                mediumorchid4("Hello World", Style = 2 ) = it's return mediumorchid4 color text with light text         \n
                mediumorchid4("Hello World", Style = 3 ) = it's return mediumorchid4 color text with Italicized style   \n
                mediumorchid4("Hello World", Style = 4 ) = it's return mediumorchid4 color text with UnderLine          \n
                mediumorchid4("Hello World", Style = 5 ) = it's return Blinking mediumorchid4 color text                \n
        """
        if rgb:
            return (122, 55, 139)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 122, 55, 139,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 122, 55, 139)
                


def mediumpurple( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the mediumpurple colored text.\n
        mediumpurple() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use mediumpurplebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: mediumpurple("text",bg='mediumpurple') then it's apply the mediumpurple color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of mediumpurple\n
                    for example : mediumpurple(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                mediumpurple("Hello World", Style = 0 ) = it's return mediumpurple color text without any style       \n
                mediumpurple("Hello World", Style = 1 ) = it's return mediumpurple color text with bold text          \n
                mediumpurple("Hello World", Style = 2 ) = it's return mediumpurple color text with light text         \n
                mediumpurple("Hello World", Style = 3 ) = it's return mediumpurple color text with Italicized style   \n
                mediumpurple("Hello World", Style = 4 ) = it's return mediumpurple color text with UnderLine          \n
                mediumpurple("Hello World", Style = 5 ) = it's return Blinking mediumpurple color text                \n
        """
        if rgb:
            return (147, 112, 219)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 147, 112, 219,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 147, 112, 219)
                


def medium_orchid( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the medium_orchid colored text.\n
        medium_orchid() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use medium_orchidbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: medium_orchid("text",bg='medium_orchid') then it's apply the medium_orchid color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of medium_orchid\n
                    for example : medium_orchid(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                medium_orchid("Hello World", Style = 0 ) = it's return medium_orchid color text without any style       \n
                medium_orchid("Hello World", Style = 1 ) = it's return medium_orchid color text with bold text          \n
                medium_orchid("Hello World", Style = 2 ) = it's return medium_orchid color text with light text         \n
                medium_orchid("Hello World", Style = 3 ) = it's return medium_orchid color text with Italicized style   \n
                medium_orchid("Hello World", Style = 4 ) = it's return medium_orchid color text with UnderLine          \n
                medium_orchid("Hello World", Style = 5 ) = it's return Blinking medium_orchid color text                \n
        """
        if rgb:
            return (147, 112, 219)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 147, 112, 219,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 147, 112, 219)
                


def mediumpurple1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the mediumpurple1 colored text.\n
        mediumpurple1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use mediumpurple1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: mediumpurple1("text",bg='mediumpurple1') then it's apply the mediumpurple1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of mediumpurple1\n
                    for example : mediumpurple1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                mediumpurple1("Hello World", Style = 0 ) = it's return mediumpurple1 color text without any style       \n
                mediumpurple1("Hello World", Style = 1 ) = it's return mediumpurple1 color text with bold text          \n
                mediumpurple1("Hello World", Style = 2 ) = it's return mediumpurple1 color text with light text         \n
                mediumpurple1("Hello World", Style = 3 ) = it's return mediumpurple1 color text with Italicized style   \n
                mediumpurple1("Hello World", Style = 4 ) = it's return mediumpurple1 color text with UnderLine          \n
                mediumpurple1("Hello World", Style = 5 ) = it's return Blinking mediumpurple1 color text                \n
        """
        if rgb:
            return (171, 130, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 171, 130, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 171, 130, 255)
                


def dark_orchid( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the dark_orchid colored text.\n
        dark_orchid() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use dark_orchidbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: dark_orchid("text",bg='dark_orchid') then it's apply the dark_orchid color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of dark_orchid\n
                    for example : dark_orchid(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                dark_orchid("Hello World", Style = 0 ) = it's return dark_orchid color text without any style       \n
                dark_orchid("Hello World", Style = 1 ) = it's return dark_orchid color text with bold text          \n
                dark_orchid("Hello World", Style = 2 ) = it's return dark_orchid color text with light text         \n
                dark_orchid("Hello World", Style = 3 ) = it's return dark_orchid color text with Italicized style   \n
                dark_orchid("Hello World", Style = 4 ) = it's return dark_orchid color text with UnderLine          \n
                dark_orchid("Hello World", Style = 5 ) = it's return Blinking dark_orchid color text                \n
        """
        if rgb:
            return (153, 50, 205)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 153, 50, 205,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 153, 50, 205)
                


def mediumpurple2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the mediumpurple2 colored text.\n
        mediumpurple2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use mediumpurple2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: mediumpurple2("text",bg='mediumpurple2') then it's apply the mediumpurple2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of mediumpurple2\n
                    for example : mediumpurple2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                mediumpurple2("Hello World", Style = 0 ) = it's return mediumpurple2 color text without any style       \n
                mediumpurple2("Hello World", Style = 1 ) = it's return mediumpurple2 color text with bold text          \n
                mediumpurple2("Hello World", Style = 2 ) = it's return mediumpurple2 color text with light text         \n
                mediumpurple2("Hello World", Style = 3 ) = it's return mediumpurple2 color text with Italicized style   \n
                mediumpurple2("Hello World", Style = 4 ) = it's return mediumpurple2 color text with UnderLine          \n
                mediumpurple2("Hello World", Style = 5 ) = it's return Blinking mediumpurple2 color text                \n
        """
        if rgb:
            return (159, 121, 238)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 159, 121, 238,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 159, 121, 238)
                


def mediumpurple3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the mediumpurple3 colored text.\n
        mediumpurple3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use mediumpurple3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: mediumpurple3("text",bg='mediumpurple3') then it's apply the mediumpurple3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of mediumpurple3\n
                    for example : mediumpurple3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                mediumpurple3("Hello World", Style = 0 ) = it's return mediumpurple3 color text without any style       \n
                mediumpurple3("Hello World", Style = 1 ) = it's return mediumpurple3 color text with bold text          \n
                mediumpurple3("Hello World", Style = 2 ) = it's return mediumpurple3 color text with light text         \n
                mediumpurple3("Hello World", Style = 3 ) = it's return mediumpurple3 color text with Italicized style   \n
                mediumpurple3("Hello World", Style = 4 ) = it's return mediumpurple3 color text with UnderLine          \n
                mediumpurple3("Hello World", Style = 5 ) = it's return Blinking mediumpurple3 color text                \n
        """
        if rgb:
            return (137, 104, 205)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 137, 104, 205,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 137, 104, 205)
                


def mediumpurple4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the mediumpurple4 colored text.\n
        mediumpurple4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use mediumpurple4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: mediumpurple4("text",bg='mediumpurple4') then it's apply the mediumpurple4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of mediumpurple4\n
                    for example : mediumpurple4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                mediumpurple4("Hello World", Style = 0 ) = it's return mediumpurple4 color text without any style       \n
                mediumpurple4("Hello World", Style = 1 ) = it's return mediumpurple4 color text with bold text          \n
                mediumpurple4("Hello World", Style = 2 ) = it's return mediumpurple4 color text with light text         \n
                mediumpurple4("Hello World", Style = 3 ) = it's return mediumpurple4 color text with Italicized style   \n
                mediumpurple4("Hello World", Style = 4 ) = it's return mediumpurple4 color text with UnderLine          \n
                mediumpurple4("Hello World", Style = 5 ) = it's return Blinking mediumpurple4 color text                \n
        """
        if rgb:
            return (93, 71, 139)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 93, 71, 139,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 93, 71, 139)
                


def lavender( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lavender colored text.\n
        lavender() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lavenderbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lavender("text",bg='lavender') then it's apply the lavender color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lavender\n
                    for example : lavender(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lavender("Hello World", Style = 0 ) = it's return lavender color text without any style       \n
                lavender("Hello World", Style = 1 ) = it's return lavender color text with bold text          \n
                lavender("Hello World", Style = 2 ) = it's return lavender color text with light text         \n
                lavender("Hello World", Style = 3 ) = it's return lavender color text with Italicized style   \n
                lavender("Hello World", Style = 4 ) = it's return lavender color text with UnderLine          \n
                lavender("Hello World", Style = 5 ) = it's return Blinking lavender color text                \n
        """
        if rgb:
            return (230, 230, 250)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 230, 230, 250,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 230, 230, 250)
                


def magenta( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the magenta colored text.\n
        magenta() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use magentabg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: magenta("text",bg='magenta') then it's apply the magenta color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of magenta\n
                    for example : magenta(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                magenta("Hello World", Style = 0 ) = it's return magenta color text without any style       \n
                magenta("Hello World", Style = 1 ) = it's return magenta color text with bold text          \n
                magenta("Hello World", Style = 2 ) = it's return magenta color text with light text         \n
                magenta("Hello World", Style = 3 ) = it's return magenta color text with Italicized style   \n
                magenta("Hello World", Style = 4 ) = it's return magenta color text with UnderLine          \n
                magenta("Hello World", Style = 5 ) = it's return Blinking magenta color text                \n
        """
        if rgb:
            return (255, 0, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 0, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 0, 255)
                


def fuchsia( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the fuchsia colored text.\n
        fuchsia() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use fuchsiabg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: fuchsia("text",bg='fuchsia') then it's apply the fuchsia color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of fuchsia\n
                    for example : fuchsia(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                fuchsia("Hello World", Style = 0 ) = it's return fuchsia color text without any style       \n
                fuchsia("Hello World", Style = 1 ) = it's return fuchsia color text with bold text          \n
                fuchsia("Hello World", Style = 2 ) = it's return fuchsia color text with light text         \n
                fuchsia("Hello World", Style = 3 ) = it's return fuchsia color text with Italicized style   \n
                fuchsia("Hello World", Style = 4 ) = it's return fuchsia color text with UnderLine          \n
                fuchsia("Hello World", Style = 5 ) = it's return Blinking fuchsia color text                \n
        """
        if rgb:
            return (255, 0, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 0, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 0, 255)
                


def magenta1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the magenta1 colored text.\n
        magenta1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use magenta1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: magenta1("text",bg='magenta1') then it's apply the magenta1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of magenta1\n
                    for example : magenta1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                magenta1("Hello World", Style = 0 ) = it's return magenta1 color text without any style       \n
                magenta1("Hello World", Style = 1 ) = it's return magenta1 color text with bold text          \n
                magenta1("Hello World", Style = 2 ) = it's return magenta1 color text with light text         \n
                magenta1("Hello World", Style = 3 ) = it's return magenta1 color text with Italicized style   \n
                magenta1("Hello World", Style = 4 ) = it's return magenta1 color text with UnderLine          \n
                magenta1("Hello World", Style = 5 ) = it's return Blinking magenta1 color text                \n
        """
        if rgb:
            return (255, 0, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 0, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 0, 255)
                


def magenta2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the magenta2 colored text.\n
        magenta2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use magenta2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: magenta2("text",bg='magenta2') then it's apply the magenta2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of magenta2\n
                    for example : magenta2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                magenta2("Hello World", Style = 0 ) = it's return magenta2 color text without any style       \n
                magenta2("Hello World", Style = 1 ) = it's return magenta2 color text with bold text          \n
                magenta2("Hello World", Style = 2 ) = it's return magenta2 color text with light text         \n
                magenta2("Hello World", Style = 3 ) = it's return magenta2 color text with Italicized style   \n
                magenta2("Hello World", Style = 4 ) = it's return magenta2 color text with UnderLine          \n
                magenta2("Hello World", Style = 5 ) = it's return Blinking magenta2 color text                \n
        """
        if rgb:
            return (238, 0, 238)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 0, 238,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 0, 238)
                


def magenta3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the magenta3 colored text.\n
        magenta3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use magenta3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: magenta3("text",bg='magenta3') then it's apply the magenta3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of magenta3\n
                    for example : magenta3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                magenta3("Hello World", Style = 0 ) = it's return magenta3 color text without any style       \n
                magenta3("Hello World", Style = 1 ) = it's return magenta3 color text with bold text          \n
                magenta3("Hello World", Style = 2 ) = it's return magenta3 color text with light text         \n
                magenta3("Hello World", Style = 3 ) = it's return magenta3 color text with Italicized style   \n
                magenta3("Hello World", Style = 4 ) = it's return magenta3 color text with UnderLine          \n
                magenta3("Hello World", Style = 5 ) = it's return Blinking magenta3 color text                \n
        """
        if rgb:
            return (205, 0, 205)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 0, 205,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 0, 205)
                


def magenta4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the magenta4 colored text.\n
        magenta4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use magenta4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: magenta4("text",bg='magenta4') then it's apply the magenta4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of magenta4\n
                    for example : magenta4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                magenta4("Hello World", Style = 0 ) = it's return magenta4 color text without any style       \n
                magenta4("Hello World", Style = 1 ) = it's return magenta4 color text with bold text          \n
                magenta4("Hello World", Style = 2 ) = it's return magenta4 color text with light text         \n
                magenta4("Hello World", Style = 3 ) = it's return magenta4 color text with Italicized style   \n
                magenta4("Hello World", Style = 4 ) = it's return magenta4 color text with UnderLine          \n
                magenta4("Hello World", Style = 5 ) = it's return Blinking magenta4 color text                \n
        """
        if rgb:
            return (139, 0, 139)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 0, 139,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 0, 139)
                


def maroon( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the maroon colored text.\n
        maroon() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use maroonbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: maroon("text",bg='maroon') then it's apply the maroon color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of maroon\n
                    for example : maroon(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                maroon("Hello World", Style = 0 ) = it's return maroon color text without any style       \n
                maroon("Hello World", Style = 1 ) = it's return maroon color text with bold text          \n
                maroon("Hello World", Style = 2 ) = it's return maroon color text with light text         \n
                maroon("Hello World", Style = 3 ) = it's return maroon color text with Italicized style   \n
                maroon("Hello World", Style = 4 ) = it's return maroon color text with UnderLine          \n
                maroon("Hello World", Style = 5 ) = it's return Blinking maroon color text                \n
        """
        if rgb:
            return (176, 48, 96)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 176, 48, 96,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 176, 48, 96)
                


def maroon1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the maroon1 colored text.\n
        maroon1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use maroon1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: maroon1("text",bg='maroon1') then it's apply the maroon1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of maroon1\n
                    for example : maroon1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                maroon1("Hello World", Style = 0 ) = it's return maroon1 color text without any style       \n
                maroon1("Hello World", Style = 1 ) = it's return maroon1 color text with bold text          \n
                maroon1("Hello World", Style = 2 ) = it's return maroon1 color text with light text         \n
                maroon1("Hello World", Style = 3 ) = it's return maroon1 color text with Italicized style   \n
                maroon1("Hello World", Style = 4 ) = it's return maroon1 color text with UnderLine          \n
                maroon1("Hello World", Style = 5 ) = it's return Blinking maroon1 color text                \n
        """
        if rgb:
            return (255, 52, 179)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 52, 179,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 52, 179)
                


def maroon2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the maroon2 colored text.\n
        maroon2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use maroon2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: maroon2("text",bg='maroon2') then it's apply the maroon2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of maroon2\n
                    for example : maroon2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                maroon2("Hello World", Style = 0 ) = it's return maroon2 color text without any style       \n
                maroon2("Hello World", Style = 1 ) = it's return maroon2 color text with bold text          \n
                maroon2("Hello World", Style = 2 ) = it's return maroon2 color text with light text         \n
                maroon2("Hello World", Style = 3 ) = it's return maroon2 color text with Italicized style   \n
                maroon2("Hello World", Style = 4 ) = it's return maroon2 color text with UnderLine          \n
                maroon2("Hello World", Style = 5 ) = it's return Blinking maroon2 color text                \n
        """
        if rgb:
            return (238, 48, 167)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 48, 167,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 48, 167)
                


def maroon3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the maroon3 colored text.\n
        maroon3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use maroon3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: maroon3("text",bg='maroon3') then it's apply the maroon3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of maroon3\n
                    for example : maroon3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                maroon3("Hello World", Style = 0 ) = it's return maroon3 color text without any style       \n
                maroon3("Hello World", Style = 1 ) = it's return maroon3 color text with bold text          \n
                maroon3("Hello World", Style = 2 ) = it's return maroon3 color text with light text         \n
                maroon3("Hello World", Style = 3 ) = it's return maroon3 color text with Italicized style   \n
                maroon3("Hello World", Style = 4 ) = it's return maroon3 color text with UnderLine          \n
                maroon3("Hello World", Style = 5 ) = it's return Blinking maroon3 color text                \n
        """
        if rgb:
            return (205, 41, 144)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 41, 144,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 41, 144)
                


def maroon4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the maroon4 colored text.\n
        maroon4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use maroon4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: maroon4("text",bg='maroon4') then it's apply the maroon4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of maroon4\n
                    for example : maroon4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                maroon4("Hello World", Style = 0 ) = it's return maroon4 color text without any style       \n
                maroon4("Hello World", Style = 1 ) = it's return maroon4 color text with bold text          \n
                maroon4("Hello World", Style = 2 ) = it's return maroon4 color text with light text         \n
                maroon4("Hello World", Style = 3 ) = it's return maroon4 color text with Italicized style   \n
                maroon4("Hello World", Style = 4 ) = it's return maroon4 color text with UnderLine          \n
                maroon4("Hello World", Style = 5 ) = it's return Blinking maroon4 color text                \n
        """
        if rgb:
            return (139, 28, 98)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 28, 98,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 28, 98)
                


def orchid( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the orchid colored text.\n
        orchid() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use orchidbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: orchid("text",bg='orchid') then it's apply the orchid color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of orchid\n
                    for example : orchid(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                orchid("Hello World", Style = 0 ) = it's return orchid color text without any style       \n
                orchid("Hello World", Style = 1 ) = it's return orchid color text with bold text          \n
                orchid("Hello World", Style = 2 ) = it's return orchid color text with light text         \n
                orchid("Hello World", Style = 3 ) = it's return orchid color text with Italicized style   \n
                orchid("Hello World", Style = 4 ) = it's return orchid color text with UnderLine          \n
                orchid("Hello World", Style = 5 ) = it's return Blinking orchid color text                \n
        """
        if rgb:
            return (218, 112, 214)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 218, 112, 214,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 218, 112, 214)
                


def orchid( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the orchid colored text.\n
        orchid() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use orchidbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: orchid("text",bg='orchid') then it's apply the orchid color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of orchid\n
                    for example : orchid(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                orchid("Hello World", Style = 0 ) = it's return orchid color text without any style       \n
                orchid("Hello World", Style = 1 ) = it's return orchid color text with bold text          \n
                orchid("Hello World", Style = 2 ) = it's return orchid color text with light text         \n
                orchid("Hello World", Style = 3 ) = it's return orchid color text with Italicized style   \n
                orchid("Hello World", Style = 4 ) = it's return orchid color text with UnderLine          \n
                orchid("Hello World", Style = 5 ) = it's return Blinking orchid color text                \n
        """
        if rgb:
            return (219, 112, 219)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 219, 112, 219,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 219, 112, 219)
                


def orchid1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the orchid1 colored text.\n
        orchid1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use orchid1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: orchid1("text",bg='orchid1') then it's apply the orchid1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of orchid1\n
                    for example : orchid1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                orchid1("Hello World", Style = 0 ) = it's return orchid1 color text without any style       \n
                orchid1("Hello World", Style = 1 ) = it's return orchid1 color text with bold text          \n
                orchid1("Hello World", Style = 2 ) = it's return orchid1 color text with light text         \n
                orchid1("Hello World", Style = 3 ) = it's return orchid1 color text with Italicized style   \n
                orchid1("Hello World", Style = 4 ) = it's return orchid1 color text with UnderLine          \n
                orchid1("Hello World", Style = 5 ) = it's return Blinking orchid1 color text                \n
        """
        if rgb:
            return (255, 131, 250)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 131, 250,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 131, 250)
                


def orchid2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the orchid2 colored text.\n
        orchid2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use orchid2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: orchid2("text",bg='orchid2') then it's apply the orchid2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of orchid2\n
                    for example : orchid2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                orchid2("Hello World", Style = 0 ) = it's return orchid2 color text without any style       \n
                orchid2("Hello World", Style = 1 ) = it's return orchid2 color text with bold text          \n
                orchid2("Hello World", Style = 2 ) = it's return orchid2 color text with light text         \n
                orchid2("Hello World", Style = 3 ) = it's return orchid2 color text with Italicized style   \n
                orchid2("Hello World", Style = 4 ) = it's return orchid2 color text with UnderLine          \n
                orchid2("Hello World", Style = 5 ) = it's return Blinking orchid2 color text                \n
        """
        if rgb:
            return (238, 122, 233)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 122, 233,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 122, 233)
                


def orchid3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the orchid3 colored text.\n
        orchid3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use orchid3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: orchid3("text",bg='orchid3') then it's apply the orchid3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of orchid3\n
                    for example : orchid3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                orchid3("Hello World", Style = 0 ) = it's return orchid3 color text without any style       \n
                orchid3("Hello World", Style = 1 ) = it's return orchid3 color text with bold text          \n
                orchid3("Hello World", Style = 2 ) = it's return orchid3 color text with light text         \n
                orchid3("Hello World", Style = 3 ) = it's return orchid3 color text with Italicized style   \n
                orchid3("Hello World", Style = 4 ) = it's return orchid3 color text with UnderLine          \n
                orchid3("Hello World", Style = 5 ) = it's return Blinking orchid3 color text                \n
        """
        if rgb:
            return (205, 105, 201)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 105, 201,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 105, 201)
                


def orchid4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the orchid4 colored text.\n
        orchid4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use orchid4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: orchid4("text",bg='orchid4') then it's apply the orchid4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of orchid4\n
                    for example : orchid4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                orchid4("Hello World", Style = 0 ) = it's return orchid4 color text without any style       \n
                orchid4("Hello World", Style = 1 ) = it's return orchid4 color text with bold text          \n
                orchid4("Hello World", Style = 2 ) = it's return orchid4 color text with light text         \n
                orchid4("Hello World", Style = 3 ) = it's return orchid4 color text with Italicized style   \n
                orchid4("Hello World", Style = 4 ) = it's return orchid4 color text with UnderLine          \n
                orchid4("Hello World", Style = 5 ) = it's return Blinking orchid4 color text                \n
        """
        if rgb:
            return (139, 71, 137)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 71, 137,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 71, 137)
                


def plum( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the plum colored text.\n
        plum() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use plumbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: plum("text",bg='plum') then it's apply the plum color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of plum\n
                    for example : plum(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                plum("Hello World", Style = 0 ) = it's return plum color text without any style       \n
                plum("Hello World", Style = 1 ) = it's return plum color text with bold text          \n
                plum("Hello World", Style = 2 ) = it's return plum color text with light text         \n
                plum("Hello World", Style = 3 ) = it's return plum color text with Italicized style   \n
                plum("Hello World", Style = 4 ) = it's return plum color text with UnderLine          \n
                plum("Hello World", Style = 5 ) = it's return Blinking plum color text                \n
        """
        if rgb:
            return (221, 160, 221)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 221, 160, 221,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 221, 160, 221)
                


def plum1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the plum1 colored text.\n
        plum1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use plum1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: plum1("text",bg='plum1') then it's apply the plum1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of plum1\n
                    for example : plum1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                plum1("Hello World", Style = 0 ) = it's return plum1 color text without any style       \n
                plum1("Hello World", Style = 1 ) = it's return plum1 color text with bold text          \n
                plum1("Hello World", Style = 2 ) = it's return plum1 color text with light text         \n
                plum1("Hello World", Style = 3 ) = it's return plum1 color text with Italicized style   \n
                plum1("Hello World", Style = 4 ) = it's return plum1 color text with UnderLine          \n
                plum1("Hello World", Style = 5 ) = it's return Blinking plum1 color text                \n
        """
        if rgb:
            return (255, 187, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 187, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 187, 255)
                


def plum2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the plum2 colored text.\n
        plum2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use plum2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: plum2("text",bg='plum2') then it's apply the plum2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of plum2\n
                    for example : plum2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                plum2("Hello World", Style = 0 ) = it's return plum2 color text without any style       \n
                plum2("Hello World", Style = 1 ) = it's return plum2 color text with bold text          \n
                plum2("Hello World", Style = 2 ) = it's return plum2 color text with light text         \n
                plum2("Hello World", Style = 3 ) = it's return plum2 color text with Italicized style   \n
                plum2("Hello World", Style = 4 ) = it's return plum2 color text with UnderLine          \n
                plum2("Hello World", Style = 5 ) = it's return Blinking plum2 color text                \n
        """
        if rgb:
            return (238, 174, 238)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 174, 238,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 174, 238)
                


def plum3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the plum3 colored text.\n
        plum3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use plum3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: plum3("text",bg='plum3') then it's apply the plum3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of plum3\n
                    for example : plum3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                plum3("Hello World", Style = 0 ) = it's return plum3 color text without any style       \n
                plum3("Hello World", Style = 1 ) = it's return plum3 color text with bold text          \n
                plum3("Hello World", Style = 2 ) = it's return plum3 color text with light text         \n
                plum3("Hello World", Style = 3 ) = it's return plum3 color text with Italicized style   \n
                plum3("Hello World", Style = 4 ) = it's return plum3 color text with UnderLine          \n
                plum3("Hello World", Style = 5 ) = it's return Blinking plum3 color text                \n
        """
        if rgb:
            return (205, 150, 205)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 150, 205,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 150, 205)
                


def plum4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the plum4 colored text.\n
        plum4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use plum4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: plum4("text",bg='plum4') then it's apply the plum4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of plum4\n
                    for example : plum4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                plum4("Hello World", Style = 0 ) = it's return plum4 color text without any style       \n
                plum4("Hello World", Style = 1 ) = it's return plum4 color text with bold text          \n
                plum4("Hello World", Style = 2 ) = it's return plum4 color text with light text         \n
                plum4("Hello World", Style = 3 ) = it's return plum4 color text with Italicized style   \n
                plum4("Hello World", Style = 4 ) = it's return plum4 color text with UnderLine          \n
                plum4("Hello World", Style = 5 ) = it's return Blinking plum4 color text                \n
        """
        if rgb:
            return (139, 102, 139)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 102, 139,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 102, 139)
                


def purple( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the purple colored text.\n
        purple() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use purplebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: purple("text",bg='purple') then it's apply the purple color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of purple\n
                    for example : purple(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                purple("Hello World", Style = 0 ) = it's return purple color text without any style       \n
                purple("Hello World", Style = 1 ) = it's return purple color text with bold text          \n
                purple("Hello World", Style = 2 ) = it's return purple color text with light text         \n
                purple("Hello World", Style = 3 ) = it's return purple color text with Italicized style   \n
                purple("Hello World", Style = 4 ) = it's return purple color text with UnderLine          \n
                purple("Hello World", Style = 5 ) = it's return Blinking purple color text                \n
        """
        if rgb:
            return (128, 0, 128)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 128, 0, 128,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 128, 0, 128)
                


def purple( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the purple colored text.\n
        purple() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use purplebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: purple("text",bg='purple') then it's apply the purple color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of purple\n
                    for example : purple(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                purple("Hello World", Style = 0 ) = it's return purple color text without any style       \n
                purple("Hello World", Style = 1 ) = it's return purple color text with bold text          \n
                purple("Hello World", Style = 2 ) = it's return purple color text with light text         \n
                purple("Hello World", Style = 3 ) = it's return purple color text with Italicized style   \n
                purple("Hello World", Style = 4 ) = it's return purple color text with UnderLine          \n
                purple("Hello World", Style = 5 ) = it's return Blinking purple color text                \n
        """
        if rgb:
            return (128, 0, 128)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 128, 0, 128,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 128, 0, 128)
                


def purple1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the purple1 colored text.\n
        purple1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use purple1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: purple1("text",bg='purple1') then it's apply the purple1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of purple1\n
                    for example : purple1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                purple1("Hello World", Style = 0 ) = it's return purple1 color text without any style       \n
                purple1("Hello World", Style = 1 ) = it's return purple1 color text with bold text          \n
                purple1("Hello World", Style = 2 ) = it's return purple1 color text with light text         \n
                purple1("Hello World", Style = 3 ) = it's return purple1 color text with Italicized style   \n
                purple1("Hello World", Style = 4 ) = it's return purple1 color text with UnderLine          \n
                purple1("Hello World", Style = 5 ) = it's return Blinking purple1 color text                \n
        """
        if rgb:
            return (155, 48, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 155, 48, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 155, 48, 255)
                


def purple2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the purple2 colored text.\n
        purple2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use purple2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: purple2("text",bg='purple2') then it's apply the purple2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of purple2\n
                    for example : purple2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                purple2("Hello World", Style = 0 ) = it's return purple2 color text without any style       \n
                purple2("Hello World", Style = 1 ) = it's return purple2 color text with bold text          \n
                purple2("Hello World", Style = 2 ) = it's return purple2 color text with light text         \n
                purple2("Hello World", Style = 3 ) = it's return purple2 color text with Italicized style   \n
                purple2("Hello World", Style = 4 ) = it's return purple2 color text with UnderLine          \n
                purple2("Hello World", Style = 5 ) = it's return Blinking purple2 color text                \n
        """
        if rgb:
            return (145, 44, 238)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 145, 44, 238,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 145, 44, 238)
                


def purple3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the purple3 colored text.\n
        purple3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use purple3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: purple3("text",bg='purple3') then it's apply the purple3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of purple3\n
                    for example : purple3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                purple3("Hello World", Style = 0 ) = it's return purple3 color text without any style       \n
                purple3("Hello World", Style = 1 ) = it's return purple3 color text with bold text          \n
                purple3("Hello World", Style = 2 ) = it's return purple3 color text with light text         \n
                purple3("Hello World", Style = 3 ) = it's return purple3 color text with Italicized style   \n
                purple3("Hello World", Style = 4 ) = it's return purple3 color text with UnderLine          \n
                purple3("Hello World", Style = 5 ) = it's return Blinking purple3 color text                \n
        """
        if rgb:
            return (125, 38, 205)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 125, 38, 205,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 125, 38, 205)
                


def purple4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the purple4 colored text.\n
        purple4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use purple4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: purple4("text",bg='purple4') then it's apply the purple4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of purple4\n
                    for example : purple4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                purple4("Hello World", Style = 0 ) = it's return purple4 color text without any style       \n
                purple4("Hello World", Style = 1 ) = it's return purple4 color text with bold text          \n
                purple4("Hello World", Style = 2 ) = it's return purple4 color text with light text         \n
                purple4("Hello World", Style = 3 ) = it's return purple4 color text with Italicized style   \n
                purple4("Hello World", Style = 4 ) = it's return purple4 color text with UnderLine          \n
                purple4("Hello World", Style = 5 ) = it's return Blinking purple4 color text                \n
        """
        if rgb:
            return (85, 26, 139)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 85, 26, 139,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 85, 26, 139)
                


def thistle( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the thistle colored text.\n
        thistle() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use thistlebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: thistle("text",bg='thistle') then it's apply the thistle color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of thistle\n
                    for example : thistle(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                thistle("Hello World", Style = 0 ) = it's return thistle color text without any style       \n
                thistle("Hello World", Style = 1 ) = it's return thistle color text with bold text          \n
                thistle("Hello World", Style = 2 ) = it's return thistle color text with light text         \n
                thistle("Hello World", Style = 3 ) = it's return thistle color text with Italicized style   \n
                thistle("Hello World", Style = 4 ) = it's return thistle color text with UnderLine          \n
                thistle("Hello World", Style = 5 ) = it's return Blinking thistle color text                \n
        """
        if rgb:
            return (216, 191, 216)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 216, 191, 216,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 216, 191, 216)
                


def thistle1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the thistle1 colored text.\n
        thistle1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use thistle1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: thistle1("text",bg='thistle1') then it's apply the thistle1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of thistle1\n
                    for example : thistle1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                thistle1("Hello World", Style = 0 ) = it's return thistle1 color text without any style       \n
                thistle1("Hello World", Style = 1 ) = it's return thistle1 color text with bold text          \n
                thistle1("Hello World", Style = 2 ) = it's return thistle1 color text with light text         \n
                thistle1("Hello World", Style = 3 ) = it's return thistle1 color text with Italicized style   \n
                thistle1("Hello World", Style = 4 ) = it's return thistle1 color text with UnderLine          \n
                thistle1("Hello World", Style = 5 ) = it's return Blinking thistle1 color text                \n
        """
        if rgb:
            return (255, 225, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 225, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 225, 255)
                


def thistle2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the thistle2 colored text.\n
        thistle2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use thistle2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: thistle2("text",bg='thistle2') then it's apply the thistle2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of thistle2\n
                    for example : thistle2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                thistle2("Hello World", Style = 0 ) = it's return thistle2 color text without any style       \n
                thistle2("Hello World", Style = 1 ) = it's return thistle2 color text with bold text          \n
                thistle2("Hello World", Style = 2 ) = it's return thistle2 color text with light text         \n
                thistle2("Hello World", Style = 3 ) = it's return thistle2 color text with Italicized style   \n
                thistle2("Hello World", Style = 4 ) = it's return thistle2 color text with UnderLine          \n
                thistle2("Hello World", Style = 5 ) = it's return Blinking thistle2 color text                \n
        """
        if rgb:
            return (238, 210, 238)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 210, 238,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 210, 238)
                


def thistle3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the thistle3 colored text.\n
        thistle3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use thistle3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: thistle3("text",bg='thistle3') then it's apply the thistle3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of thistle3\n
                    for example : thistle3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                thistle3("Hello World", Style = 0 ) = it's return thistle3 color text without any style       \n
                thistle3("Hello World", Style = 1 ) = it's return thistle3 color text with bold text          \n
                thistle3("Hello World", Style = 2 ) = it's return thistle3 color text with light text         \n
                thistle3("Hello World", Style = 3 ) = it's return thistle3 color text with Italicized style   \n
                thistle3("Hello World", Style = 4 ) = it's return thistle3 color text with UnderLine          \n
                thistle3("Hello World", Style = 5 ) = it's return Blinking thistle3 color text                \n
        """
        if rgb:
            return (205, 181, 205)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 181, 205,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 181, 205)
                


def thistle4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the thistle4 colored text.\n
        thistle4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use thistle4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: thistle4("text",bg='thistle4') then it's apply the thistle4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of thistle4\n
                    for example : thistle4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                thistle4("Hello World", Style = 0 ) = it's return thistle4 color text without any style       \n
                thistle4("Hello World", Style = 1 ) = it's return thistle4 color text with bold text          \n
                thistle4("Hello World", Style = 2 ) = it's return thistle4 color text with light text         \n
                thistle4("Hello World", Style = 3 ) = it's return thistle4 color text with Italicized style   \n
                thistle4("Hello World", Style = 4 ) = it's return thistle4 color text with UnderLine          \n
                thistle4("Hello World", Style = 5 ) = it's return Blinking thistle4 color text                \n
        """
        if rgb:
            return (139, 123, 139)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 123, 139,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 123, 139)
                


def violet( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the violet colored text.\n
        violet() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use violetbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: violet("text",bg='violet') then it's apply the violet color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of violet\n
                    for example : violet(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                violet("Hello World", Style = 0 ) = it's return violet color text without any style       \n
                violet("Hello World", Style = 1 ) = it's return violet color text with bold text          \n
                violet("Hello World", Style = 2 ) = it's return violet color text with light text         \n
                violet("Hello World", Style = 3 ) = it's return violet color text with Italicized style   \n
                violet("Hello World", Style = 4 ) = it's return violet color text with UnderLine          \n
                violet("Hello World", Style = 5 ) = it's return Blinking violet color text                \n
        """
        if rgb:
            return (238, 130, 238)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 130, 238,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 130, 238)
                


def violet_blue( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the violet_blue colored text.\n
        violet_blue() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use violet_bluebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: violet_blue("text",bg='violet_blue') then it's apply the violet_blue color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of violet_blue\n
                    for example : violet_blue(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                violet_blue("Hello World", Style = 0 ) = it's return violet_blue color text without any style       \n
                violet_blue("Hello World", Style = 1 ) = it's return violet_blue color text with bold text          \n
                violet_blue("Hello World", Style = 2 ) = it's return violet_blue color text with light text         \n
                violet_blue("Hello World", Style = 3 ) = it's return violet_blue color text with Italicized style   \n
                violet_blue("Hello World", Style = 4 ) = it's return violet_blue color text with UnderLine          \n
                violet_blue("Hello World", Style = 5 ) = it's return Blinking violet_blue color text                \n
        """
        if rgb:
            return (159, 95, 159)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 159, 95, 159,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 159, 95, 159)
                


def dark_purple( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the dark_purple colored text.\n
        dark_purple() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use dark_purplebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: dark_purple("text",bg='dark_purple') then it's apply the dark_purple color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of dark_purple\n
                    for example : dark_purple(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                dark_purple("Hello World", Style = 0 ) = it's return dark_purple color text without any style       \n
                dark_purple("Hello World", Style = 1 ) = it's return dark_purple color text with bold text          \n
                dark_purple("Hello World", Style = 2 ) = it's return dark_purple color text with light text         \n
                dark_purple("Hello World", Style = 3 ) = it's return dark_purple color text with Italicized style   \n
                dark_purple("Hello World", Style = 4 ) = it's return dark_purple color text with UnderLine          \n
                dark_purple("Hello World", Style = 5 ) = it's return Blinking dark_purple color text                \n
        """
        if rgb:
            return (135, 31, 120)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 135, 31, 120,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 135, 31, 120)
                


def maroon( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the maroon colored text.\n
        maroon() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use maroonbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: maroon("text",bg='maroon') then it's apply the maroon color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of maroon\n
                    for example : maroon(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                maroon("Hello World", Style = 0 ) = it's return maroon color text without any style       \n
                maroon("Hello World", Style = 1 ) = it's return maroon color text with bold text          \n
                maroon("Hello World", Style = 2 ) = it's return maroon color text with light text         \n
                maroon("Hello World", Style = 3 ) = it's return maroon color text with Italicized style   \n
                maroon("Hello World", Style = 4 ) = it's return maroon color text with UnderLine          \n
                maroon("Hello World", Style = 5 ) = it's return Blinking maroon color text                \n
        """
        if rgb:
            return (128, 0, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 128, 0, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 128, 0, 0)
                


def maroon( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the maroon colored text.\n
        maroon() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use maroonbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: maroon("text",bg='maroon') then it's apply the maroon color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of maroon\n
                    for example : maroon(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                maroon("Hello World", Style = 0 ) = it's return maroon color text without any style       \n
                maroon("Hello World", Style = 1 ) = it's return maroon color text with bold text          \n
                maroon("Hello World", Style = 2 ) = it's return maroon color text with light text         \n
                maroon("Hello World", Style = 3 ) = it's return maroon color text with Italicized style   \n
                maroon("Hello World", Style = 4 ) = it's return maroon color text with UnderLine          \n
                maroon("Hello World", Style = 5 ) = it's return Blinking maroon color text                \n
        """
        if rgb:
            return (128, 0, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 128, 0, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 128, 0, 0)
                


def medium_violet_red( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the medium_violet_red colored text.\n
        medium_violet_red() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use medium_violet_redbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: medium_violet_red("text",bg='medium_violet_red') then it's apply the medium_violet_red color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of medium_violet_red\n
                    for example : medium_violet_red(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                medium_violet_red("Hello World", Style = 0 ) = it's return medium_violet_red color text without any style       \n
                medium_violet_red("Hello World", Style = 1 ) = it's return medium_violet_red color text with bold text          \n
                medium_violet_red("Hello World", Style = 2 ) = it's return medium_violet_red color text with light text         \n
                medium_violet_red("Hello World", Style = 3 ) = it's return medium_violet_red color text with Italicized style   \n
                medium_violet_red("Hello World", Style = 4 ) = it's return medium_violet_red color text with UnderLine          \n
                medium_violet_red("Hello World", Style = 5 ) = it's return Blinking medium_violet_red color text                \n
        """
        if rgb:
            return (219, 112, 147)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 219, 112, 147,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 219, 112, 147)
                


def neon_pink( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the neon_pink colored text.\n
        neon_pink() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use neon_pinkbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: neon_pink("text",bg='neon_pink') then it's apply the neon_pink color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of neon_pink\n
                    for example : neon_pink(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                neon_pink("Hello World", Style = 0 ) = it's return neon_pink color text without any style       \n
                neon_pink("Hello World", Style = 1 ) = it's return neon_pink color text with bold text          \n
                neon_pink("Hello World", Style = 2 ) = it's return neon_pink color text with light text         \n
                neon_pink("Hello World", Style = 3 ) = it's return neon_pink color text with Italicized style   \n
                neon_pink("Hello World", Style = 4 ) = it's return neon_pink color text with UnderLine          \n
                neon_pink("Hello World", Style = 5 ) = it's return Blinking neon_pink color text                \n
        """
        if rgb:
            return (255, 110, 199)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 110, 199,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 110, 199)
                


def plum( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the plum colored text.\n
        plum() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use plumbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: plum("text",bg='plum') then it's apply the plum color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of plum\n
                    for example : plum(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                plum("Hello World", Style = 0 ) = it's return plum color text without any style       \n
                plum("Hello World", Style = 1 ) = it's return plum color text with bold text          \n
                plum("Hello World", Style = 2 ) = it's return plum color text with light text         \n
                plum("Hello World", Style = 3 ) = it's return plum color text with Italicized style   \n
                plum("Hello World", Style = 4 ) = it's return plum color text with UnderLine          \n
                plum("Hello World", Style = 5 ) = it's return Blinking plum color text                \n
        """
        if rgb:
            return (234, 173, 234)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 234, 173, 234,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 234, 173, 234)
                


def thistle( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the thistle colored text.\n
        thistle() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use thistlebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: thistle("text",bg='thistle') then it's apply the thistle color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of thistle\n
                    for example : thistle(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                thistle("Hello World", Style = 0 ) = it's return thistle color text without any style       \n
                thistle("Hello World", Style = 1 ) = it's return thistle color text with bold text          \n
                thistle("Hello World", Style = 2 ) = it's return thistle color text with light text         \n
                thistle("Hello World", Style = 3 ) = it's return thistle color text with Italicized style   \n
                thistle("Hello World", Style = 4 ) = it's return thistle color text with UnderLine          \n
                thistle("Hello World", Style = 5 ) = it's return Blinking thistle color text                \n
        """
        if rgb:
            return (216, 191, 216)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 216, 191, 216,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 216, 191, 216)
                


def turquoise( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the turquoise colored text.\n
        turquoise() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use turquoisebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: turquoise("text",bg='turquoise') then it's apply the turquoise color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of turquoise\n
                    for example : turquoise(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                turquoise("Hello World", Style = 0 ) = it's return turquoise color text without any style       \n
                turquoise("Hello World", Style = 1 ) = it's return turquoise color text with bold text          \n
                turquoise("Hello World", Style = 2 ) = it's return turquoise color text with light text         \n
                turquoise("Hello World", Style = 3 ) = it's return turquoise color text with Italicized style   \n
                turquoise("Hello World", Style = 4 ) = it's return turquoise color text with UnderLine          \n
                turquoise("Hello World", Style = 5 ) = it's return Blinking turquoise color text                \n
        """
        if rgb:
            return (173, 234, 234)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 173, 234, 234,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 173, 234, 234)
                


def violet( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the violet colored text.\n
        violet() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use violetbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: violet("text",bg='violet') then it's apply the violet color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of violet\n
                    for example : violet(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                violet("Hello World", Style = 0 ) = it's return violet color text without any style       \n
                violet("Hello World", Style = 1 ) = it's return violet color text with bold text          \n
                violet("Hello World", Style = 2 ) = it's return violet color text with light text         \n
                violet("Hello World", Style = 3 ) = it's return violet color text with Italicized style   \n
                violet("Hello World", Style = 4 ) = it's return violet color text with UnderLine          \n
                violet("Hello World", Style = 5 ) = it's return Blinking violet color text                \n
        """
        if rgb:
            return (79, 47, 79)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 79, 47, 79,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 79, 47, 79)
                


def violet_red( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the violet_red colored text.\n
        violet_red() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use violet_redbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: violet_red("text",bg='violet_red') then it's apply the violet_red color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of violet_red\n
                    for example : violet_red(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                violet_red("Hello World", Style = 0 ) = it's return violet_red color text without any style       \n
                violet_red("Hello World", Style = 1 ) = it's return violet_red color text with bold text          \n
                violet_red("Hello World", Style = 2 ) = it's return violet_red color text with light text         \n
                violet_red("Hello World", Style = 3 ) = it's return violet_red color text with Italicized style   \n
                violet_red("Hello World", Style = 4 ) = it's return violet_red color text with UnderLine          \n
                violet_red("Hello World", Style = 5 ) = it's return Blinking violet_red color text                \n
        """
        if rgb:
            return (204, 50, 153)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 204, 50, 153,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 204, 50, 153)
                


def antiquewhite( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the antiquewhite colored text.\n
        antiquewhite() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use antiquewhitebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: antiquewhite("text",bg='antiquewhite') then it's apply the antiquewhite color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of antiquewhite\n
                    for example : antiquewhite(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                antiquewhite("Hello World", Style = 0 ) = it's return antiquewhite color text without any style       \n
                antiquewhite("Hello World", Style = 1 ) = it's return antiquewhite color text with bold text          \n
                antiquewhite("Hello World", Style = 2 ) = it's return antiquewhite color text with light text         \n
                antiquewhite("Hello World", Style = 3 ) = it's return antiquewhite color text with Italicized style   \n
                antiquewhite("Hello World", Style = 4 ) = it's return antiquewhite color text with UnderLine          \n
                antiquewhite("Hello World", Style = 5 ) = it's return Blinking antiquewhite color text                \n
        """
        if rgb:
            return (250, 235, 215)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 250, 235, 215,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 250, 235, 215)
                


def antiquewhite1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the antiquewhite1 colored text.\n
        antiquewhite1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use antiquewhite1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: antiquewhite1("text",bg='antiquewhite1') then it's apply the antiquewhite1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of antiquewhite1\n
                    for example : antiquewhite1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                antiquewhite1("Hello World", Style = 0 ) = it's return antiquewhite1 color text without any style       \n
                antiquewhite1("Hello World", Style = 1 ) = it's return antiquewhite1 color text with bold text          \n
                antiquewhite1("Hello World", Style = 2 ) = it's return antiquewhite1 color text with light text         \n
                antiquewhite1("Hello World", Style = 3 ) = it's return antiquewhite1 color text with Italicized style   \n
                antiquewhite1("Hello World", Style = 4 ) = it's return antiquewhite1 color text with UnderLine          \n
                antiquewhite1("Hello World", Style = 5 ) = it's return Blinking antiquewhite1 color text                \n
        """
        if rgb:
            return (255, 239, 219)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 239, 219,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 239, 219)
                


def antiquewhite2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the antiquewhite2 colored text.\n
        antiquewhite2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use antiquewhite2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: antiquewhite2("text",bg='antiquewhite2') then it's apply the antiquewhite2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of antiquewhite2\n
                    for example : antiquewhite2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                antiquewhite2("Hello World", Style = 0 ) = it's return antiquewhite2 color text without any style       \n
                antiquewhite2("Hello World", Style = 1 ) = it's return antiquewhite2 color text with bold text          \n
                antiquewhite2("Hello World", Style = 2 ) = it's return antiquewhite2 color text with light text         \n
                antiquewhite2("Hello World", Style = 3 ) = it's return antiquewhite2 color text with Italicized style   \n
                antiquewhite2("Hello World", Style = 4 ) = it's return antiquewhite2 color text with UnderLine          \n
                antiquewhite2("Hello World", Style = 5 ) = it's return Blinking antiquewhite2 color text                \n
        """
        if rgb:
            return (238, 223, 204)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 223, 204,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 223, 204)
                


def antiquewhite3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the antiquewhite3 colored text.\n
        antiquewhite3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use antiquewhite3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: antiquewhite3("text",bg='antiquewhite3') then it's apply the antiquewhite3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of antiquewhite3\n
                    for example : antiquewhite3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                antiquewhite3("Hello World", Style = 0 ) = it's return antiquewhite3 color text without any style       \n
                antiquewhite3("Hello World", Style = 1 ) = it's return antiquewhite3 color text with bold text          \n
                antiquewhite3("Hello World", Style = 2 ) = it's return antiquewhite3 color text with light text         \n
                antiquewhite3("Hello World", Style = 3 ) = it's return antiquewhite3 color text with Italicized style   \n
                antiquewhite3("Hello World", Style = 4 ) = it's return antiquewhite3 color text with UnderLine          \n
                antiquewhite3("Hello World", Style = 5 ) = it's return Blinking antiquewhite3 color text                \n
        """
        if rgb:
            return (205, 192, 176)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 192, 176,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 192, 176)
                


def antiquewhite4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the antiquewhite4 colored text.\n
        antiquewhite4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use antiquewhite4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: antiquewhite4("text",bg='antiquewhite4') then it's apply the antiquewhite4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of antiquewhite4\n
                    for example : antiquewhite4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                antiquewhite4("Hello World", Style = 0 ) = it's return antiquewhite4 color text without any style       \n
                antiquewhite4("Hello World", Style = 1 ) = it's return antiquewhite4 color text with bold text          \n
                antiquewhite4("Hello World", Style = 2 ) = it's return antiquewhite4 color text with light text         \n
                antiquewhite4("Hello World", Style = 3 ) = it's return antiquewhite4 color text with Italicized style   \n
                antiquewhite4("Hello World", Style = 4 ) = it's return antiquewhite4 color text with UnderLine          \n
                antiquewhite4("Hello World", Style = 5 ) = it's return Blinking antiquewhite4 color text                \n
        """
        if rgb:
            return (139, 131, 120)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 131, 120,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 131, 120)
                


def floralwhite( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the floralwhite colored text.\n
        floralwhite() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use floralwhitebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: floralwhite("text",bg='floralwhite') then it's apply the floralwhite color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of floralwhite\n
                    for example : floralwhite(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                floralwhite("Hello World", Style = 0 ) = it's return floralwhite color text without any style       \n
                floralwhite("Hello World", Style = 1 ) = it's return floralwhite color text with bold text          \n
                floralwhite("Hello World", Style = 2 ) = it's return floralwhite color text with light text         \n
                floralwhite("Hello World", Style = 3 ) = it's return floralwhite color text with Italicized style   \n
                floralwhite("Hello World", Style = 4 ) = it's return floralwhite color text with UnderLine          \n
                floralwhite("Hello World", Style = 5 ) = it's return Blinking floralwhite color text                \n
        """
        if rgb:
            return (255, 250, 240)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 250, 240,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 250, 240)
                


def ghostwhite( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the ghostwhite colored text.\n
        ghostwhite() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use ghostwhitebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: ghostwhite("text",bg='ghostwhite') then it's apply the ghostwhite color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of ghostwhite\n
                    for example : ghostwhite(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                ghostwhite("Hello World", Style = 0 ) = it's return ghostwhite color text without any style       \n
                ghostwhite("Hello World", Style = 1 ) = it's return ghostwhite color text with bold text          \n
                ghostwhite("Hello World", Style = 2 ) = it's return ghostwhite color text with light text         \n
                ghostwhite("Hello World", Style = 3 ) = it's return ghostwhite color text with Italicized style   \n
                ghostwhite("Hello World", Style = 4 ) = it's return ghostwhite color text with UnderLine          \n
                ghostwhite("Hello World", Style = 5 ) = it's return Blinking ghostwhite color text                \n
        """
        if rgb:
            return (248, 248, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 248, 248, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 248, 248, 255)
                


def navajowhite( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the navajowhite colored text.\n
        navajowhite() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use navajowhitebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: navajowhite("text",bg='navajowhite') then it's apply the navajowhite color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of navajowhite\n
                    for example : navajowhite(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                navajowhite("Hello World", Style = 0 ) = it's return navajowhite color text without any style       \n
                navajowhite("Hello World", Style = 1 ) = it's return navajowhite color text with bold text          \n
                navajowhite("Hello World", Style = 2 ) = it's return navajowhite color text with light text         \n
                navajowhite("Hello World", Style = 3 ) = it's return navajowhite color text with Italicized style   \n
                navajowhite("Hello World", Style = 4 ) = it's return navajowhite color text with UnderLine          \n
                navajowhite("Hello World", Style = 5 ) = it's return Blinking navajowhite color text                \n
        """
        if rgb:
            return (255, 222, 173)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 222, 173,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 222, 173)
                


def navajowhite1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the navajowhite1 colored text.\n
        navajowhite1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use navajowhite1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: navajowhite1("text",bg='navajowhite1') then it's apply the navajowhite1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of navajowhite1\n
                    for example : navajowhite1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                navajowhite1("Hello World", Style = 0 ) = it's return navajowhite1 color text without any style       \n
                navajowhite1("Hello World", Style = 1 ) = it's return navajowhite1 color text with bold text          \n
                navajowhite1("Hello World", Style = 2 ) = it's return navajowhite1 color text with light text         \n
                navajowhite1("Hello World", Style = 3 ) = it's return navajowhite1 color text with Italicized style   \n
                navajowhite1("Hello World", Style = 4 ) = it's return navajowhite1 color text with UnderLine          \n
                navajowhite1("Hello World", Style = 5 ) = it's return Blinking navajowhite1 color text                \n
        """
        if rgb:
            return (255, 222, 173)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 222, 173,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 222, 173)
                


def navajowhite2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the navajowhite2 colored text.\n
        navajowhite2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use navajowhite2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: navajowhite2("text",bg='navajowhite2') then it's apply the navajowhite2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of navajowhite2\n
                    for example : navajowhite2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                navajowhite2("Hello World", Style = 0 ) = it's return navajowhite2 color text without any style       \n
                navajowhite2("Hello World", Style = 1 ) = it's return navajowhite2 color text with bold text          \n
                navajowhite2("Hello World", Style = 2 ) = it's return navajowhite2 color text with light text         \n
                navajowhite2("Hello World", Style = 3 ) = it's return navajowhite2 color text with Italicized style   \n
                navajowhite2("Hello World", Style = 4 ) = it's return navajowhite2 color text with UnderLine          \n
                navajowhite2("Hello World", Style = 5 ) = it's return Blinking navajowhite2 color text                \n
        """
        if rgb:
            return (238, 207, 161)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 207, 161,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 207, 161)
                


def navajowhite3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the navajowhite3 colored text.\n
        navajowhite3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use navajowhite3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: navajowhite3("text",bg='navajowhite3') then it's apply the navajowhite3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of navajowhite3\n
                    for example : navajowhite3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                navajowhite3("Hello World", Style = 0 ) = it's return navajowhite3 color text without any style       \n
                navajowhite3("Hello World", Style = 1 ) = it's return navajowhite3 color text with bold text          \n
                navajowhite3("Hello World", Style = 2 ) = it's return navajowhite3 color text with light text         \n
                navajowhite3("Hello World", Style = 3 ) = it's return navajowhite3 color text with Italicized style   \n
                navajowhite3("Hello World", Style = 4 ) = it's return navajowhite3 color text with UnderLine          \n
                navajowhite3("Hello World", Style = 5 ) = it's return Blinking navajowhite3 color text                \n
        """
        if rgb:
            return (205, 179, 139)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 179, 139,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 179, 139)
                


def navajowhite4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the navajowhite4 colored text.\n
        navajowhite4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use navajowhite4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: navajowhite4("text",bg='navajowhite4') then it's apply the navajowhite4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of navajowhite4\n
                    for example : navajowhite4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                navajowhite4("Hello World", Style = 0 ) = it's return navajowhite4 color text without any style       \n
                navajowhite4("Hello World", Style = 1 ) = it's return navajowhite4 color text with bold text          \n
                navajowhite4("Hello World", Style = 2 ) = it's return navajowhite4 color text with light text         \n
                navajowhite4("Hello World", Style = 3 ) = it's return navajowhite4 color text with Italicized style   \n
                navajowhite4("Hello World", Style = 4 ) = it's return navajowhite4 color text with UnderLine          \n
                navajowhite4("Hello World", Style = 5 ) = it's return Blinking navajowhite4 color text                \n
        """
        if rgb:
            return (139, 121, 94)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 121, 94,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 121, 94)
                


def oldlace( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the oldlace colored text.\n
        oldlace() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use oldlacebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: oldlace("text",bg='oldlace') then it's apply the oldlace color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of oldlace\n
                    for example : oldlace(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                oldlace("Hello World", Style = 0 ) = it's return oldlace color text without any style       \n
                oldlace("Hello World", Style = 1 ) = it's return oldlace color text with bold text          \n
                oldlace("Hello World", Style = 2 ) = it's return oldlace color text with light text         \n
                oldlace("Hello World", Style = 3 ) = it's return oldlace color text with Italicized style   \n
                oldlace("Hello World", Style = 4 ) = it's return oldlace color text with UnderLine          \n
                oldlace("Hello World", Style = 5 ) = it's return Blinking oldlace color text                \n
        """
        if rgb:
            return (253, 245, 230)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 253, 245, 230,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 253, 245, 230)
                


def whitesmoke( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the whitesmoke colored text.\n
        whitesmoke() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use whitesmokebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: whitesmoke("text",bg='whitesmoke') then it's apply the whitesmoke color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of whitesmoke\n
                    for example : whitesmoke(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                whitesmoke("Hello World", Style = 0 ) = it's return whitesmoke color text without any style       \n
                whitesmoke("Hello World", Style = 1 ) = it's return whitesmoke color text with bold text          \n
                whitesmoke("Hello World", Style = 2 ) = it's return whitesmoke color text with light text         \n
                whitesmoke("Hello World", Style = 3 ) = it's return whitesmoke color text with Italicized style   \n
                whitesmoke("Hello World", Style = 4 ) = it's return whitesmoke color text with UnderLine          \n
                whitesmoke("Hello World", Style = 5 ) = it's return Blinking whitesmoke color text                \n
        """
        if rgb:
            return (245, 245, 245)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 245, 245, 245,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 245, 245, 245)
                


def gainsboro( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the gainsboro colored text.\n
        gainsboro() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use gainsborobg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: gainsboro("text",bg='gainsboro') then it's apply the gainsboro color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of gainsboro\n
                    for example : gainsboro(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                gainsboro("Hello World", Style = 0 ) = it's return gainsboro color text without any style       \n
                gainsboro("Hello World", Style = 1 ) = it's return gainsboro color text with bold text          \n
                gainsboro("Hello World", Style = 2 ) = it's return gainsboro color text with light text         \n
                gainsboro("Hello World", Style = 3 ) = it's return gainsboro color text with Italicized style   \n
                gainsboro("Hello World", Style = 4 ) = it's return gainsboro color text with UnderLine          \n
                gainsboro("Hello World", Style = 5 ) = it's return Blinking gainsboro color text                \n
        """
        if rgb:
            return (220, 220, 220)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 220, 220, 220,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 220, 220, 220)
                


def ivory( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the ivory colored text.\n
        ivory() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use ivorybg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: ivory("text",bg='ivory') then it's apply the ivory color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of ivory\n
                    for example : ivory(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                ivory("Hello World", Style = 0 ) = it's return ivory color text without any style       \n
                ivory("Hello World", Style = 1 ) = it's return ivory color text with bold text          \n
                ivory("Hello World", Style = 2 ) = it's return ivory color text with light text         \n
                ivory("Hello World", Style = 3 ) = it's return ivory color text with Italicized style   \n
                ivory("Hello World", Style = 4 ) = it's return ivory color text with UnderLine          \n
                ivory("Hello World", Style = 5 ) = it's return Blinking ivory color text                \n
        """
        if rgb:
            return (255, 255, 240)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 255, 240,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 255, 240)
                


def ivory1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the ivory1 colored text.\n
        ivory1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use ivory1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: ivory1("text",bg='ivory1') then it's apply the ivory1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of ivory1\n
                    for example : ivory1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                ivory1("Hello World", Style = 0 ) = it's return ivory1 color text without any style       \n
                ivory1("Hello World", Style = 1 ) = it's return ivory1 color text with bold text          \n
                ivory1("Hello World", Style = 2 ) = it's return ivory1 color text with light text         \n
                ivory1("Hello World", Style = 3 ) = it's return ivory1 color text with Italicized style   \n
                ivory1("Hello World", Style = 4 ) = it's return ivory1 color text with UnderLine          \n
                ivory1("Hello World", Style = 5 ) = it's return Blinking ivory1 color text                \n
        """
        if rgb:
            return (255, 255, 240)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 255, 240,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 255, 240)
                


def ivory2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the ivory2 colored text.\n
        ivory2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use ivory2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: ivory2("text",bg='ivory2') then it's apply the ivory2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of ivory2\n
                    for example : ivory2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                ivory2("Hello World", Style = 0 ) = it's return ivory2 color text without any style       \n
                ivory2("Hello World", Style = 1 ) = it's return ivory2 color text with bold text          \n
                ivory2("Hello World", Style = 2 ) = it's return ivory2 color text with light text         \n
                ivory2("Hello World", Style = 3 ) = it's return ivory2 color text with Italicized style   \n
                ivory2("Hello World", Style = 4 ) = it's return ivory2 color text with UnderLine          \n
                ivory2("Hello World", Style = 5 ) = it's return Blinking ivory2 color text                \n
        """
        if rgb:
            return (238, 238, 224)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 238, 224,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 238, 224)
                


def ivory3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the ivory3 colored text.\n
        ivory3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use ivory3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: ivory3("text",bg='ivory3') then it's apply the ivory3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of ivory3\n
                    for example : ivory3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                ivory3("Hello World", Style = 0 ) = it's return ivory3 color text without any style       \n
                ivory3("Hello World", Style = 1 ) = it's return ivory3 color text with bold text          \n
                ivory3("Hello World", Style = 2 ) = it's return ivory3 color text with light text         \n
                ivory3("Hello World", Style = 3 ) = it's return ivory3 color text with Italicized style   \n
                ivory3("Hello World", Style = 4 ) = it's return ivory3 color text with UnderLine          \n
                ivory3("Hello World", Style = 5 ) = it's return Blinking ivory3 color text                \n
        """
        if rgb:
            return (205, 205, 193)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 205, 193,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 205, 193)
                


def ivory4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the ivory4 colored text.\n
        ivory4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use ivory4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: ivory4("text",bg='ivory4') then it's apply the ivory4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of ivory4\n
                    for example : ivory4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                ivory4("Hello World", Style = 0 ) = it's return ivory4 color text without any style       \n
                ivory4("Hello World", Style = 1 ) = it's return ivory4 color text with bold text          \n
                ivory4("Hello World", Style = 2 ) = it's return ivory4 color text with light text         \n
                ivory4("Hello World", Style = 3 ) = it's return ivory4 color text with Italicized style   \n
                ivory4("Hello World", Style = 4 ) = it's return ivory4 color text with UnderLine          \n
                ivory4("Hello World", Style = 5 ) = it's return Blinking ivory4 color text                \n
        """
        if rgb:
            return (139, 139, 131)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 139, 131,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 139, 131)
                


def linen( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the linen colored text.\n
        linen() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use linenbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: linen("text",bg='linen') then it's apply the linen color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of linen\n
                    for example : linen(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                linen("Hello World", Style = 0 ) = it's return linen color text without any style       \n
                linen("Hello World", Style = 1 ) = it's return linen color text with bold text          \n
                linen("Hello World", Style = 2 ) = it's return linen color text with light text         \n
                linen("Hello World", Style = 3 ) = it's return linen color text with Italicized style   \n
                linen("Hello World", Style = 4 ) = it's return linen color text with UnderLine          \n
                linen("Hello World", Style = 5 ) = it's return Blinking linen color text                \n
        """
        if rgb:
            return (250, 240, 230)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 250, 240, 230,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 250, 240, 230)
                


def seashell( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the seashell colored text.\n
        seashell() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use seashellbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: seashell("text",bg='seashell') then it's apply the seashell color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of seashell\n
                    for example : seashell(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                seashell("Hello World", Style = 0 ) = it's return seashell color text without any style       \n
                seashell("Hello World", Style = 1 ) = it's return seashell color text with bold text          \n
                seashell("Hello World", Style = 2 ) = it's return seashell color text with light text         \n
                seashell("Hello World", Style = 3 ) = it's return seashell color text with Italicized style   \n
                seashell("Hello World", Style = 4 ) = it's return seashell color text with UnderLine          \n
                seashell("Hello World", Style = 5 ) = it's return Blinking seashell color text                \n
        """
        if rgb:
            return (255, 245, 238)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 245, 238,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 245, 238)
                


def seashell1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the seashell1 colored text.\n
        seashell1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use seashell1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: seashell1("text",bg='seashell1') then it's apply the seashell1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of seashell1\n
                    for example : seashell1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                seashell1("Hello World", Style = 0 ) = it's return seashell1 color text without any style       \n
                seashell1("Hello World", Style = 1 ) = it's return seashell1 color text with bold text          \n
                seashell1("Hello World", Style = 2 ) = it's return seashell1 color text with light text         \n
                seashell1("Hello World", Style = 3 ) = it's return seashell1 color text with Italicized style   \n
                seashell1("Hello World", Style = 4 ) = it's return seashell1 color text with UnderLine          \n
                seashell1("Hello World", Style = 5 ) = it's return Blinking seashell1 color text                \n
        """
        if rgb:
            return (255, 245, 238)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 245, 238,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 245, 238)
                


def seashell2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the seashell2 colored text.\n
        seashell2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use seashell2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: seashell2("text",bg='seashell2') then it's apply the seashell2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of seashell2\n
                    for example : seashell2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                seashell2("Hello World", Style = 0 ) = it's return seashell2 color text without any style       \n
                seashell2("Hello World", Style = 1 ) = it's return seashell2 color text with bold text          \n
                seashell2("Hello World", Style = 2 ) = it's return seashell2 color text with light text         \n
                seashell2("Hello World", Style = 3 ) = it's return seashell2 color text with Italicized style   \n
                seashell2("Hello World", Style = 4 ) = it's return seashell2 color text with UnderLine          \n
                seashell2("Hello World", Style = 5 ) = it's return Blinking seashell2 color text                \n
        """
        if rgb:
            return (238, 229, 222)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 229, 222,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 229, 222)
                


def seashell3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the seashell3 colored text.\n
        seashell3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use seashell3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: seashell3("text",bg='seashell3') then it's apply the seashell3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of seashell3\n
                    for example : seashell3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                seashell3("Hello World", Style = 0 ) = it's return seashell3 color text without any style       \n
                seashell3("Hello World", Style = 1 ) = it's return seashell3 color text with bold text          \n
                seashell3("Hello World", Style = 2 ) = it's return seashell3 color text with light text         \n
                seashell3("Hello World", Style = 3 ) = it's return seashell3 color text with Italicized style   \n
                seashell3("Hello World", Style = 4 ) = it's return seashell3 color text with UnderLine          \n
                seashell3("Hello World", Style = 5 ) = it's return Blinking seashell3 color text                \n
        """
        if rgb:
            return (205, 197, 191)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 197, 191,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 197, 191)
                


def seashell4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the seashell4 colored text.\n
        seashell4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use seashell4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: seashell4("text",bg='seashell4') then it's apply the seashell4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of seashell4\n
                    for example : seashell4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                seashell4("Hello World", Style = 0 ) = it's return seashell4 color text without any style       \n
                seashell4("Hello World", Style = 1 ) = it's return seashell4 color text with bold text          \n
                seashell4("Hello World", Style = 2 ) = it's return seashell4 color text with light text         \n
                seashell4("Hello World", Style = 3 ) = it's return seashell4 color text with Italicized style   \n
                seashell4("Hello World", Style = 4 ) = it's return seashell4 color text with UnderLine          \n
                seashell4("Hello World", Style = 5 ) = it's return Blinking seashell4 color text                \n
        """
        if rgb:
            return (139, 134, 130)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 134, 130,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 134, 130)
                


def snow( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the snow colored text.\n
        snow() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use snowbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: snow("text",bg='snow') then it's apply the snow color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of snow\n
                    for example : snow(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                snow("Hello World", Style = 0 ) = it's return snow color text without any style       \n
                snow("Hello World", Style = 1 ) = it's return snow color text with bold text          \n
                snow("Hello World", Style = 2 ) = it's return snow color text with light text         \n
                snow("Hello World", Style = 3 ) = it's return snow color text with Italicized style   \n
                snow("Hello World", Style = 4 ) = it's return snow color text with UnderLine          \n
                snow("Hello World", Style = 5 ) = it's return Blinking snow color text                \n
        """
        if rgb:
            return (255, 250, 250)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 250, 250,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 250, 250)
                


def snow1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the snow1 colored text.\n
        snow1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use snow1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: snow1("text",bg='snow1') then it's apply the snow1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of snow1\n
                    for example : snow1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                snow1("Hello World", Style = 0 ) = it's return snow1 color text without any style       \n
                snow1("Hello World", Style = 1 ) = it's return snow1 color text with bold text          \n
                snow1("Hello World", Style = 2 ) = it's return snow1 color text with light text         \n
                snow1("Hello World", Style = 3 ) = it's return snow1 color text with Italicized style   \n
                snow1("Hello World", Style = 4 ) = it's return snow1 color text with UnderLine          \n
                snow1("Hello World", Style = 5 ) = it's return Blinking snow1 color text                \n
        """
        if rgb:
            return (255, 250, 250)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 250, 250,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 250, 250)
                


def snow2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the snow2 colored text.\n
        snow2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use snow2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: snow2("text",bg='snow2') then it's apply the snow2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of snow2\n
                    for example : snow2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                snow2("Hello World", Style = 0 ) = it's return snow2 color text without any style       \n
                snow2("Hello World", Style = 1 ) = it's return snow2 color text with bold text          \n
                snow2("Hello World", Style = 2 ) = it's return snow2 color text with light text         \n
                snow2("Hello World", Style = 3 ) = it's return snow2 color text with Italicized style   \n
                snow2("Hello World", Style = 4 ) = it's return snow2 color text with UnderLine          \n
                snow2("Hello World", Style = 5 ) = it's return Blinking snow2 color text                \n
        """
        if rgb:
            return (238, 233, 233)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 233, 233,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 233, 233)
                


def snow3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the snow3 colored text.\n
        snow3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use snow3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: snow3("text",bg='snow3') then it's apply the snow3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of snow3\n
                    for example : snow3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                snow3("Hello World", Style = 0 ) = it's return snow3 color text without any style       \n
                snow3("Hello World", Style = 1 ) = it's return snow3 color text with bold text          \n
                snow3("Hello World", Style = 2 ) = it's return snow3 color text with light text         \n
                snow3("Hello World", Style = 3 ) = it's return snow3 color text with Italicized style   \n
                snow3("Hello World", Style = 4 ) = it's return snow3 color text with UnderLine          \n
                snow3("Hello World", Style = 5 ) = it's return Blinking snow3 color text                \n
        """
        if rgb:
            return (205, 201, 201)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 201, 201,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 201, 201)
                


def snow4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the snow4 colored text.\n
        snow4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use snow4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: snow4("text",bg='snow4') then it's apply the snow4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of snow4\n
                    for example : snow4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                snow4("Hello World", Style = 0 ) = it's return snow4 color text without any style       \n
                snow4("Hello World", Style = 1 ) = it's return snow4 color text with bold text          \n
                snow4("Hello World", Style = 2 ) = it's return snow4 color text with light text         \n
                snow4("Hello World", Style = 3 ) = it's return snow4 color text with Italicized style   \n
                snow4("Hello World", Style = 4 ) = it's return snow4 color text with UnderLine          \n
                snow4("Hello World", Style = 5 ) = it's return Blinking snow4 color text                \n
        """
        if rgb:
            return (139, 137, 137)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 137, 137,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 137, 137)
                


def wheat( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the wheat colored text.\n
        wheat() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use wheatbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: wheat("text",bg='wheat') then it's apply the wheat color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of wheat\n
                    for example : wheat(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                wheat("Hello World", Style = 0 ) = it's return wheat color text without any style       \n
                wheat("Hello World", Style = 1 ) = it's return wheat color text with bold text          \n
                wheat("Hello World", Style = 2 ) = it's return wheat color text with light text         \n
                wheat("Hello World", Style = 3 ) = it's return wheat color text with Italicized style   \n
                wheat("Hello World", Style = 4 ) = it's return wheat color text with UnderLine          \n
                wheat("Hello World", Style = 5 ) = it's return Blinking wheat color text                \n
        """
        if rgb:
            return (245, 222, 179)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 245, 222, 179,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 245, 222, 179)
                


def wheat1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the wheat1 colored text.\n
        wheat1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use wheat1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: wheat1("text",bg='wheat1') then it's apply the wheat1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of wheat1\n
                    for example : wheat1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                wheat1("Hello World", Style = 0 ) = it's return wheat1 color text without any style       \n
                wheat1("Hello World", Style = 1 ) = it's return wheat1 color text with bold text          \n
                wheat1("Hello World", Style = 2 ) = it's return wheat1 color text with light text         \n
                wheat1("Hello World", Style = 3 ) = it's return wheat1 color text with Italicized style   \n
                wheat1("Hello World", Style = 4 ) = it's return wheat1 color text with UnderLine          \n
                wheat1("Hello World", Style = 5 ) = it's return Blinking wheat1 color text                \n
        """
        if rgb:
            return (255, 231, 186)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 231, 186,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 231, 186)
                


def wheat2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the wheat2 colored text.\n
        wheat2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use wheat2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: wheat2("text",bg='wheat2') then it's apply the wheat2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of wheat2\n
                    for example : wheat2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                wheat2("Hello World", Style = 0 ) = it's return wheat2 color text without any style       \n
                wheat2("Hello World", Style = 1 ) = it's return wheat2 color text with bold text          \n
                wheat2("Hello World", Style = 2 ) = it's return wheat2 color text with light text         \n
                wheat2("Hello World", Style = 3 ) = it's return wheat2 color text with Italicized style   \n
                wheat2("Hello World", Style = 4 ) = it's return wheat2 color text with UnderLine          \n
                wheat2("Hello World", Style = 5 ) = it's return Blinking wheat2 color text                \n
        """
        if rgb:
            return (238, 216, 174)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 216, 174,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 216, 174)
                


def wheat3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the wheat3 colored text.\n
        wheat3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use wheat3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: wheat3("text",bg='wheat3') then it's apply the wheat3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of wheat3\n
                    for example : wheat3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                wheat3("Hello World", Style = 0 ) = it's return wheat3 color text without any style       \n
                wheat3("Hello World", Style = 1 ) = it's return wheat3 color text with bold text          \n
                wheat3("Hello World", Style = 2 ) = it's return wheat3 color text with light text         \n
                wheat3("Hello World", Style = 3 ) = it's return wheat3 color text with Italicized style   \n
                wheat3("Hello World", Style = 4 ) = it's return wheat3 color text with UnderLine          \n
                wheat3("Hello World", Style = 5 ) = it's return Blinking wheat3 color text                \n
        """
        if rgb:
            return (205, 186, 150)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 186, 150,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 186, 150)
                


def wheat4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the wheat4 colored text.\n
        wheat4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use wheat4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: wheat4("text",bg='wheat4') then it's apply the wheat4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of wheat4\n
                    for example : wheat4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                wheat4("Hello World", Style = 0 ) = it's return wheat4 color text without any style       \n
                wheat4("Hello World", Style = 1 ) = it's return wheat4 color text with bold text          \n
                wheat4("Hello World", Style = 2 ) = it's return wheat4 color text with light text         \n
                wheat4("Hello World", Style = 3 ) = it's return wheat4 color text with Italicized style   \n
                wheat4("Hello World", Style = 4 ) = it's return wheat4 color text with UnderLine          \n
                wheat4("Hello World", Style = 5 ) = it's return Blinking wheat4 color text                \n
        """
        if rgb:
            return (139, 126, 102)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 126, 102,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 126, 102)
                


def white( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the white colored text.\n
        white() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use whitebg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: white("text",bg='white') then it's apply the white color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of white\n
                    for example : white(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                white("Hello World", Style = 0 ) = it's return white color text without any style       \n
                white("Hello World", Style = 1 ) = it's return white color text with bold text          \n
                white("Hello World", Style = 2 ) = it's return white color text with light text         \n
                white("Hello World", Style = 3 ) = it's return white color text with Italicized style   \n
                white("Hello World", Style = 4 ) = it's return white color text with UnderLine          \n
                white("Hello World", Style = 5 ) = it's return Blinking white color text                \n
        """
        if rgb:
            return (255, 255, 255)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 255, 255,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 255, 255)
                


def quartz( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the quartz colored text.\n
        quartz() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use quartzbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: quartz("text",bg='quartz') then it's apply the quartz color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of quartz\n
                    for example : quartz(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                quartz("Hello World", Style = 0 ) = it's return quartz color text without any style       \n
                quartz("Hello World", Style = 1 ) = it's return quartz color text with bold text          \n
                quartz("Hello World", Style = 2 ) = it's return quartz color text with light text         \n
                quartz("Hello World", Style = 3 ) = it's return quartz color text with Italicized style   \n
                quartz("Hello World", Style = 4 ) = it's return quartz color text with UnderLine          \n
                quartz("Hello World", Style = 5 ) = it's return Blinking quartz color text                \n
        """
        if rgb:
            return (217, 217, 243)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 217, 217, 243,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 217, 217, 243)
                


def wheat( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the wheat colored text.\n
        wheat() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use wheatbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: wheat("text",bg='wheat') then it's apply the wheat color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of wheat\n
                    for example : wheat(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                wheat("Hello World", Style = 0 ) = it's return wheat color text without any style       \n
                wheat("Hello World", Style = 1 ) = it's return wheat color text with bold text          \n
                wheat("Hello World", Style = 2 ) = it's return wheat color text with light text         \n
                wheat("Hello World", Style = 3 ) = it's return wheat color text with Italicized style   \n
                wheat("Hello World", Style = 4 ) = it's return wheat color text with UnderLine          \n
                wheat("Hello World", Style = 5 ) = it's return Blinking wheat color text                \n
        """
        if rgb:
            return (216, 216, 191)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 216, 216, 191,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 216, 216, 191)
                


def blanchedalmond( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the blanchedalmond colored text.\n
        blanchedalmond() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use blanchedalmondbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: blanchedalmond("text",bg='blanchedalmond') then it's apply the blanchedalmond color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of blanchedalmond\n
                    for example : blanchedalmond(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                blanchedalmond("Hello World", Style = 0 ) = it's return blanchedalmond color text without any style       \n
                blanchedalmond("Hello World", Style = 1 ) = it's return blanchedalmond color text with bold text          \n
                blanchedalmond("Hello World", Style = 2 ) = it's return blanchedalmond color text with light text         \n
                blanchedalmond("Hello World", Style = 3 ) = it's return blanchedalmond color text with Italicized style   \n
                blanchedalmond("Hello World", Style = 4 ) = it's return blanchedalmond color text with UnderLine          \n
                blanchedalmond("Hello World", Style = 5 ) = it's return Blinking blanchedalmond color text                \n
        """
        if rgb:
            return (255, 235, 205)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 235, 205,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 235, 205)
                


def darkgoldenrod( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darkgoldenrod colored text.\n
        darkgoldenrod() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darkgoldenrodbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darkgoldenrod("text",bg='darkgoldenrod') then it's apply the darkgoldenrod color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darkgoldenrod\n
                    for example : darkgoldenrod(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darkgoldenrod("Hello World", Style = 0 ) = it's return darkgoldenrod color text without any style       \n
                darkgoldenrod("Hello World", Style = 1 ) = it's return darkgoldenrod color text with bold text          \n
                darkgoldenrod("Hello World", Style = 2 ) = it's return darkgoldenrod color text with light text         \n
                darkgoldenrod("Hello World", Style = 3 ) = it's return darkgoldenrod color text with Italicized style   \n
                darkgoldenrod("Hello World", Style = 4 ) = it's return darkgoldenrod color text with UnderLine          \n
                darkgoldenrod("Hello World", Style = 5 ) = it's return Blinking darkgoldenrod color text                \n
        """
        if rgb:
            return (184, 134, 11)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 184, 134, 11,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 184, 134, 11)
                


def darkgoldenrod1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darkgoldenrod1 colored text.\n
        darkgoldenrod1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darkgoldenrod1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darkgoldenrod1("text",bg='darkgoldenrod1') then it's apply the darkgoldenrod1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darkgoldenrod1\n
                    for example : darkgoldenrod1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darkgoldenrod1("Hello World", Style = 0 ) = it's return darkgoldenrod1 color text without any style       \n
                darkgoldenrod1("Hello World", Style = 1 ) = it's return darkgoldenrod1 color text with bold text          \n
                darkgoldenrod1("Hello World", Style = 2 ) = it's return darkgoldenrod1 color text with light text         \n
                darkgoldenrod1("Hello World", Style = 3 ) = it's return darkgoldenrod1 color text with Italicized style   \n
                darkgoldenrod1("Hello World", Style = 4 ) = it's return darkgoldenrod1 color text with UnderLine          \n
                darkgoldenrod1("Hello World", Style = 5 ) = it's return Blinking darkgoldenrod1 color text                \n
        """
        if rgb:
            return (255, 185, 15)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 185, 15,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 185, 15)
                


def darkgoldenrod2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darkgoldenrod2 colored text.\n
        darkgoldenrod2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darkgoldenrod2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darkgoldenrod2("text",bg='darkgoldenrod2') then it's apply the darkgoldenrod2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darkgoldenrod2\n
                    for example : darkgoldenrod2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darkgoldenrod2("Hello World", Style = 0 ) = it's return darkgoldenrod2 color text without any style       \n
                darkgoldenrod2("Hello World", Style = 1 ) = it's return darkgoldenrod2 color text with bold text          \n
                darkgoldenrod2("Hello World", Style = 2 ) = it's return darkgoldenrod2 color text with light text         \n
                darkgoldenrod2("Hello World", Style = 3 ) = it's return darkgoldenrod2 color text with Italicized style   \n
                darkgoldenrod2("Hello World", Style = 4 ) = it's return darkgoldenrod2 color text with UnderLine          \n
                darkgoldenrod2("Hello World", Style = 5 ) = it's return Blinking darkgoldenrod2 color text                \n
        """
        if rgb:
            return (238, 173, 14)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 173, 14,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 173, 14)
                


def darkgoldenrod3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darkgoldenrod3 colored text.\n
        darkgoldenrod3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darkgoldenrod3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darkgoldenrod3("text",bg='darkgoldenrod3') then it's apply the darkgoldenrod3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darkgoldenrod3\n
                    for example : darkgoldenrod3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darkgoldenrod3("Hello World", Style = 0 ) = it's return darkgoldenrod3 color text without any style       \n
                darkgoldenrod3("Hello World", Style = 1 ) = it's return darkgoldenrod3 color text with bold text          \n
                darkgoldenrod3("Hello World", Style = 2 ) = it's return darkgoldenrod3 color text with light text         \n
                darkgoldenrod3("Hello World", Style = 3 ) = it's return darkgoldenrod3 color text with Italicized style   \n
                darkgoldenrod3("Hello World", Style = 4 ) = it's return darkgoldenrod3 color text with UnderLine          \n
                darkgoldenrod3("Hello World", Style = 5 ) = it's return Blinking darkgoldenrod3 color text                \n
        """
        if rgb:
            return (205, 149, 12)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 149, 12,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 149, 12)
                


def darkgoldenrod4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the darkgoldenrod4 colored text.\n
        darkgoldenrod4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use darkgoldenrod4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: darkgoldenrod4("text",bg='darkgoldenrod4') then it's apply the darkgoldenrod4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of darkgoldenrod4\n
                    for example : darkgoldenrod4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                darkgoldenrod4("Hello World", Style = 0 ) = it's return darkgoldenrod4 color text without any style       \n
                darkgoldenrod4("Hello World", Style = 1 ) = it's return darkgoldenrod4 color text with bold text          \n
                darkgoldenrod4("Hello World", Style = 2 ) = it's return darkgoldenrod4 color text with light text         \n
                darkgoldenrod4("Hello World", Style = 3 ) = it's return darkgoldenrod4 color text with Italicized style   \n
                darkgoldenrod4("Hello World", Style = 4 ) = it's return darkgoldenrod4 color text with UnderLine          \n
                darkgoldenrod4("Hello World", Style = 5 ) = it's return Blinking darkgoldenrod4 color text                \n
        """
        if rgb:
            return (139, 101, 8)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 101, 8,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 101, 8)
                


def lemonchiffon( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lemonchiffon colored text.\n
        lemonchiffon() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lemonchiffonbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lemonchiffon("text",bg='lemonchiffon') then it's apply the lemonchiffon color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lemonchiffon\n
                    for example : lemonchiffon(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lemonchiffon("Hello World", Style = 0 ) = it's return lemonchiffon color text without any style       \n
                lemonchiffon("Hello World", Style = 1 ) = it's return lemonchiffon color text with bold text          \n
                lemonchiffon("Hello World", Style = 2 ) = it's return lemonchiffon color text with light text         \n
                lemonchiffon("Hello World", Style = 3 ) = it's return lemonchiffon color text with Italicized style   \n
                lemonchiffon("Hello World", Style = 4 ) = it's return lemonchiffon color text with UnderLine          \n
                lemonchiffon("Hello World", Style = 5 ) = it's return Blinking lemonchiffon color text                \n
        """
        if rgb:
            return (255, 250, 205)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 250, 205,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 250, 205)
                


def lemonchiffon1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lemonchiffon1 colored text.\n
        lemonchiffon1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lemonchiffon1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lemonchiffon1("text",bg='lemonchiffon1') then it's apply the lemonchiffon1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lemonchiffon1\n
                    for example : lemonchiffon1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lemonchiffon1("Hello World", Style = 0 ) = it's return lemonchiffon1 color text without any style       \n
                lemonchiffon1("Hello World", Style = 1 ) = it's return lemonchiffon1 color text with bold text          \n
                lemonchiffon1("Hello World", Style = 2 ) = it's return lemonchiffon1 color text with light text         \n
                lemonchiffon1("Hello World", Style = 3 ) = it's return lemonchiffon1 color text with Italicized style   \n
                lemonchiffon1("Hello World", Style = 4 ) = it's return lemonchiffon1 color text with UnderLine          \n
                lemonchiffon1("Hello World", Style = 5 ) = it's return Blinking lemonchiffon1 color text                \n
        """
        if rgb:
            return (255, 250, 205)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 250, 205,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 250, 205)
                


def lemonchiffon2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lemonchiffon2 colored text.\n
        lemonchiffon2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lemonchiffon2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lemonchiffon2("text",bg='lemonchiffon2') then it's apply the lemonchiffon2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lemonchiffon2\n
                    for example : lemonchiffon2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lemonchiffon2("Hello World", Style = 0 ) = it's return lemonchiffon2 color text without any style       \n
                lemonchiffon2("Hello World", Style = 1 ) = it's return lemonchiffon2 color text with bold text          \n
                lemonchiffon2("Hello World", Style = 2 ) = it's return lemonchiffon2 color text with light text         \n
                lemonchiffon2("Hello World", Style = 3 ) = it's return lemonchiffon2 color text with Italicized style   \n
                lemonchiffon2("Hello World", Style = 4 ) = it's return lemonchiffon2 color text with UnderLine          \n
                lemonchiffon2("Hello World", Style = 5 ) = it's return Blinking lemonchiffon2 color text                \n
        """
        if rgb:
            return (238, 233, 191)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 233, 191,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 233, 191)
                


def lemonchiffon3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lemonchiffon3 colored text.\n
        lemonchiffon3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lemonchiffon3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lemonchiffon3("text",bg='lemonchiffon3') then it's apply the lemonchiffon3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lemonchiffon3\n
                    for example : lemonchiffon3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lemonchiffon3("Hello World", Style = 0 ) = it's return lemonchiffon3 color text without any style       \n
                lemonchiffon3("Hello World", Style = 1 ) = it's return lemonchiffon3 color text with bold text          \n
                lemonchiffon3("Hello World", Style = 2 ) = it's return lemonchiffon3 color text with light text         \n
                lemonchiffon3("Hello World", Style = 3 ) = it's return lemonchiffon3 color text with Italicized style   \n
                lemonchiffon3("Hello World", Style = 4 ) = it's return lemonchiffon3 color text with UnderLine          \n
                lemonchiffon3("Hello World", Style = 5 ) = it's return Blinking lemonchiffon3 color text                \n
        """
        if rgb:
            return (205, 201, 165)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 201, 165,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 201, 165)
                


def lemonchiffon4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lemonchiffon4 colored text.\n
        lemonchiffon4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lemonchiffon4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lemonchiffon4("text",bg='lemonchiffon4') then it's apply the lemonchiffon4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lemonchiffon4\n
                    for example : lemonchiffon4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lemonchiffon4("Hello World", Style = 0 ) = it's return lemonchiffon4 color text without any style       \n
                lemonchiffon4("Hello World", Style = 1 ) = it's return lemonchiffon4 color text with bold text          \n
                lemonchiffon4("Hello World", Style = 2 ) = it's return lemonchiffon4 color text with light text         \n
                lemonchiffon4("Hello World", Style = 3 ) = it's return lemonchiffon4 color text with Italicized style   \n
                lemonchiffon4("Hello World", Style = 4 ) = it's return lemonchiffon4 color text with UnderLine          \n
                lemonchiffon4("Hello World", Style = 5 ) = it's return Blinking lemonchiffon4 color text                \n
        """
        if rgb:
            return (139, 137, 112)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 137, 112,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 137, 112)
                


def lightgoldenrod( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightgoldenrod colored text.\n
        lightgoldenrod() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightgoldenrodbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightgoldenrod("text",bg='lightgoldenrod') then it's apply the lightgoldenrod color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightgoldenrod\n
                    for example : lightgoldenrod(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightgoldenrod("Hello World", Style = 0 ) = it's return lightgoldenrod color text without any style       \n
                lightgoldenrod("Hello World", Style = 1 ) = it's return lightgoldenrod color text with bold text          \n
                lightgoldenrod("Hello World", Style = 2 ) = it's return lightgoldenrod color text with light text         \n
                lightgoldenrod("Hello World", Style = 3 ) = it's return lightgoldenrod color text with Italicized style   \n
                lightgoldenrod("Hello World", Style = 4 ) = it's return lightgoldenrod color text with UnderLine          \n
                lightgoldenrod("Hello World", Style = 5 ) = it's return Blinking lightgoldenrod color text                \n
        """
        if rgb:
            return (238, 221, 130)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 221, 130,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 221, 130)
                


def lightgoldenrod1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightgoldenrod1 colored text.\n
        lightgoldenrod1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightgoldenrod1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightgoldenrod1("text",bg='lightgoldenrod1') then it's apply the lightgoldenrod1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightgoldenrod1\n
                    for example : lightgoldenrod1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightgoldenrod1("Hello World", Style = 0 ) = it's return lightgoldenrod1 color text without any style       \n
                lightgoldenrod1("Hello World", Style = 1 ) = it's return lightgoldenrod1 color text with bold text          \n
                lightgoldenrod1("Hello World", Style = 2 ) = it's return lightgoldenrod1 color text with light text         \n
                lightgoldenrod1("Hello World", Style = 3 ) = it's return lightgoldenrod1 color text with Italicized style   \n
                lightgoldenrod1("Hello World", Style = 4 ) = it's return lightgoldenrod1 color text with UnderLine          \n
                lightgoldenrod1("Hello World", Style = 5 ) = it's return Blinking lightgoldenrod1 color text                \n
        """
        if rgb:
            return (255, 236, 139)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 236, 139,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 236, 139)
                


def lightgoldenrod2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightgoldenrod2 colored text.\n
        lightgoldenrod2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightgoldenrod2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightgoldenrod2("text",bg='lightgoldenrod2') then it's apply the lightgoldenrod2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightgoldenrod2\n
                    for example : lightgoldenrod2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightgoldenrod2("Hello World", Style = 0 ) = it's return lightgoldenrod2 color text without any style       \n
                lightgoldenrod2("Hello World", Style = 1 ) = it's return lightgoldenrod2 color text with bold text          \n
                lightgoldenrod2("Hello World", Style = 2 ) = it's return lightgoldenrod2 color text with light text         \n
                lightgoldenrod2("Hello World", Style = 3 ) = it's return lightgoldenrod2 color text with Italicized style   \n
                lightgoldenrod2("Hello World", Style = 4 ) = it's return lightgoldenrod2 color text with UnderLine          \n
                lightgoldenrod2("Hello World", Style = 5 ) = it's return Blinking lightgoldenrod2 color text                \n
        """
        if rgb:
            return (238, 220, 130)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 220, 130,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 220, 130)
                


def lightgoldenrod3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightgoldenrod3 colored text.\n
        lightgoldenrod3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightgoldenrod3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightgoldenrod3("text",bg='lightgoldenrod3') then it's apply the lightgoldenrod3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightgoldenrod3\n
                    for example : lightgoldenrod3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightgoldenrod3("Hello World", Style = 0 ) = it's return lightgoldenrod3 color text without any style       \n
                lightgoldenrod3("Hello World", Style = 1 ) = it's return lightgoldenrod3 color text with bold text          \n
                lightgoldenrod3("Hello World", Style = 2 ) = it's return lightgoldenrod3 color text with light text         \n
                lightgoldenrod3("Hello World", Style = 3 ) = it's return lightgoldenrod3 color text with Italicized style   \n
                lightgoldenrod3("Hello World", Style = 4 ) = it's return lightgoldenrod3 color text with UnderLine          \n
                lightgoldenrod3("Hello World", Style = 5 ) = it's return Blinking lightgoldenrod3 color text                \n
        """
        if rgb:
            return (205, 190, 112)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 190, 112,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 190, 112)
                


def lightgoldenrod4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightgoldenrod4 colored text.\n
        lightgoldenrod4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightgoldenrod4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightgoldenrod4("text",bg='lightgoldenrod4') then it's apply the lightgoldenrod4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightgoldenrod4\n
                    for example : lightgoldenrod4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightgoldenrod4("Hello World", Style = 0 ) = it's return lightgoldenrod4 color text without any style       \n
                lightgoldenrod4("Hello World", Style = 1 ) = it's return lightgoldenrod4 color text with bold text          \n
                lightgoldenrod4("Hello World", Style = 2 ) = it's return lightgoldenrod4 color text with light text         \n
                lightgoldenrod4("Hello World", Style = 3 ) = it's return lightgoldenrod4 color text with Italicized style   \n
                lightgoldenrod4("Hello World", Style = 4 ) = it's return lightgoldenrod4 color text with UnderLine          \n
                lightgoldenrod4("Hello World", Style = 5 ) = it's return Blinking lightgoldenrod4 color text                \n
        """
        if rgb:
            return (139, 129, 76)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 129, 76,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 129, 76)
                


def lightgoldenrodyellow( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightgoldenrodyellow colored text.\n
        lightgoldenrodyellow() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightgoldenrodyellowbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightgoldenrodyellow("text",bg='lightgoldenrodyellow') then it's apply the lightgoldenrodyellow color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightgoldenrodyellow\n
                    for example : lightgoldenrodyellow(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightgoldenrodyellow("Hello World", Style = 0 ) = it's return lightgoldenrodyellow color text without any style       \n
                lightgoldenrodyellow("Hello World", Style = 1 ) = it's return lightgoldenrodyellow color text with bold text          \n
                lightgoldenrodyellow("Hello World", Style = 2 ) = it's return lightgoldenrodyellow color text with light text         \n
                lightgoldenrodyellow("Hello World", Style = 3 ) = it's return lightgoldenrodyellow color text with Italicized style   \n
                lightgoldenrodyellow("Hello World", Style = 4 ) = it's return lightgoldenrodyellow color text with UnderLine          \n
                lightgoldenrodyellow("Hello World", Style = 5 ) = it's return Blinking lightgoldenrodyellow color text                \n
        """
        if rgb:
            return (250, 250, 210)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 250, 250, 210,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 250, 250, 210)
                


def lightyellow( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightyellow colored text.\n
        lightyellow() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightyellowbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightyellow("text",bg='lightyellow') then it's apply the lightyellow color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightyellow\n
                    for example : lightyellow(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightyellow("Hello World", Style = 0 ) = it's return lightyellow color text without any style       \n
                lightyellow("Hello World", Style = 1 ) = it's return lightyellow color text with bold text          \n
                lightyellow("Hello World", Style = 2 ) = it's return lightyellow color text with light text         \n
                lightyellow("Hello World", Style = 3 ) = it's return lightyellow color text with Italicized style   \n
                lightyellow("Hello World", Style = 4 ) = it's return lightyellow color text with UnderLine          \n
                lightyellow("Hello World", Style = 5 ) = it's return Blinking lightyellow color text                \n
        """
        if rgb:
            return (255, 255, 224)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 255, 224,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 255, 224)
                


def lightyellow1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightyellow1 colored text.\n
        lightyellow1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightyellow1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightyellow1("text",bg='lightyellow1') then it's apply the lightyellow1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightyellow1\n
                    for example : lightyellow1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightyellow1("Hello World", Style = 0 ) = it's return lightyellow1 color text without any style       \n
                lightyellow1("Hello World", Style = 1 ) = it's return lightyellow1 color text with bold text          \n
                lightyellow1("Hello World", Style = 2 ) = it's return lightyellow1 color text with light text         \n
                lightyellow1("Hello World", Style = 3 ) = it's return lightyellow1 color text with Italicized style   \n
                lightyellow1("Hello World", Style = 4 ) = it's return lightyellow1 color text with UnderLine          \n
                lightyellow1("Hello World", Style = 5 ) = it's return Blinking lightyellow1 color text                \n
        """
        if rgb:
            return (255, 255, 224)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 255, 224,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 255, 224)
                


def lightyellow2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightyellow2 colored text.\n
        lightyellow2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightyellow2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightyellow2("text",bg='lightyellow2') then it's apply the lightyellow2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightyellow2\n
                    for example : lightyellow2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightyellow2("Hello World", Style = 0 ) = it's return lightyellow2 color text without any style       \n
                lightyellow2("Hello World", Style = 1 ) = it's return lightyellow2 color text with bold text          \n
                lightyellow2("Hello World", Style = 2 ) = it's return lightyellow2 color text with light text         \n
                lightyellow2("Hello World", Style = 3 ) = it's return lightyellow2 color text with Italicized style   \n
                lightyellow2("Hello World", Style = 4 ) = it's return lightyellow2 color text with UnderLine          \n
                lightyellow2("Hello World", Style = 5 ) = it's return Blinking lightyellow2 color text                \n
        """
        if rgb:
            return (238, 238, 209)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 238, 209,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 238, 209)
                


def lightyellow3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightyellow3 colored text.\n
        lightyellow3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightyellow3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightyellow3("text",bg='lightyellow3') then it's apply the lightyellow3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightyellow3\n
                    for example : lightyellow3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightyellow3("Hello World", Style = 0 ) = it's return lightyellow3 color text without any style       \n
                lightyellow3("Hello World", Style = 1 ) = it's return lightyellow3 color text with bold text          \n
                lightyellow3("Hello World", Style = 2 ) = it's return lightyellow3 color text with light text         \n
                lightyellow3("Hello World", Style = 3 ) = it's return lightyellow3 color text with Italicized style   \n
                lightyellow3("Hello World", Style = 4 ) = it's return lightyellow3 color text with UnderLine          \n
                lightyellow3("Hello World", Style = 5 ) = it's return Blinking lightyellow3 color text                \n
        """
        if rgb:
            return (205, 205, 180)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 205, 180,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 205, 180)
                


def lightyellow4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the lightyellow4 colored text.\n
        lightyellow4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use lightyellow4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: lightyellow4("text",bg='lightyellow4') then it's apply the lightyellow4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of lightyellow4\n
                    for example : lightyellow4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                lightyellow4("Hello World", Style = 0 ) = it's return lightyellow4 color text without any style       \n
                lightyellow4("Hello World", Style = 1 ) = it's return lightyellow4 color text with bold text          \n
                lightyellow4("Hello World", Style = 2 ) = it's return lightyellow4 color text with light text         \n
                lightyellow4("Hello World", Style = 3 ) = it's return lightyellow4 color text with Italicized style   \n
                lightyellow4("Hello World", Style = 4 ) = it's return lightyellow4 color text with UnderLine          \n
                lightyellow4("Hello World", Style = 5 ) = it's return Blinking lightyellow4 color text                \n
        """
        if rgb:
            return (139, 139, 122)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 139, 122,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 139, 122)
                


def palegoldenrod( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the palegoldenrod colored text.\n
        palegoldenrod() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use palegoldenrodbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: palegoldenrod("text",bg='palegoldenrod') then it's apply the palegoldenrod color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of palegoldenrod\n
                    for example : palegoldenrod(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                palegoldenrod("Hello World", Style = 0 ) = it's return palegoldenrod color text without any style       \n
                palegoldenrod("Hello World", Style = 1 ) = it's return palegoldenrod color text with bold text          \n
                palegoldenrod("Hello World", Style = 2 ) = it's return palegoldenrod color text with light text         \n
                palegoldenrod("Hello World", Style = 3 ) = it's return palegoldenrod color text with Italicized style   \n
                palegoldenrod("Hello World", Style = 4 ) = it's return palegoldenrod color text with UnderLine          \n
                palegoldenrod("Hello World", Style = 5 ) = it's return Blinking palegoldenrod color text                \n
        """
        if rgb:
            return (238, 232, 170)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 232, 170,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 232, 170)
                


def papayawhip( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the papayawhip colored text.\n
        papayawhip() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use papayawhipbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: papayawhip("text",bg='papayawhip') then it's apply the papayawhip color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of papayawhip\n
                    for example : papayawhip(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                papayawhip("Hello World", Style = 0 ) = it's return papayawhip color text without any style       \n
                papayawhip("Hello World", Style = 1 ) = it's return papayawhip color text with bold text          \n
                papayawhip("Hello World", Style = 2 ) = it's return papayawhip color text with light text         \n
                papayawhip("Hello World", Style = 3 ) = it's return papayawhip color text with Italicized style   \n
                papayawhip("Hello World", Style = 4 ) = it's return papayawhip color text with UnderLine          \n
                papayawhip("Hello World", Style = 5 ) = it's return Blinking papayawhip color text                \n
        """
        if rgb:
            return (255, 239, 213)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 239, 213,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 239, 213)
                


def cornsilk( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the cornsilk colored text.\n
        cornsilk() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use cornsilkbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: cornsilk("text",bg='cornsilk') then it's apply the cornsilk color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of cornsilk\n
                    for example : cornsilk(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                cornsilk("Hello World", Style = 0 ) = it's return cornsilk color text without any style       \n
                cornsilk("Hello World", Style = 1 ) = it's return cornsilk color text with bold text          \n
                cornsilk("Hello World", Style = 2 ) = it's return cornsilk color text with light text         \n
                cornsilk("Hello World", Style = 3 ) = it's return cornsilk color text with Italicized style   \n
                cornsilk("Hello World", Style = 4 ) = it's return cornsilk color text with UnderLine          \n
                cornsilk("Hello World", Style = 5 ) = it's return Blinking cornsilk color text                \n
        """
        if rgb:
            return (255, 248, 220)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 248, 220,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 248, 220)
                


def cornsilk1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the cornsilk1 colored text.\n
        cornsilk1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use cornsilk1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: cornsilk1("text",bg='cornsilk1') then it's apply the cornsilk1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of cornsilk1\n
                    for example : cornsilk1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                cornsilk1("Hello World", Style = 0 ) = it's return cornsilk1 color text without any style       \n
                cornsilk1("Hello World", Style = 1 ) = it's return cornsilk1 color text with bold text          \n
                cornsilk1("Hello World", Style = 2 ) = it's return cornsilk1 color text with light text         \n
                cornsilk1("Hello World", Style = 3 ) = it's return cornsilk1 color text with Italicized style   \n
                cornsilk1("Hello World", Style = 4 ) = it's return cornsilk1 color text with UnderLine          \n
                cornsilk1("Hello World", Style = 5 ) = it's return Blinking cornsilk1 color text                \n
        """
        if rgb:
            return (255, 248, 220)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 248, 220,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 248, 220)
                


def cornsilk2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the cornsilk2 colored text.\n
        cornsilk2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use cornsilk2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: cornsilk2("text",bg='cornsilk2') then it's apply the cornsilk2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of cornsilk2\n
                    for example : cornsilk2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                cornsilk2("Hello World", Style = 0 ) = it's return cornsilk2 color text without any style       \n
                cornsilk2("Hello World", Style = 1 ) = it's return cornsilk2 color text with bold text          \n
                cornsilk2("Hello World", Style = 2 ) = it's return cornsilk2 color text with light text         \n
                cornsilk2("Hello World", Style = 3 ) = it's return cornsilk2 color text with Italicized style   \n
                cornsilk2("Hello World", Style = 4 ) = it's return cornsilk2 color text with UnderLine          \n
                cornsilk2("Hello World", Style = 5 ) = it's return Blinking cornsilk2 color text                \n
        """
        if rgb:
            return (238, 232, 205)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 232, 205,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 232, 205)
                


def cornsilk3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the cornsilk3 colored text.\n
        cornsilk3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use cornsilk3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: cornsilk3("text",bg='cornsilk3') then it's apply the cornsilk3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of cornsilk3\n
                    for example : cornsilk3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                cornsilk3("Hello World", Style = 0 ) = it's return cornsilk3 color text without any style       \n
                cornsilk3("Hello World", Style = 1 ) = it's return cornsilk3 color text with bold text          \n
                cornsilk3("Hello World", Style = 2 ) = it's return cornsilk3 color text with light text         \n
                cornsilk3("Hello World", Style = 3 ) = it's return cornsilk3 color text with Italicized style   \n
                cornsilk3("Hello World", Style = 4 ) = it's return cornsilk3 color text with UnderLine          \n
                cornsilk3("Hello World", Style = 5 ) = it's return Blinking cornsilk3 color text                \n
        """
        if rgb:
            return (205, 200, 177)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 200, 177,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 200, 177)
                


def cornsilk4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the cornsilk4 colored text.\n
        cornsilk4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use cornsilk4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: cornsilk4("text",bg='cornsilk4') then it's apply the cornsilk4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of cornsilk4\n
                    for example : cornsilk4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                cornsilk4("Hello World", Style = 0 ) = it's return cornsilk4 color text without any style       \n
                cornsilk4("Hello World", Style = 1 ) = it's return cornsilk4 color text with bold text          \n
                cornsilk4("Hello World", Style = 2 ) = it's return cornsilk4 color text with light text         \n
                cornsilk4("Hello World", Style = 3 ) = it's return cornsilk4 color text with Italicized style   \n
                cornsilk4("Hello World", Style = 4 ) = it's return cornsilk4 color text with UnderLine          \n
                cornsilk4("Hello World", Style = 5 ) = it's return Blinking cornsilk4 color text                \n
        """
        if rgb:
            return (139, 136, 120)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 136, 120,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 136, 120)
                


def goldenrod( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the goldenrod colored text.\n
        goldenrod() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use goldenrodbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: goldenrod("text",bg='goldenrod') then it's apply the goldenrod color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of goldenrod\n
                    for example : goldenrod(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                goldenrod("Hello World", Style = 0 ) = it's return goldenrod color text without any style       \n
                goldenrod("Hello World", Style = 1 ) = it's return goldenrod color text with bold text          \n
                goldenrod("Hello World", Style = 2 ) = it's return goldenrod color text with light text         \n
                goldenrod("Hello World", Style = 3 ) = it's return goldenrod color text with Italicized style   \n
                goldenrod("Hello World", Style = 4 ) = it's return goldenrod color text with UnderLine          \n
                goldenrod("Hello World", Style = 5 ) = it's return Blinking goldenrod color text                \n
        """
        if rgb:
            return (218, 165, 32)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 218, 165, 32,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 218, 165, 32)
                


def goldenrod1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the goldenrod1 colored text.\n
        goldenrod1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use goldenrod1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: goldenrod1("text",bg='goldenrod1') then it's apply the goldenrod1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of goldenrod1\n
                    for example : goldenrod1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                goldenrod1("Hello World", Style = 0 ) = it's return goldenrod1 color text without any style       \n
                goldenrod1("Hello World", Style = 1 ) = it's return goldenrod1 color text with bold text          \n
                goldenrod1("Hello World", Style = 2 ) = it's return goldenrod1 color text with light text         \n
                goldenrod1("Hello World", Style = 3 ) = it's return goldenrod1 color text with Italicized style   \n
                goldenrod1("Hello World", Style = 4 ) = it's return goldenrod1 color text with UnderLine          \n
                goldenrod1("Hello World", Style = 5 ) = it's return Blinking goldenrod1 color text                \n
        """
        if rgb:
            return (255, 193, 37)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 193, 37,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 193, 37)
                


def goldenrod2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the goldenrod2 colored text.\n
        goldenrod2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use goldenrod2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: goldenrod2("text",bg='goldenrod2') then it's apply the goldenrod2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of goldenrod2\n
                    for example : goldenrod2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                goldenrod2("Hello World", Style = 0 ) = it's return goldenrod2 color text without any style       \n
                goldenrod2("Hello World", Style = 1 ) = it's return goldenrod2 color text with bold text          \n
                goldenrod2("Hello World", Style = 2 ) = it's return goldenrod2 color text with light text         \n
                goldenrod2("Hello World", Style = 3 ) = it's return goldenrod2 color text with Italicized style   \n
                goldenrod2("Hello World", Style = 4 ) = it's return goldenrod2 color text with UnderLine          \n
                goldenrod2("Hello World", Style = 5 ) = it's return Blinking goldenrod2 color text                \n
        """
        if rgb:
            return (238, 180, 34)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 180, 34,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 180, 34)
                


def goldenrod3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the goldenrod3 colored text.\n
        goldenrod3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use goldenrod3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: goldenrod3("text",bg='goldenrod3') then it's apply the goldenrod3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of goldenrod3\n
                    for example : goldenrod3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                goldenrod3("Hello World", Style = 0 ) = it's return goldenrod3 color text without any style       \n
                goldenrod3("Hello World", Style = 1 ) = it's return goldenrod3 color text with bold text          \n
                goldenrod3("Hello World", Style = 2 ) = it's return goldenrod3 color text with light text         \n
                goldenrod3("Hello World", Style = 3 ) = it's return goldenrod3 color text with Italicized style   \n
                goldenrod3("Hello World", Style = 4 ) = it's return goldenrod3 color text with UnderLine          \n
                goldenrod3("Hello World", Style = 5 ) = it's return Blinking goldenrod3 color text                \n
        """
        if rgb:
            return (205, 155, 29)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 155, 29,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 155, 29)
                


def goldenrod4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the goldenrod4 colored text.\n
        goldenrod4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use goldenrod4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: goldenrod4("text",bg='goldenrod4') then it's apply the goldenrod4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of goldenrod4\n
                    for example : goldenrod4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                goldenrod4("Hello World", Style = 0 ) = it's return goldenrod4 color text without any style       \n
                goldenrod4("Hello World", Style = 1 ) = it's return goldenrod4 color text with bold text          \n
                goldenrod4("Hello World", Style = 2 ) = it's return goldenrod4 color text with light text         \n
                goldenrod4("Hello World", Style = 3 ) = it's return goldenrod4 color text with Italicized style   \n
                goldenrod4("Hello World", Style = 4 ) = it's return goldenrod4 color text with UnderLine          \n
                goldenrod4("Hello World", Style = 5 ) = it's return Blinking goldenrod4 color text                \n
        """
        if rgb:
            return (139, 105, 20)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 105, 20,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 105, 20)
                


def moccasin( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the moccasin colored text.\n
        moccasin() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use moccasinbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: moccasin("text",bg='moccasin') then it's apply the moccasin color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of moccasin\n
                    for example : moccasin(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                moccasin("Hello World", Style = 0 ) = it's return moccasin color text without any style       \n
                moccasin("Hello World", Style = 1 ) = it's return moccasin color text with bold text          \n
                moccasin("Hello World", Style = 2 ) = it's return moccasin color text with light text         \n
                moccasin("Hello World", Style = 3 ) = it's return moccasin color text with Italicized style   \n
                moccasin("Hello World", Style = 4 ) = it's return moccasin color text with UnderLine          \n
                moccasin("Hello World", Style = 5 ) = it's return Blinking moccasin color text                \n
        """
        if rgb:
            return (255, 228, 181)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 228, 181,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 228, 181)
                


def yellow( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the yellow colored text.\n
        yellow() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use yellowbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: yellow("text",bg='yellow') then it's apply the yellow color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of yellow\n
                    for example : yellow(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                yellow("Hello World", Style = 0 ) = it's return yellow color text without any style       \n
                yellow("Hello World", Style = 1 ) = it's return yellow color text with bold text          \n
                yellow("Hello World", Style = 2 ) = it's return yellow color text with light text         \n
                yellow("Hello World", Style = 3 ) = it's return yellow color text with Italicized style   \n
                yellow("Hello World", Style = 4 ) = it's return yellow color text with UnderLine          \n
                yellow("Hello World", Style = 5 ) = it's return Blinking yellow color text                \n
        """
        if rgb:
            return (255, 255, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 255, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 255, 0)
                


def yellow1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the yellow1 colored text.\n
        yellow1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use yellow1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: yellow1("text",bg='yellow1') then it's apply the yellow1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of yellow1\n
                    for example : yellow1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                yellow1("Hello World", Style = 0 ) = it's return yellow1 color text without any style       \n
                yellow1("Hello World", Style = 1 ) = it's return yellow1 color text with bold text          \n
                yellow1("Hello World", Style = 2 ) = it's return yellow1 color text with light text         \n
                yellow1("Hello World", Style = 3 ) = it's return yellow1 color text with Italicized style   \n
                yellow1("Hello World", Style = 4 ) = it's return yellow1 color text with UnderLine          \n
                yellow1("Hello World", Style = 5 ) = it's return Blinking yellow1 color text                \n
        """
        if rgb:
            return (255, 255, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 255, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 255, 0)
                


def yellow2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the yellow2 colored text.\n
        yellow2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use yellow2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: yellow2("text",bg='yellow2') then it's apply the yellow2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of yellow2\n
                    for example : yellow2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                yellow2("Hello World", Style = 0 ) = it's return yellow2 color text without any style       \n
                yellow2("Hello World", Style = 1 ) = it's return yellow2 color text with bold text          \n
                yellow2("Hello World", Style = 2 ) = it's return yellow2 color text with light text         \n
                yellow2("Hello World", Style = 3 ) = it's return yellow2 color text with Italicized style   \n
                yellow2("Hello World", Style = 4 ) = it's return yellow2 color text with UnderLine          \n
                yellow2("Hello World", Style = 5 ) = it's return Blinking yellow2 color text                \n
        """
        if rgb:
            return (238, 238, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 238, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 238, 0)
                


def yellow3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the yellow3 colored text.\n
        yellow3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use yellow3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: yellow3("text",bg='yellow3') then it's apply the yellow3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of yellow3\n
                    for example : yellow3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                yellow3("Hello World", Style = 0 ) = it's return yellow3 color text without any style       \n
                yellow3("Hello World", Style = 1 ) = it's return yellow3 color text with bold text          \n
                yellow3("Hello World", Style = 2 ) = it's return yellow3 color text with light text         \n
                yellow3("Hello World", Style = 3 ) = it's return yellow3 color text with Italicized style   \n
                yellow3("Hello World", Style = 4 ) = it's return yellow3 color text with UnderLine          \n
                yellow3("Hello World", Style = 5 ) = it's return Blinking yellow3 color text                \n
        """
        if rgb:
            return (205, 205, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 205, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 205, 0)
                


def yellow4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the yellow4 colored text.\n
        yellow4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use yellow4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: yellow4("text",bg='yellow4') then it's apply the yellow4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of yellow4\n
                    for example : yellow4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                yellow4("Hello World", Style = 0 ) = it's return yellow4 color text without any style       \n
                yellow4("Hello World", Style = 1 ) = it's return yellow4 color text with bold text          \n
                yellow4("Hello World", Style = 2 ) = it's return yellow4 color text with light text         \n
                yellow4("Hello World", Style = 3 ) = it's return yellow4 color text with Italicized style   \n
                yellow4("Hello World", Style = 4 ) = it's return yellow4 color text with UnderLine          \n
                yellow4("Hello World", Style = 5 ) = it's return Blinking yellow4 color text                \n
        """
        if rgb:
            return (139, 139, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 139, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 139, 0)
                


def gold( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the gold colored text.\n
        gold() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use goldbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: gold("text",bg='gold') then it's apply the gold color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of gold\n
                    for example : gold(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                gold("Hello World", Style = 0 ) = it's return gold color text without any style       \n
                gold("Hello World", Style = 1 ) = it's return gold color text with bold text          \n
                gold("Hello World", Style = 2 ) = it's return gold color text with light text         \n
                gold("Hello World", Style = 3 ) = it's return gold color text with Italicized style   \n
                gold("Hello World", Style = 4 ) = it's return gold color text with UnderLine          \n
                gold("Hello World", Style = 5 ) = it's return Blinking gold color text                \n
        """
        if rgb:
            return (255, 215, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 215, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 215, 0)
                


def gold1( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the gold1 colored text.\n
        gold1() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use gold1bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: gold1("text",bg='gold1') then it's apply the gold1 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of gold1\n
                    for example : gold1(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                gold1("Hello World", Style = 0 ) = it's return gold1 color text without any style       \n
                gold1("Hello World", Style = 1 ) = it's return gold1 color text with bold text          \n
                gold1("Hello World", Style = 2 ) = it's return gold1 color text with light text         \n
                gold1("Hello World", Style = 3 ) = it's return gold1 color text with Italicized style   \n
                gold1("Hello World", Style = 4 ) = it's return gold1 color text with UnderLine          \n
                gold1("Hello World", Style = 5 ) = it's return Blinking gold1 color text                \n
        """
        if rgb:
            return (255, 215, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 255, 215, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 255, 215, 0)
                


def gold2( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the gold2 colored text.\n
        gold2() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use gold2bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: gold2("text",bg='gold2') then it's apply the gold2 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of gold2\n
                    for example : gold2(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                gold2("Hello World", Style = 0 ) = it's return gold2 color text without any style       \n
                gold2("Hello World", Style = 1 ) = it's return gold2 color text with bold text          \n
                gold2("Hello World", Style = 2 ) = it's return gold2 color text with light text         \n
                gold2("Hello World", Style = 3 ) = it's return gold2 color text with Italicized style   \n
                gold2("Hello World", Style = 4 ) = it's return gold2 color text with UnderLine          \n
                gold2("Hello World", Style = 5 ) = it's return Blinking gold2 color text                \n
        """
        if rgb:
            return (238, 201, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 238, 201, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 238, 201, 0)
                


def gold3( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the gold3 colored text.\n
        gold3() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use gold3bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: gold3("text",bg='gold3') then it's apply the gold3 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of gold3\n
                    for example : gold3(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                gold3("Hello World", Style = 0 ) = it's return gold3 color text without any style       \n
                gold3("Hello World", Style = 1 ) = it's return gold3 color text with bold text          \n
                gold3("Hello World", Style = 2 ) = it's return gold3 color text with light text         \n
                gold3("Hello World", Style = 3 ) = it's return gold3 color text with Italicized style   \n
                gold3("Hello World", Style = 4 ) = it's return gold3 color text with UnderLine          \n
                gold3("Hello World", Style = 5 ) = it's return Blinking gold3 color text                \n
        """
        if rgb:
            return (205, 173, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 205, 173, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 205, 173, 0)
                


def gold4( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the gold4 colored text.\n
        gold4() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use gold4bg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: gold4("text",bg='gold4') then it's apply the gold4 color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of gold4\n
                    for example : gold4(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                gold4("Hello World", Style = 0 ) = it's return gold4 color text without any style       \n
                gold4("Hello World", Style = 1 ) = it's return gold4 color text with bold text          \n
                gold4("Hello World", Style = 2 ) = it's return gold4 color text with light text         \n
                gold4("Hello World", Style = 3 ) = it's return gold4 color text with Italicized style   \n
                gold4("Hello World", Style = 4 ) = it's return gold4 color text with UnderLine          \n
                gold4("Hello World", Style = 5 ) = it's return Blinking gold4 color text                \n
        """
        if rgb:
            return (139, 117, 0)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 139, 117, 0,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 139, 117, 0)
                


def goldenrod( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the goldenrod colored text.\n
        goldenrod() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use goldenrodbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: goldenrod("text",bg='goldenrod') then it's apply the goldenrod color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of goldenrod\n
                    for example : goldenrod(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                goldenrod("Hello World", Style = 0 ) = it's return goldenrod color text without any style       \n
                goldenrod("Hello World", Style = 1 ) = it's return goldenrod color text with bold text          \n
                goldenrod("Hello World", Style = 2 ) = it's return goldenrod color text with light text         \n
                goldenrod("Hello World", Style = 3 ) = it's return goldenrod color text with Italicized style   \n
                goldenrod("Hello World", Style = 4 ) = it's return goldenrod color text with UnderLine          \n
                goldenrod("Hello World", Style = 5 ) = it's return Blinking goldenrod color text                \n
        """
        if rgb:
            return (219, 219, 112)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 219, 219, 112,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 219, 219, 112)
                


def medium_goldenrod( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the medium_goldenrod colored text.\n
        medium_goldenrod() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use medium_goldenrodbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: medium_goldenrod("text",bg='medium_goldenrod') then it's apply the medium_goldenrod color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of medium_goldenrod\n
                    for example : medium_goldenrod(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                medium_goldenrod("Hello World", Style = 0 ) = it's return medium_goldenrod color text without any style       \n
                medium_goldenrod("Hello World", Style = 1 ) = it's return medium_goldenrod color text with bold text          \n
                medium_goldenrod("Hello World", Style = 2 ) = it's return medium_goldenrod color text with light text         \n
                medium_goldenrod("Hello World", Style = 3 ) = it's return medium_goldenrod color text with Italicized style   \n
                medium_goldenrod("Hello World", Style = 4 ) = it's return medium_goldenrod color text with UnderLine          \n
                medium_goldenrod("Hello World", Style = 5 ) = it's return Blinking medium_goldenrod color text                \n
        """
        if rgb:
            return (234, 234, 174)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 234, 234, 174,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 234, 234, 174)
                


def yellow_green( text : str, bg : Union[bool,str] = False, style : int = default_style, rgb : bool = False ) -> str :
        """
        It will return the yellow_green colored text.\n
        yellow_green() is a ForeGround Function, if You add BackGround given text you can using bg parameter.\n
        if you want only background use yellow_greenbg() function.\n
        How to use this function :\n
            text = it's need a string input like ['text' (or) "text"] \n
            bg    = it's get the background color of the text Ex: yellow_green("text",bg='yellow_green') then it's apply the yellow_green color background.\n
            rgb   = if rgb is true. that means if any values is given (or) ( non none value or none false ) it returns rgb of yellow_green\n
                    for example : yellow_green(" ", rgb=True) then it return the rgb of the value\n
            Style = [
                                Normal     = 0 \n
                                Bold       = 1 \n
                                Light      = 2 \n
                                Italicized = 3 \n
                                UnderLined = 4 \n        
                                Blink      = 5 \n
                        ]
            Example :\n
                yellow_green("Hello World", Style = 0 ) = it's return yellow_green color text without any style       \n
                yellow_green("Hello World", Style = 1 ) = it's return yellow_green color text with bold text          \n
                yellow_green("Hello World", Style = 2 ) = it's return yellow_green color text with light text         \n
                yellow_green("Hello World", Style = 3 ) = it's return yellow_green color text with Italicized style   \n
                yellow_green("Hello World", Style = 4 ) = it's return yellow_green color text with UnderLine          \n
                yellow_green("Hello World", Style = 5 ) = it's return Blinking yellow_green color text                \n
        """
        if rgb:
            return (153, 204, 50)
        else:
            if(style == 0):
                    style=default_style
            if bg:
                return Colors.fore_ground_color(text, style, 153, 204, 50,background = bg )
            else:
                return Colors.fore_ground_color(text, style, 153, 204, 50)
                


