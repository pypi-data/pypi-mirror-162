# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dag.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\tdag.proto\x12\x08jobs.dag\x1a\x1fgoogle/protobuf/timestamp.proto\"\x9a\x01\n\x03\x44\x41G\x12+\n\x07symbols\x18\x01 \x03(\x0b\x32\x1a.jobs.dag.DAG.SymbolsEntry\x12&\n\tflowchart\x18\x02 \x01(\x0b\x32\x13.jobs.dag.Flowchart\x1a>\n\x0cSymbolsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1d\n\x05value\x18\x02 \x01(\x0b\x32\x0e.jobs.dag.Node:\x02\x38\x01\"\xe5\x01\n\tFlowchart\x12-\n\x05nodes\x18\x01 \x03(\x0b\x32\x1e.jobs.dag.Flowchart.NodesEntry\x12-\n\x05\x65\x64ges\x18\x02 \x03(\x0b\x32\x1e.jobs.dag.Flowchart.EdgesEntry\x1a<\n\nNodesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1d\n\x05value\x18\x02 \x01(\x0b\x32\x0e.jobs.dag.Node:\x02\x38\x01\x1a<\n\nEdgesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1d\n\x05value\x18\x02 \x01(\x0b\x32\x0e.jobs.dag.Edge:\x02\x38\x01\"\xa8\x01\n\x04\x45\x64ge\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0e\n\x06source\x18\x02 \x01(\t\x12\x0e\n\x06target\x18\x03 \x01(\t\x12%\n\x04type\x18\x04 \x01(\x0e\x32\x17.jobs.dag.Edge.EdgeType\x12\x13\n\x0bnbox_string\x18\x05 \x01(\t\"8\n\x08\x45\x64geType\x12\x13\n\x0f\x45XECUTION_ORDER\x10\x00\x12\r\n\tBRANCHING\x10\x01\x12\x08\n\x04LOOP\x10\x02\"\xa2\x02\n\tRunStatus\x12)\n\x05start\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\'\n\x03\x65nd\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12/\n\x06inputs\x18\x03 \x03(\x0b\x32\x1f.jobs.dag.RunStatus.InputsEntry\x12\x31\n\x07outputs\x18\x04 \x03(\x0b\x32 .jobs.dag.RunStatus.OutputsEntry\x1a-\n\x0bInputsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a.\n\x0cOutputsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xe4\x02\n\x04\x43ode\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04\x63ode\x18\x02 \x01(\t\x12\x13\n\x0bnbox_string\x18\x03 \x01(\t\x12\x0e\n\x06lineno\x18\x04 \x01(\x05\x12\x12\n\ncol_offset\x18\x05 \x01(\x05\x12\x12\n\nend_lineno\x18\x06 \x01(\x05\x12\x16\n\x0e\x65nd_col_offset\x18\x07 \x01(\x05\x12*\n\x06inputs\x18\x08 \x03(\x0b\x32\x1a.jobs.dag.Code.InputsEntry\x12,\n\x07outputs\x18\t \x03(\x0b\x32\x1b.jobs.dag.Code.OutputsEntry\x12\"\n\nconditions\x18\n \x03(\x0b\x32\x0e.jobs.dag.Code\x1a-\n\x0bInputsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a.\n\x0cOutputsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa9\x02\n\x04Node\x12\n\n\x02id\x18\x01 \x01(\t\x12\x17\n\x0f\x65xecution_index\x18\x02 \x01(\x05\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x10\n\x08operator\x18\x04 \x01(\t\x12%\n\x04type\x18\x05 \x01(\x0e\x32\x17.jobs.dag.Node.NodeType\x12\x1c\n\x04info\x18\x06 \x01(\x0b\x32\x0e.jobs.dag.Code\x12\x13\n\x0bnbox_string\x18\x07 \x01(\t\x12\'\n\nrun_status\x18\x08 \x01(\x0b\x32\x13.jobs.dag.RunStatus\x12\x16\n\x0eparent_node_id\x18\t \x01(\t\"A\n\x08NodeType\x12\x08\n\x04\x43ODE\x10\x00\x12\x06\n\x02OP\x10\x01\x12\x08\n\x04LOOP\x10\x02\x12\r\n\tBRANCHING\x10\x03\x12\n\n\x06RETURN\x10\x04\x42\x32Z0github.com/NimbleBoxAI/jobs-architecture/jobs_pbb\x06proto3')



_DAG = DESCRIPTOR.message_types_by_name['DAG']
_DAG_SYMBOLSENTRY = _DAG.nested_types_by_name['SymbolsEntry']
_FLOWCHART = DESCRIPTOR.message_types_by_name['Flowchart']
_FLOWCHART_NODESENTRY = _FLOWCHART.nested_types_by_name['NodesEntry']
_FLOWCHART_EDGESENTRY = _FLOWCHART.nested_types_by_name['EdgesEntry']
_EDGE = DESCRIPTOR.message_types_by_name['Edge']
_RUNSTATUS = DESCRIPTOR.message_types_by_name['RunStatus']
_RUNSTATUS_INPUTSENTRY = _RUNSTATUS.nested_types_by_name['InputsEntry']
_RUNSTATUS_OUTPUTSENTRY = _RUNSTATUS.nested_types_by_name['OutputsEntry']
_CODE = DESCRIPTOR.message_types_by_name['Code']
_CODE_INPUTSENTRY = _CODE.nested_types_by_name['InputsEntry']
_CODE_OUTPUTSENTRY = _CODE.nested_types_by_name['OutputsEntry']
_NODE = DESCRIPTOR.message_types_by_name['Node']
_EDGE_EDGETYPE = _EDGE.enum_types_by_name['EdgeType']
_NODE_NODETYPE = _NODE.enum_types_by_name['NodeType']
DAG = _reflection.GeneratedProtocolMessageType('DAG', (_message.Message,), {

  'SymbolsEntry' : _reflection.GeneratedProtocolMessageType('SymbolsEntry', (_message.Message,), {
    'DESCRIPTOR' : _DAG_SYMBOLSENTRY,
    '__module__' : 'dag_pb2'
    # @@protoc_insertion_point(class_scope:jobs.dag.DAG.SymbolsEntry)
    })
  ,
  'DESCRIPTOR' : _DAG,
  '__module__' : 'dag_pb2'
  # @@protoc_insertion_point(class_scope:jobs.dag.DAG)
  })
_sym_db.RegisterMessage(DAG)
_sym_db.RegisterMessage(DAG.SymbolsEntry)

Flowchart = _reflection.GeneratedProtocolMessageType('Flowchart', (_message.Message,), {

  'NodesEntry' : _reflection.GeneratedProtocolMessageType('NodesEntry', (_message.Message,), {
    'DESCRIPTOR' : _FLOWCHART_NODESENTRY,
    '__module__' : 'dag_pb2'
    # @@protoc_insertion_point(class_scope:jobs.dag.Flowchart.NodesEntry)
    })
  ,

  'EdgesEntry' : _reflection.GeneratedProtocolMessageType('EdgesEntry', (_message.Message,), {
    'DESCRIPTOR' : _FLOWCHART_EDGESENTRY,
    '__module__' : 'dag_pb2'
    # @@protoc_insertion_point(class_scope:jobs.dag.Flowchart.EdgesEntry)
    })
  ,
  'DESCRIPTOR' : _FLOWCHART,
  '__module__' : 'dag_pb2'
  # @@protoc_insertion_point(class_scope:jobs.dag.Flowchart)
  })
_sym_db.RegisterMessage(Flowchart)
_sym_db.RegisterMessage(Flowchart.NodesEntry)
_sym_db.RegisterMessage(Flowchart.EdgesEntry)

Edge = _reflection.GeneratedProtocolMessageType('Edge', (_message.Message,), {
  'DESCRIPTOR' : _EDGE,
  '__module__' : 'dag_pb2'
  # @@protoc_insertion_point(class_scope:jobs.dag.Edge)
  })
_sym_db.RegisterMessage(Edge)

RunStatus = _reflection.GeneratedProtocolMessageType('RunStatus', (_message.Message,), {

  'InputsEntry' : _reflection.GeneratedProtocolMessageType('InputsEntry', (_message.Message,), {
    'DESCRIPTOR' : _RUNSTATUS_INPUTSENTRY,
    '__module__' : 'dag_pb2'
    # @@protoc_insertion_point(class_scope:jobs.dag.RunStatus.InputsEntry)
    })
  ,

  'OutputsEntry' : _reflection.GeneratedProtocolMessageType('OutputsEntry', (_message.Message,), {
    'DESCRIPTOR' : _RUNSTATUS_OUTPUTSENTRY,
    '__module__' : 'dag_pb2'
    # @@protoc_insertion_point(class_scope:jobs.dag.RunStatus.OutputsEntry)
    })
  ,
  'DESCRIPTOR' : _RUNSTATUS,
  '__module__' : 'dag_pb2'
  # @@protoc_insertion_point(class_scope:jobs.dag.RunStatus)
  })
_sym_db.RegisterMessage(RunStatus)
_sym_db.RegisterMessage(RunStatus.InputsEntry)
_sym_db.RegisterMessage(RunStatus.OutputsEntry)

Code = _reflection.GeneratedProtocolMessageType('Code', (_message.Message,), {

  'InputsEntry' : _reflection.GeneratedProtocolMessageType('InputsEntry', (_message.Message,), {
    'DESCRIPTOR' : _CODE_INPUTSENTRY,
    '__module__' : 'dag_pb2'
    # @@protoc_insertion_point(class_scope:jobs.dag.Code.InputsEntry)
    })
  ,

  'OutputsEntry' : _reflection.GeneratedProtocolMessageType('OutputsEntry', (_message.Message,), {
    'DESCRIPTOR' : _CODE_OUTPUTSENTRY,
    '__module__' : 'dag_pb2'
    # @@protoc_insertion_point(class_scope:jobs.dag.Code.OutputsEntry)
    })
  ,
  'DESCRIPTOR' : _CODE,
  '__module__' : 'dag_pb2'
  # @@protoc_insertion_point(class_scope:jobs.dag.Code)
  })
_sym_db.RegisterMessage(Code)
_sym_db.RegisterMessage(Code.InputsEntry)
_sym_db.RegisterMessage(Code.OutputsEntry)

Node = _reflection.GeneratedProtocolMessageType('Node', (_message.Message,), {
  'DESCRIPTOR' : _NODE,
  '__module__' : 'dag_pb2'
  # @@protoc_insertion_point(class_scope:jobs.dag.Node)
  })
_sym_db.RegisterMessage(Node)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z0github.com/NimbleBoxAI/jobs-architecture/jobs_pb'
  _DAG_SYMBOLSENTRY._options = None
  _DAG_SYMBOLSENTRY._serialized_options = b'8\001'
  _FLOWCHART_NODESENTRY._options = None
  _FLOWCHART_NODESENTRY._serialized_options = b'8\001'
  _FLOWCHART_EDGESENTRY._options = None
  _FLOWCHART_EDGESENTRY._serialized_options = b'8\001'
  _RUNSTATUS_INPUTSENTRY._options = None
  _RUNSTATUS_INPUTSENTRY._serialized_options = b'8\001'
  _RUNSTATUS_OUTPUTSENTRY._options = None
  _RUNSTATUS_OUTPUTSENTRY._serialized_options = b'8\001'
  _CODE_INPUTSENTRY._options = None
  _CODE_INPUTSENTRY._serialized_options = b'8\001'
  _CODE_OUTPUTSENTRY._options = None
  _CODE_OUTPUTSENTRY._serialized_options = b'8\001'
  _DAG._serialized_start=57
  _DAG._serialized_end=211
  _DAG_SYMBOLSENTRY._serialized_start=149
  _DAG_SYMBOLSENTRY._serialized_end=211
  _FLOWCHART._serialized_start=214
  _FLOWCHART._serialized_end=443
  _FLOWCHART_NODESENTRY._serialized_start=321
  _FLOWCHART_NODESENTRY._serialized_end=381
  _FLOWCHART_EDGESENTRY._serialized_start=383
  _FLOWCHART_EDGESENTRY._serialized_end=443
  _EDGE._serialized_start=446
  _EDGE._serialized_end=614
  _EDGE_EDGETYPE._serialized_start=558
  _EDGE_EDGETYPE._serialized_end=614
  _RUNSTATUS._serialized_start=617
  _RUNSTATUS._serialized_end=907
  _RUNSTATUS_INPUTSENTRY._serialized_start=814
  _RUNSTATUS_INPUTSENTRY._serialized_end=859
  _RUNSTATUS_OUTPUTSENTRY._serialized_start=861
  _RUNSTATUS_OUTPUTSENTRY._serialized_end=907
  _CODE._serialized_start=910
  _CODE._serialized_end=1266
  _CODE_INPUTSENTRY._serialized_start=814
  _CODE_INPUTSENTRY._serialized_end=859
  _CODE_OUTPUTSENTRY._serialized_start=861
  _CODE_OUTPUTSENTRY._serialized_end=907
  _NODE._serialized_start=1269
  _NODE._serialized_end=1566
  _NODE_NODETYPE._serialized_start=1501
  _NODE_NODETYPE._serialized_end=1566
# @@protoc_insertion_point(module_scope)
