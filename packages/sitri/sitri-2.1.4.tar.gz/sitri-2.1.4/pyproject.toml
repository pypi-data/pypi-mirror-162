[tool.poetry]
name = "sitri"
version = "2.1.4"
description = "Library for one endpoint config managment"
authors = ["Alexander Lavrov <egnod@ya.ru>"]
license = "MIT"

keywords = ["packaging", "poetry", "config", "configuration", "managment", "vault", "pydantic", "json", "yaml", "environment"]

repository = "https://github.com/Egnod/sitri"
documentation = "https://sitri.readthedocs.io"

readme = "README.md"

classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Other Environment",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.dependencies]
python = ">=3.8,<3.11"

redis = { version = "==4.3.4", optional = true }
vedis = { version = "==0.7.1", optional = true }
pyyaml = { version = "==6.0", optional = true }
hvac = { version = "==0.11.2", optional = true }
pydantic = { version = "==1.9.1", extras = ["email", "dotenv"], optional = true }
structlog = { version = "==22.1.0", optional = true }
ujson = { version = "==5.4.0", optional = true }
toml = {version = "==0.10.2", optional = true}

[tool.poetry.dev-dependencies]
pytest = "==6.2.5"
pytest-mock = "==3.7.0"
coverage = "==6.3.2"
pytest-cov = "==3.0.0"
pytest-lazy-fixture = "==0.6.3"
pytest_cases = "==3.6.11"

pre-commit = "==2.20.0"
commitizen = "==2.29.5"
pylance = "^0.0.3"

[tool.poetry.extras]
redis = ["redis"]
vedis = ["vedis"]
pyyaml = ["pyyaml"]
hvac = ["hvac"]
ujson = ["ujson"]
structlog = ["structlog"]
settings = ["pydantic", "hvac"]
pydantic = ["pydantic"]
toml = ["toml"]
all = ["redis", "vedis", "hvac", "pydantic", "pyyaml", "structlog", "ujson", "toml"]

[tool.black]
line-length = 120
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | migrations
  )
)
'''

[tool.commitizen]
version = "2.1.4"
tag_format = "$major.$minor.$patch"
version_files = [
    "sitri/__init__.py",
    "pyproject.toml",
    "docs/conf.py"
]
bump_message = "release $current_version â†’ $new_version"
update_changelog_on_bump = true
annotated_tag = true

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
