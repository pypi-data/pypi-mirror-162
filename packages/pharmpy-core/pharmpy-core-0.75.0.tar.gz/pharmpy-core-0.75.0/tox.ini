; a generative tox configuration, see: https://tox.readthedocs.io/en/latest/config.html#generative-envlist
;
[flake8]
max-line-length = 100

[tox]
ignore_basepython_conflict=True
skip_missing_interpreters=True
envlist =
    clean,
    check,
    py{38,39,310}{,-check,-unit,-doctest,-report},
    report,
    sphinxtest,
    docs

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310

[gh-actions:env]
TOX_FACTOR =
    unit: unit
    doctest: doctest
    lint: check

[testenv]
basepython = {env:TOXPYTHON:python3.9}
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
    PYTHONASYNCIODEBUG=1
    PHARMPYNOCONFIGFILE=1
passenv =
    *
usedevelop = false
deps =
    setuptools>=47.1.1
    -rrequirements.txt
    pytest>5.3.5
    pytest-asyncio>=0.17.0
    pytest-cov
    pytest-xdist>1.34.0
    pytest-profiling
    gprof2dot==2019.11.30
    pdbpp
commands =
    {posargs:pytest -n 8 --asyncio-mode=auto --cov --cov-report=term-missing --cov-report xml:.coverage.xml -vv tests}
whitelist_externals = rm


[testenv:spell]
basepython = {env:TOXPYTHON:python2.7}
setenv =
    SPELLCHECK=1
commands =
    sphinx-build -j auto -b spelling docs dist/docs
skip_install = true
deps =
    -r{toxinidir}/docs/requirements.txt
    sphinxcontrib-spelling
    pyenchant

[testenv:py{38,39,310}-doctest]
commands =
    pytest -W ignore::UserWarning -n 8 --asyncio-mode=auto --cov --cov-report=term-missing --cov-report xml:.coverage.xml -vv --doctest-modules src

[testenv:sphinxtest]
deps =
    -rrequirements.txt
    -r{toxinidir}/docs/requirements.txt
commands =
    pip install ipykernel==5.5.5  # Unable to build docs with newer version
    pip install sphinx==4.5.0   # Cannot use >=5: blocked by sphinx-tabs
    pip install sphinx-tabs==3.3.1
    sphinx-build {posargs:-E} -j auto -b doctest docs dist/docs

[testenv:docs]
deps =
    -rrequirements.txt
    -r{toxinidir}/docs/requirements.txt
commands =
    pip install ipykernel==5.5.5  # Unable to build docs with newer version
    pip install sphinx==4.5.0   # Cannot use >=5: blocked by sphinx-tabs
    pip install sphinx-tabs==3.3.1
    rm -rf docs/api
    sphinx-build {posargs:-E} -j auto -b html docs dist/docs
    sphinx-build -j auto -b linkcheck docs dist/docs

[testenv:{py38-,py39-,py310-,}check]
deps =
    docutils
    check-manifest >= 0.45
    flake8
    readme-renderer
    pygments
    isort >= 5.0.0
    twine
    black
    flake8-black
skip_install = true
commands =
    check-manifest -v {toxinidir}
    black src tests setup.py
    flake8 src tests setup.py
    isort -m3 --tc src tests setup.py

[testenv:coveralls]
deps =
    coveralls
skip_install = true
commands =
    coveralls []

[testenv:codecov]
deps =
    codecov
skip_install = true
commands =
    coverage xml --ignore-errors
    codecov []


[testenv:{py38-,py39-,py310-,}report]
deps = coverage
skip_install = true
commands =
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage

[testenv:run]
deps =
    -rrequirements.txt
setenv =
    PHARMPYNOCONFIGFILE=0

[testenv:integration]
deps =
    pytest>5.3.5
    pytest-asyncio>=0.17.0
    pytest-cov
    -rrequirements.txt
setenv =
    PHARMPYNOCONFIGFILE=0
commands =
    {posargs:pytest -vv --cov --cov-report=term-missing --cov-report xml:.coverage.xml tests/integration}

[testenv:licenses]
deps =
    -rrequirements.txt
    pip-licenses
commands =
    pip-licenses

[testenv:doccheck]
deps =
    darglint
commands =
    darglint --docstring-style numpy -z long src/pharmpy/modeling
