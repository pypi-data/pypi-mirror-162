[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "xsget"
authors = [{name = "Kian-Meng, Ang", email = "kianmeng@cpan.org"}]
license = {file = "LICENSE.md"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Text Processing :: General",
    "Topic :: Text Processing :: Markup :: HTML",
]
dynamic = ["version", "description"]
readme = "README.md"
requires-python = ">=3.7"
dependencies = [
    "aiofiles",
    "aiohttp",
    "bs4",
    "lxml",
    "natsort",
    "regex",
    "tomlkit",
    "user_agent",
]

[project.optional-dependencies]
dev = [
    "black",
    "isort",
    "pre-commit",
    "tox",
]

test = [
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-mock",
    "pytest-console-scripts",
    "types-aiofiles",
]

docs = [
    "sphinx",
    "myst_parser",
    "sphinx_copybutton",
    "sphinx_autobuild",
]

lint = [
    "flake8",
    "flake8-docstrings",
    "flake8-pytest-style",
    "pylint",
    "pytest",
]

type = [
    "mypy",
    "types-aiofiles",
]

[project.urls]
Source = "https://github.com/kianmeng/xsget"
Issues = "https://github.com/kianmeng/xsget/issues"

[project.scripts]
xsget = "xsget.xsget:cli"
xstxt = "xsget.xstxt:cli"

[tool.isort]
profile = "black"
line_length = 79
py_version=310

[tool.black]
line-length = 79
target-version = ["py310"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-vv -s -q -x"
asyncio_mode = "strict"
script_launch_mode = "subprocess"

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py37,py38,py39,py310,lint,cover,doc,type

[testenv]
description = testing against {basepython}
deps = .[test]
commands = pytest --hide-run-results

[testenv:lint]
description = check code style with flake8 and pylint
basepython = python3.10
deps =
    .[format]
    .[lint]
commands =
    isort --check-only --diff {toxinidir}
    black --check --diff {toxinidir}
    flake8 --docstring-convention=google {toxinidir}
    pylint {toxinidir}/xsget
    pylint {toxinidir}/tests

[testenv:cover]
description = generate code coverage report in html
basepython = python3.10
deps = .[test]
commands = pytest --cov=xsget --cov-report term-missing --cov-report html {toxinidir}/tests

[testenv:doc]
description = generate sphinx documentation in html
basepython = python3.10
deps = .[doc]
commands = sphinx-build {toxinidir}/docs/source/ {toxinidir}/docs/_build/html

[testenv:type]
description = check type with mypy
basepython = python3.10
deps = .[type]
commands =
    mypy --install-types --non-interactive
    mypy --config-file {toxinidir}/pyproject.toml {toxinidir}/xsget
"""

[tool.mypy]
ignore_missing_imports = true
