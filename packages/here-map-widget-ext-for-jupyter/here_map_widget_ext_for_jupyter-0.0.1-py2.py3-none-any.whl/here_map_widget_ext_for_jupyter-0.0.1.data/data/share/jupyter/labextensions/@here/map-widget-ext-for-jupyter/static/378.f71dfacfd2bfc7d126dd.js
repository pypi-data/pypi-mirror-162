"use strict";(self.webpackChunk_here_map_widget_ext_for_jupyter=self.webpackChunk_here_map_widget_ext_for_jupyter||[]).push([[378],{3378:(e,t,r)=>{r.r(t),r.d(t,{default:()=>i});var n=r(7287);function o(e,t,r){if(null!==e)for(var n,i,l,a,u,f,g,s,c=0,y=0,h=e.type,p="FeatureCollection"===h,_="Feature"===h,k=p?e.features.length:1,m=0;m<k;m++){u=(s=!!(g=p?e.features[m].geometry:_?e.geometry:e)&&"GeometryCollection"===g.type)?g.geometries.length:1;for(var P=0;P<u;P++){var b=0,w=0;if(null!==(a=s?g.geometries[P]:g)){f=a.coordinates;var d=a.type;switch(c=!r||"Polygon"!==d&&"MultiPolygon"!==d?0:1,d){case null:break;case"Point":if(!1===t(f,y,m,b,w))return!1;y++,b++;break;case"LineString":case"MultiPoint":for(n=0;n<f.length;n++){if(!1===t(f[n],y,m,b,w))return!1;y++,"MultiPoint"===d&&b++}"LineString"===d&&b++;break;case"Polygon":case"MultiLineString":for(n=0;n<f.length;n++){for(i=0;i<f[n].length-c;i++){if(!1===t(f[n][i],y,m,b,w))return!1;y++}"MultiLineString"===d&&b++,"Polygon"===d&&w++}"Polygon"===d&&b++;break;case"MultiPolygon":for(n=0;n<f.length;n++){for(w=0,i=0;i<f[n].length;i++){for(l=0;l<f[n][i].length-c;l++){if(!1===t(f[n][i][l],y,m,b,w))return!1;y++}w++}b++}break;case"GeometryCollection":for(n=0;n<a.geometries.length;n++)if(!1===o(a.geometries[n],t,r))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}const i=function(e,t){void 0===t&&(t={});var r=0,i=0,l=0;return o(e,(function(e){r+=e[0],i+=e[1],l++}),!0),(0,n.point)([r/l,i/l],t.properties)}}}]);